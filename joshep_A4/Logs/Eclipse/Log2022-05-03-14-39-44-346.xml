<Events startTimestamp="1651603184346" logVersion="1.0.0.202201202038">
  <Command __id="102" _type="ShellCommand" date="Tue May 03 14:57:07 EDT 2022" starttimestamp="1651603184346" timestamp="1043456" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="104" _type="ShellCommand" date="Tue May 03 14:57:08 EDT 2022" starttimestamp="1651603184346" timestamp="1044226" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="105" _type="ShellCommand" date="Tue May 03 14:57:09 EDT 2022" starttimestamp="1651603184346" timestamp="1045054" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="79" _type="DiffBasedFileOpenCommand" date="Tue May 03 14:53:31 EDT 2022" docLength="135" projectName="SML" starttimestamp="1651603184346" timestamp="827041">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\SML\example.sml]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"structure Sum = struct¶	val sum = fold1 (op +) 0¶	fun println s = print (s ^ "\n")¶	val printSum = println o Int.toString o sum¶end")]]]></diff>
  </Command>
  <Command __id="106" _type="DiffBasedFileOpenCommand" date="Tue May 03 14:57:09 EDT 2022" docLength="135" projectName="SML" starttimestamp="1651603184346" timestamp="1045119">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\SML\example.sml]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"structure Sum = struct¶	val sum = fold1 (op +) 0¶	fun println s = print (s ^ "\n")¶	val printSum = println o Int.toString o sum¶end")]]]></diff>
  </Command>
  <Command __id="108" _type="PauseCommand" date="Tue May 03 14:57:19 EDT 2022" range="10s-20s" starttimestamp="1651603184346" timestamp="1055406">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[10287]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="109" _type="MoveCaretCommand" caretOffset="622" date="Tue May 03 14:57:19 EDT 2022" docOffset="622" starttimestamp="1651603184346" timestamp="1055620" />
  <Command __id="111" _type="PauseCommand" date="Tue May 03 14:57:22 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="1057991">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2371]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="110" _type="ShellCommand" date="Tue May 03 14:57:22 EDT 2022" starttimestamp="1651603184346" timestamp="1057991" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="113" _type="PauseCommand" date="Tue May 03 14:57:35 EDT 2022" range="10s-20s" starttimestamp="1651603184346" timestamp="1071526">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13535]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="112" _type="ShellCommand" date="Tue May 03 14:57:35 EDT 2022" starttimestamp="1651603184346" timestamp="1071526" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="115" _type="PauseCommand" date="Tue May 03 14:57:37 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="1073159">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1633]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="114" _type="ShellCommand" date="Tue May 03 14:57:37 EDT 2022" starttimestamp="1651603184346" timestamp="1073159" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="117" _type="PauseCommand" date="Tue May 03 15:01:47 EDT 2022" range="2m-5m" starttimestamp="1651603184346" timestamp="1322655">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[249495]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="163" _type="ShellCommand" date="Tue May 03 15:13:47 EDT 2022" starttimestamp="1651603184346" timestamp="2043036" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="165" _type="EclipseCommand" commandID="org.eclipse.ui.file.properties" date="Tue May 03 15:13:47 EDT 2022" starttimestamp="1651603184346" timestamp="2043073" />
  <Command __id="167" _type="PauseCommand" date="Tue May 03 15:13:52 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2048036">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4963]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="166" _type="SelectTextCommand" caretOffset="379" date="Tue May 03 15:13:52 EDT 2022" end="379" start="156" starttimestamp="1651603184346" timestamp="2048036" />
  <Command __id="169" _type="PasteCommand" date="Tue May 03 15:13:52 EDT 2022" starttimestamp="1651603184346" timestamp="2048256" />
  <Command __id="107" _type="DiffBasedFileOpenCommand" date="Tue May 03 14:57:19 EDT 2022" docASTNodeCount="43" docActiveCodeLength="538" docExpressionCount="23" docLength="622" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="1055406">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A4\src\a4\RunFA21A4Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a4;
import gradingTools.comp524f21.assignment4.F21Assignment4Suite;

public class RunFA21A4Tests {
	static final String PROJECT_LOCATION =
			"C:\\Users\\User\\OneDrive - University of North Carolina at Chapel Hill\\Desktop\\OneDrive - University of North Carolina at Chapel Hill\\Education\\College\\FA21\\COMP524- Programming Language Concepts\\Assignments\\A4 SML";
	public static void main (String[] args) {
		// Tracer.showInfo(true);
		// GraderBasicsTraceUtility.setBufferTracedMessages(false);
		F21Assignment4Suite.setProjectLocation(PROJECT_LOCATION);
		F21Assignment4Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="168" _type="Replace" date="Tue May 03 15:13:52 EDT 2022" docASTNodeCount="43" docActiveCodeLength="370" docExpressionCount="23" docLength="454" endLine="5" insertionLength="55" int_docASTNodeCount="43" int_docActiveCodeLength="315" int_docExpressionCount="23" int_docLength="399" length="223" offset="156" startLine="5" starttimestamp="1651603184346" timestamp="2048228">
    <deletedText><![CDATA[C:\\Users\\User\\OneDrive - University of North Carolina at Chapel Hill\\Desktop\\OneDrive - University of North Carolina at Chapel Hill\\Education\\College\\FA21\\COMP524- Programming Language Concepts\\Assignments\\A4 SML]]></deletedText>
    <insertedText><![CDATA[http://andriusvelykis.github.io/ml-dev/updates/nightly/]]></insertedText>
  </DocumentChange>
  <Command __id="171" _type="PauseCommand" date="Tue May 03 15:13:54 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2050036">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1780]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="184" _type="ShellCommand" date="Tue May 03 15:14:12 EDT 2022" starttimestamp="1651603184346" timestamp="2068176" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="186" _type="PasteCommand" date="Tue May 03 15:14:12 EDT 2022" starttimestamp="1651603184346" timestamp="2068209" />
  <Command __id="187" _type="MoveCaretCommand" caretOffset="156" date="Tue May 03 15:14:13 EDT 2022" docOffset="156" starttimestamp="1651603184346" timestamp="2068953" />
  <Command __id="189" _type="PauseCommand" date="Tue May 03 15:14:17 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2073120">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4167]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="188" _type="SelectTextCommand" caretOffset="379" date="Tue May 03 15:14:17 EDT 2022" end="379" start="156" starttimestamp="1651603184346" timestamp="2073120" />
  <Command __id="191" _type="PasteCommand" date="Tue May 03 15:14:17 EDT 2022" starttimestamp="1651603184346" timestamp="2073433" />
  <Command __id="193" _type="PauseCommand" date="Tue May 03 15:14:19 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2074746">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1312]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="198" _type="ShellCommand" date="Tue May 03 15:14:30 EDT 2022" starttimestamp="1651603184346" timestamp="2086576" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="200" _type="PasteCommand" date="Tue May 03 15:14:31 EDT 2022" starttimestamp="1651603184346" timestamp="2087146" />
  <Command __id="202" _type="PauseCommand" date="Tue May 03 15:14:36 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2091888">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4741]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="201" _type="MoveCaretCommand" caretOffset="284" date="Tue May 03 15:14:36 EDT 2022" docOffset="284" starttimestamp="1651603184346" timestamp="2091887" />
  <Command __id="204" _type="PauseCommand" date="Tue May 03 15:14:38 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2094350">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2463]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="203" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue May 03 15:14:38 EDT 2022" starttimestamp="1651603184346" timestamp="2094350" />
  <Command __id="205" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:14:38 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2094551" type="Run" />
  <Command __id="206" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:14:38 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2094552" type="Run" />
  <Command __id="208" _type="PauseCommand" date="Tue May 03 15:14:40 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2096324">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1771]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="207" _type="ConsoleOutput" date="Tue May 03 15:14:40 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2096323" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Standard ML of New Jersey (32-bit) v110.98 [built: Fri Jul 17 15:16:19 2020]¶- [opening example"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting"), Diff(EQUAL,".sml"), Diff(DELETE,"]"), Diff(EQUAL,"¶"), Diff(DELETE,"[autoloading]¶[library $SMLNJ-BASIS/basis.cm is stable]¶[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]¶[autoloading done]¶example.sml:2.12-2.17 Error: unbound variable or constructor: fold1¶¶val it = () : unit¶- "), Diff(INSERT,"Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="210" _type="PauseCommand" date="Tue May 03 15:14:42 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2097854">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1531]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="209" _type="ShellCommand" date="Tue May 03 15:14:42 EDT 2022" starttimestamp="1651603184346" timestamp="2097854" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="212" _type="PauseCommand" date="Tue May 03 15:14:43 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2099006">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1152]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="211" _type="ExceptionCommand" date="Tue May 03 15:14:43 EDT 2022" starttimestamp="1651603184346" timestamp="2099006" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="213" _type="ConsoleOutput" date="Tue May 03 15:14:44 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2099713" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):657
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Test execution time (ms):657"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="215" _type="PauseCommand" date="Tue May 03 15:14:45 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2100778">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1065]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="214" _type="ConsoleOutput" date="Tue May 03 15:14:45 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2100778" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@3906e737 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):657"), Diff(INSERT,"Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@3906e737 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="217" _type="PauseCommand" date="Tue May 03 15:14:47 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2102816">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2038]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="216" _type="ShellCommand" date="Tue May 03 15:14:47 EDT 2022" starttimestamp="1651603184346" timestamp="2102816" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="218" _type="ShellCommand" date="Tue May 03 15:14:47 EDT 2022" starttimestamp="1651603184346" timestamp="2103335" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="219" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:14:47 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2103520" type="Run" />
  <Command __id="220" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:14:47 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2103521" type="Run" />
  <Command __id="222" _type="PauseCommand" date="Tue May 03 15:15:06 EDT 2022" range="10s-20s" starttimestamp="1651603184346" timestamp="2122202">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[18681]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="221" _type="ShellCommand" date="Tue May 03 15:15:06 EDT 2022" starttimestamp="1651603184346" timestamp="2122202" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="224" _type="PauseCommand" date="Tue May 03 15:15:07 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2123208">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1006]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="223" _type="ShellCommand" date="Tue May 03 15:15:07 EDT 2022" starttimestamp="1651603184346" timestamp="2123208" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="226" _type="PauseCommand" date="Tue May 03 15:15:10 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2126331">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3123]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="225" _type="ShellCommand" date="Tue May 03 15:15:10 EDT 2022" starttimestamp="1651603184346" timestamp="2126331" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="227" _type="ShellCommand" date="Tue May 03 15:15:11 EDT 2022" starttimestamp="1651603184346" timestamp="2127235" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="229" _type="PauseCommand" date="Tue May 03 15:16:19 EDT 2022" range="1m-2m" starttimestamp="1651603184346" timestamp="2194753">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[67518]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="228" _type="ShellCommand" date="Tue May 03 15:16:19 EDT 2022" starttimestamp="1651603184346" timestamp="2194753" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="231" _type="PauseCommand" date="Tue May 03 15:16:22 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2198319">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3566]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="230" _type="ShellCommand" date="Tue May 03 15:16:22 EDT 2022" starttimestamp="1651603184346" timestamp="2198319" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="233" _type="PauseCommand" date="Tue May 03 15:16:24 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2200529">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2210]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="232" _type="ShellCommand" date="Tue May 03 15:16:24 EDT 2022" starttimestamp="1651603184346" timestamp="2200529" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="234" _type="ShellCommand" date="Tue May 03 15:16:25 EDT 2022" starttimestamp="1651603184346" timestamp="2201314" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="236" _type="PauseCommand" date="Tue May 03 15:18:19 EDT 2022" range="1m-2m" starttimestamp="1651603184346" timestamp="2314844">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[113530]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="235" _type="ShellCommand" date="Tue May 03 15:18:19 EDT 2022" starttimestamp="1651603184346" timestamp="2314844" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="238" _type="PauseCommand" date="Tue May 03 15:18:23 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2318985">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4141]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="237" _type="ShellCommand" date="Tue May 03 15:18:23 EDT 2022" starttimestamp="1651603184346" timestamp="2318985" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="240" _type="PauseCommand" date="Tue May 03 15:19:27 EDT 2022" range="1m-2m" starttimestamp="1651603184346" timestamp="2383369">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[64384]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="276" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:21:16 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2491913" type="Run" />
  <Command __id="278" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:21:16 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2491913" type="Run" />
  <Command __id="280" _type="PauseCommand" date="Tue May 03 15:21:17 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2493540">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1627]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="279" _type="ConsoleOutput" date="Tue May 03 15:21:17 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2493540" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@3906e737 . Results may change."), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="282" _type="PauseCommand" date="Tue May 03 15:21:19 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2494888">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1348]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="281" _type="ShellCommand" date="Tue May 03 15:21:19 EDT 2022" starttimestamp="1651603184346" timestamp="2494888" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="284" _type="PauseCommand" date="Tue May 03 15:21:20 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2496303">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1415]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="283" _type="ExceptionCommand" date="Tue May 03 15:21:20 EDT 2022" starttimestamp="1651603184346" timestamp="2496303" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="285" _type="ConsoleOutput" date="Tue May 03 15:21:21 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2497019" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):664
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Test execution time (ms):664"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="286" _type="ConsoleOutput" date="Tue May 03 15:21:21 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2497516" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@6182020a . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):664"), Diff(INSERT,"Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@6182020a . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="287" _type="ConsoleOutput" date="Tue May 03 15:21:22 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2498387" type="ConsoleOutput">
    <outputString><![CDATA[SocialDistanceSMLProvided did not pass completely:C:\Users\User\eclipse-workspace\SML\src/SocialDistance.sml not found%0.0

Test execution time (ms):3
PrintSafety did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):6
ConcisePrintSafety did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):0
ListPrintSafety did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):1
MatchingSafe did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):1
MatchingGivenSafe did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):1
MatchingDerivedSafe did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@6182020a . Results may change."), Diff(INSERT,"SocialDistanceSMLProvided did not pass completely:C:\Users\User\eclipse-workspace\SML\src/SocialDistance.sml not found%0.0¶¶Test execution time (ms):3¶PrintSafety did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):6¶ConcisePrintSafety did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):0¶ListPrintSafety did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):1¶MatchingSafe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):1¶MatchingGivenSafe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):1¶MatchingDerivedSafe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="289" _type="PauseCommand" date="Tue May 03 15:21:24 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2499829">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1441]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="288" _type="ConsoleOutput" date="Tue May 03 15:21:24 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2499828" type="ConsoleOutput">
    <outputString><![CDATA[CurriedOnceInterpolatedSafe did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):0
CurriedTwiceInterpolatedSafe did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):1
CurryableInterpolatedSafe did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):0
CurryableMatchingSafe did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):1
CurriedMatchingDerivedSafe did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):7
CurriedMatchingGivenSafe did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"SocialDistanceSMLProvided did not pass completely:C:\Users\User\eclipse-workspace\SML\src/SocialDistance.sml not found%0.0¶¶Test execution time (ms):3¶Print"), Diff(INSERT,"CurriedOnceInterpolated"), Diff(EQUAL,"Safe"), Diff(DELETE,"ty"), Diff(EQUAL," did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):"), Diff(DELETE,"6"), Diff(INSERT,"0"), Diff(EQUAL,"¶C"), Diff(DELETE,"oncisePrint"), Diff(INSERT,"urriedTwiceInterpolated"), Diff(EQUAL,"Safe"), Diff(DELETE,"ty"), Diff(EQUAL," did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶"), Diff(DELETE,"ListPrint"), Diff(INSERT,"CurryableInterpolated"), Diff(EQUAL,"Safe"), Diff(DELETE,"ty"), Diff(EQUAL," did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶"), Diff(INSERT,"Curryable"), Diff(EQUAL,"MatchingSafe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):1¶"), Diff(INSERT,"Curried"), Diff(EQUAL,"Matching"), Diff(DELETE,"G"), Diff(INSERT,"Der"), Diff(EQUAL,"ive"), Diff(DELETE,"n"), Diff(INSERT,"d"), Diff(EQUAL,"Safe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"7"), Diff(EQUAL,"¶"), Diff(INSERT,"Curried"), Diff(EQUAL,"Matching"), Diff(DELETE,"Der"), Diff(INSERT,"G"), Diff(EQUAL,"ive"), Diff(DELETE,"d"), Diff(INSERT,"n"), Diff(EQUAL,"Safe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="291" _type="PauseCommand" date="Tue May 03 15:21:25 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2501277">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1449]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="290" _type="ConsoleOutput" date="Tue May 03 15:21:25 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2501277" type="ConsoleOutput">
    <outputString><![CDATA[GivenSafeSML did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):1
InterpolatedSafeSML did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"CurriedOnceInterpolatedSafe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):0¶CurriedTwiceInterpolatedSafe"), Diff(INSERT,"GivenSafeSML"), Diff(EQUAL," did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):1¶"), Diff(DELETE,"Curryable"), Diff(EQUAL,"InterpolatedSafe"), Diff(DELETE," did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):0¶CurryableMatchingSafe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):1¶CurriedMatchingDerivedSafe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):7¶CurriedMatchingGivenSafe did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):0"), Diff(INSERT,"SML did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="293" _type="PauseCommand" date="Tue May 03 15:21:26 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2502310">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1033]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="292" _type="ConsoleOutput" date="Tue May 03 15:21:26 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2502310" type="ConsoleOutput">
    <outputString><![CDATA[ListDerivedSafeSML did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GivenSafeSML did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):1¶Interpolat"), Diff(INSERT,"ListDeriv"), Diff(EQUAL,"edSafeSML did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="295" _type="PauseCommand" date="Tue May 03 15:21:28 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2504466">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2156]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="294" _type="ConsoleOutput" date="Tue May 03 15:21:28 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2504466" type="ConsoleOutput">
    <outputString><![CDATA[StyleTest did not pass completely:A Social Distance File not Found%0.0

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ListDerivedSafeSML"), Diff(INSERT,"StyleTest"), Diff(EQUAL," did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="297" _type="PauseCommand" date="Tue May 03 15:21:31 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2506691">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2225]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="296" _type="ConsoleOutput" date="Tue May 03 15:21:31 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2506691" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment3.styleParsing.StyleTest@30f95379 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"StyleTest did not pass completely:A Social Distance File not Found%0.0¶¶Test execution time (ms):0"), Diff(INSERT,"Re-running test gradingTools.comp524f20.assignment3.styleParsing.StyleTest@30f95379 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="299" _type="PauseCommand" date="Tue May 03 15:21:34 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2510324">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3633]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="298" _type="ConsoleOutput" date="Tue May 03 15:21:34 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2510324" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment3.functionParamaters.PrintSafety@f875168 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f20.assignment3."), Diff(DELETE,"styleParsing.StyleTest@30f95379"), Diff(INSERT,"functionParamaters.PrintSafety@f875168"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="301" _type="PauseCommand" date="Tue May 03 15:21:37 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2512851">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2527]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="300" _type="ShellCommand" date="Tue May 03 15:21:37 EDT 2022" starttimestamp="1651603184346" timestamp="2512851" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="302" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:21:37 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2513506" type="Run" />
  <Command __id="303" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:21:37 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2513506" type="Run" />
  <Command __id="305" _type="PauseCommand" date="Tue May 03 15:21:41 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2517208">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3702]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="304" _type="ShellCommand" date="Tue May 03 15:21:41 EDT 2022" starttimestamp="1651603184346" timestamp="2517208" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="307" _type="PauseCommand" date="Tue May 03 15:22:14 EDT 2022" range="30s-1m" starttimestamp="1651603184346" timestamp="2549682">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[32474]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="312" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:22:25 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2561002" type="Run" />
  <Command __id="314" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:22:25 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2561003" type="Run" />
  <Command __id="316" _type="PauseCommand" date="Tue May 03 15:22:26 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2562596">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1593]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="315" _type="ConsoleOutput" date="Tue May 03 15:22:26 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2562596" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f20.assignment3.functionParamaters.PrintSafety@f875168 . Results may change."), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="318" _type="PauseCommand" date="Tue May 03 15:22:28 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2563899">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1303]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="317" _type="ShellCommand" date="Tue May 03 15:22:28 EDT 2022" starttimestamp="1651603184346" timestamp="2563899" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="320" _type="PauseCommand" date="Tue May 03 15:22:29 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2565648">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1749]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="319" _type="ExceptionCommand" date="Tue May 03 15:22:29 EDT 2022" starttimestamp="1651603184346" timestamp="2565648" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="321" _type="ConsoleOutput" date="Tue May 03 15:22:30 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2566341" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):645
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Test execution time (ms):645"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="322" _type="ConsoleOutput" date="Tue May 03 15:22:31 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2567307" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"645"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="324" _type="PauseCommand" date="Tue May 03 15:22:35 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2570723">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3416]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="323" _type="ConsoleOutput" date="Tue May 03 15:22:35 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2570723" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="326" _type="PauseCommand" date="Tue May 03 15:22:40 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="2576385">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5662]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="325" _type="ConsoleOutput" date="Tue May 03 15:22:40 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2576385" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9126
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9126¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="328" _type="PauseCommand" date="Tue May 03 15:22:44 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2579858">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3473]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="327" _type="ConsoleOutput" date="Tue May 03 15:22:44 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2579858" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):9126¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="330" _type="PauseCommand" date="Tue May 03 15:22:49 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="2585500">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5642]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="329" _type="ConsoleOutput" date="Tue May 03 15:22:49 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2585500" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9108
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9108¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="332" _type="PauseCommand" date="Tue May 03 15:22:51 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2586793">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1293]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="331" _type="ConsoleOutput" date="Tue May 03 15:22:51 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2586793" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1237
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"9108¶Number of traces > 600  turning tracing off"), Diff(INSERT,"1237"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="334" _type="PauseCommand" date="Tue May 03 15:22:53 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2589571">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2778]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="333" _type="ConsoleOutput" date="Tue May 03 15:22:53 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2589571" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2773
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1237"), Diff(INSERT,"2773"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="336" _type="PauseCommand" date="Tue May 03 15:22:56 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2592289">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2718]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="335" _type="ConsoleOutput" date="Tue May 03 15:22:56 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2592289" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2714
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(DELETE,"73"), Diff(INSERT,"14"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="338" _type="PauseCommand" date="Tue May 03 15:22:59 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2595001">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2712]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="337" _type="ConsoleOutput" date="Tue May 03 15:22:59 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2595001" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2703
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(DELETE,"14"), Diff(INSERT,"03"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="340" _type="PauseCommand" date="Tue May 03 15:23:03 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2599111">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4110]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="339" _type="ConsoleOutput" date="Tue May 03 15:23:03 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2599111" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1145
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2703"), Diff(INSERT,"1145"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="341" _type="ConsoleOutput" date="Tue May 03 15:23:04 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2599949" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):831
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1145"), Diff(INSERT,"831"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="343" _type="PauseCommand" date="Tue May 03 15:23:07 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2602703">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2754]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="342" _type="ConsoleOutput" date="Tue May 03 15:23:07 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2602703" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2797
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"831"), Diff(INSERT,"2797"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="345" _type="PauseCommand" date="Tue May 03 15:23:09 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2605516">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2813]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="344" _type="ConsoleOutput" date="Tue May 03 15:23:09 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2605516" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2756
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(DELETE,"97"), Diff(INSERT,"56"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="347" _type="PauseCommand" date="Tue May 03 15:23:12 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2608207">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2691]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="346" _type="ConsoleOutput" date="Tue May 03 15:23:12 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2608207" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2685
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"756"), Diff(INSERT,"685"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="349" _type="PauseCommand" date="Tue May 03 15:23:15 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2610902">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2695]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="348" _type="ConsoleOutput" date="Tue May 03 15:23:15 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2610902" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2691
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):26"), Diff(DELETE,"85"), Diff(INSERT,"91"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="350" _type="ShellCommand" date="Tue May 03 15:23:16 EDT 2022" starttimestamp="1651603184346" timestamp="2611841" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="351" _type="ShellCommand" date="Tue May 03 15:23:16 EDT 2022" starttimestamp="1651603184346" timestamp="2612616" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="353" _type="PauseCommand" date="Tue May 03 15:23:22 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="2617928">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5312]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="352" _type="ConsoleOutput" date="Tue May 03 15:23:22 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2617928" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2706
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"691"), Diff(INSERT,"706"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="355" _type="PauseCommand" date="Tue May 03 15:23:25 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2620682">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2754]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="354" _type="ConsoleOutput" date="Tue May 03 15:23:25 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2620682" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2699
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"706"), Diff(INSERT,"699"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="357" _type="PauseCommand" date="Tue May 03 15:23:56 EDT 2022" range="30s-1m" starttimestamp="1651603184346" timestamp="2651999">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[31317]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="356" _type="ExceptionCommand" date="Tue May 03 15:23:56 EDT 2022" starttimestamp="1651603184346" timestamp="2651999" type="Exception">
    <exceptionString><![CDATA[The following output was collected:
0              ../cm/parse/parse.sml:502.47
1 - Results:val it = () : unit
2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall
3 
4 - stdIn:1.2-2.17 Warning: type vars not generalized because of
5    value restriction are instantiated to dummy types (X1,X2,...)
The following tests were not passed:
no disallowed functions: pass
matching derived safe calls matching safe with matcher: pass
matching given safe calls matching safe with matcher: pass
curryable interpolated safe calls interpolated safe: pass
curried once interpolated safe calls curryable interpolated safe: pass
curried twice interpolated safe calls curried once interpolated safe: pass
curried matching given safe calls curryable matching safe with given safe matcher: pass
curried matching derived safe calls curryable matching safe with derived safe matcher: pass
no magic numbers in functions: pass
StyleTest did not pass completely:View console for more detail%0.0

Test execution time (ms):664
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="358" _type="ConsoleOutput" date="Tue May 03 15:23:56 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2652000" type="ConsoleOutput">
    <outputString><![CDATA[The following output was collected:
0              ../cm/parse/parse.sml:502.47
1 - Results:val it = () : unit
2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall
3 
4 - stdIn:1.2-2.17 Warning: type vars not generalized because of
5    value restriction are instantiated to dummy types (X1,X2,...)
The following tests were not passed:
no disallowed functions: pass
matching derived safe calls matching safe with matcher: pass
matching given safe calls matching safe with matcher: pass
curryable interpolated safe calls interpolated safe: pass
curried once interpolated safe calls curryable interpolated safe: pass
curried twice interpolated safe calls curried once interpolated safe: pass
curried matching given safe calls curryable matching safe with given safe matcher: pass
curried matching derived safe calls curryable matching safe with derived safe matcher: pass
no magic numbers in functions: pass
StyleTest did not pass completely:View console for more detail%0.0

Test execution time (ms):664
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"The following output was collected:¶0              ../cm/parse/parse.sml:502.47¶1 - Results:val it = () : unit¶2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall¶3 ¶4 - stdIn:1.2-2.17 Warning: type vars not generalized because of¶5    value restriction are instantiated to dummy types (X1,X2,...)¶The following tests were not passed:¶no disallowed functions: pass¶matching derived safe calls matching safe with matcher: pass¶matching given safe calls matching safe with matcher: pass¶curryable interpolated safe calls interpolated safe: pass¶curried once interpolated safe calls curryable interpolated safe: pass¶curried twice interpolated safe calls curried once interpolated safe: pass¶curried matching given safe calls curryable matching safe with given safe matcher: pass¶curried matching derived safe calls curryable matching safe with derived safe matcher: pass¶no magic numbers in functions: pass¶StyleTest did not pass completely:View console for more detail%0.0¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2699"), Diff(INSERT,"664"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="360" _type="PauseCommand" date="Tue May 03 15:24:02 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="2657889">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5889]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="359" _type="ConsoleOutput" date="Tue May 03 15:24:02 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2657889" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2710
Re-running test gradingTools.comp524f20.assignment3.listsAndRecursion.ListDerivedSafeSML@1a7479b7 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"he following output was collected:¶0              ../cm/parse/parse.sml:502.47¶1 - Results:val it = () : unit¶2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall¶3 ¶4 - stdIn:1.2-2.17 Warning: type vars not generalized because of¶5    value restriction are instantiated to dummy types (X1,X2,...)¶The following tests were not passed:¶no disallowed functions: pass¶matching derived safe calls matching safe with matcher: pass¶matching given safe calls matching safe with matcher: pass¶curryable interpolated safe calls interpolated safe: pass¶curried once interpolated safe calls curryable interpolated safe: pass¶curried twice interpolated safe calls curried once interpolated safe: pass¶curried matching given safe calls curryable matching safe with given safe matcher: pass¶curried matching d"), Diff(INSERT,"est execution time (ms):2710¶Re-running test gradingTools.comp524f20.assignment3.listsAndRecursion.ListD"), Diff(EQUAL,"erived"), Diff(DELETE," s"), Diff(INSERT,"S"), Diff(EQUAL,"afe"), Diff(DELETE," calls curryable matching safe with derived safe matcher: pass¶no magic numbers in functions: pass¶StyleTest did not pass completely:View console for more detail%0.0¶¶Test execution time (ms):664"), Diff(INSERT,"SML@1a7479b7 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="362" _type="PauseCommand" date="Tue May 03 15:24:03 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2658950">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1061]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="361" _type="ConsoleOutput" date="Tue May 03 15:24:03 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2658950" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment3.listsAndRecursion.ListDerivedSafeSML@1a7479b7 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2710¶"), Diff(EQUAL,"Re-running test gradingTools.comp524f20.assignment3.listsAndRecursion.ListDerivedSafeSML@1a7479b7 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="364" _type="PauseCommand" date="Tue May 03 15:24:06 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2662613">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3663]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="363" _type="ConsoleOutput" date="Tue May 03 15:24:06 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2662613" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@2c669ed7 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f20.assignment"), Diff(DELETE,"3.listsAndRecursion.ListDerivedSafeSML@1a7479b"), Diff(INSERT,"0_3.testcases.SMLGreetingLoadAndRun@2c669ed"), Diff(EQUAL,"7 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="365" _type="ConsoleOutput" date="Tue May 03 15:24:07 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2663419" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment3.styleParsing.StyleTest@3f1aae39 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f20.assignment"), Diff(DELETE,"0_3.testcases.SMLGreetingLoadAndRun@2c669ed7"), Diff(INSERT,"3.styleParsing.StyleTest@3f1aae39"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="367" _type="PauseCommand" date="Tue May 03 15:24:12 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2667874">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4455]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="370" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:24:14 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2670344" type="Run" />
  <Command __id="372" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:24:14 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="2670345" type="Run" />
  <Command __id="374" _type="PauseCommand" date="Tue May 03 15:24:16 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2672003">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1657]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="373" _type="ConsoleOutput" date="Tue May 03 15:24:16 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2672002" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f20.assignment3.styleParsing.StyleTest@3f1aae39 . Results may change."), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="376" _type="PauseCommand" date="Tue May 03 15:24:17 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2673391">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1389]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="375" _type="ShellCommand" date="Tue May 03 15:24:17 EDT 2022" starttimestamp="1651603184346" timestamp="2673391" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="378" _type="PauseCommand" date="Tue May 03 15:24:20 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2676150">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2759]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="377" _type="ExceptionCommand" date="Tue May 03 15:24:20 EDT 2022" starttimestamp="1651603184346" timestamp="2676150" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="379" _type="ExceptionCommand" date="Tue May 03 15:24:21 EDT 2022" starttimestamp="1651603184346" timestamp="2676919" type="Exception">
    <exceptionString><![CDATA[The following output was collected:
0              ../cm/parse/parse.sml:502.47
1 - Results:val it = () : unit
2 stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall
3 
4 - [autoloading]
5 [autoloading done]
6 stdIn:1.2-2.17 Warning: type vars not generalized because of
7    value restriction are instantiated to dummy types (X1,X2,...)
The following tests were not passed:
no disallowed functions: pass
matching derived safe calls matching safe with matcher: pass
matching given safe calls matching safe with matcher: pass
curryable interpolated safe calls interpolated safe: pass
curried once interpolated safe calls curryable interpolated safe: pass
curried twice interpolated safe calls curried once interpolated safe: pass
curried matching given safe calls curryable matching safe with given safe matcher: pass
curried matching derived safe calls curryable matching safe with derived safe matcher: pass
no magic numbers in functions: pass
StyleTest did not pass completely:View console for more detail%0.0

Test execution time (ms):695
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="380" _type="ConsoleOutput" date="Tue May 03 15:24:21 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="2676923" type="ConsoleOutput">
    <outputString><![CDATA[The following output was collected:
0              ../cm/parse/parse.sml:502.47
1 - Results:val it = () : unit
2 stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall
3 
4 - [autoloading]
5 [autoloading done]
6 stdIn:1.2-2.17 Warning: type vars not generalized because of
7    value restriction are instantiated to dummy types (X1,X2,...)
The following tests were not passed:
no disallowed functions: pass
matching derived safe calls matching safe with matcher: pass
matching given safe calls matching safe with matcher: pass
curryable interpolated safe calls interpolated safe: pass
curried once interpolated safe calls curryable interpolated safe: pass
curried twice interpolated safe calls curried once interpolated safe: pass
curried matching given safe calls curryable matching safe with given safe matcher: pass
curried matching derived safe calls curryable matching safe with derived safe matcher: pass
no magic numbers in functions: pass
StyleTest did not pass completely:View console for more detail%0.0

Test execution time (ms):695
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"The following output was collected:¶0              ../cm/parse/parse.sml:502.47¶1 - Results:val it = () : unit¶2 stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall¶3 ¶4 - [autoloading]¶5 [autoloading done]¶6 stdIn:1.2-2.17 Warning: type vars not generalized because of¶7    value restriction are instantiated to dummy types (X1,X2,...)¶The following tests were not passed:¶no disallowed functions: pass¶matching derived safe calls matching safe with matcher: pass¶matching given safe calls matching safe with matcher: pass¶curryable interpolated safe calls interpolated safe: pass¶curried once interpolated safe calls curryable interpolated safe: pass¶curried twice interpolated safe calls curried once interpolated safe: pass¶curried matching given safe calls curryable matching safe with given safe matcher: pass¶curried matching derived safe calls curryable matching safe with derived safe matcher: pass¶no magic numbers in functions: pass¶StyleTest did not pass completely:View console for more detail%0.0¶¶Test execution time (ms):695"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="382" _type="PauseCommand" date="Tue May 03 15:24:25 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2681510">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4587]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="381" _type="ShellCommand" date="Tue May 03 15:24:25 EDT 2022" starttimestamp="1651603184346" timestamp="2681510" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="384" _type="PauseCommand" date="Tue May 03 15:24:30 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2685664">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4154]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="407" _type="ShellCommand" date="Tue May 03 15:27:05 EDT 2022" starttimestamp="1651603184346" timestamp="2840921" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="410" _type="PauseCommand" date="Tue May 03 15:28:25 EDT 2022" range="1m-2m" starttimestamp="1651603184346" timestamp="2921539">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[80618]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="409" _type="ShellCommand" date="Tue May 03 15:28:25 EDT 2022" starttimestamp="1651603184346" timestamp="2921539" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="412" _type="PauseCommand" date="Tue May 03 15:28:31 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="2927093">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5553]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="411" _type="ShellCommand" date="Tue May 03 15:28:31 EDT 2022" starttimestamp="1651603184346" timestamp="2927092" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="414" _type="PauseCommand" date="Tue May 03 15:28:34 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="2930506">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3414]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="413" _type="ShellCommand" date="Tue May 03 15:28:34 EDT 2022" starttimestamp="1651603184346" timestamp="2930506" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="415" _type="EclipseCommand" commandID="" date="Tue May 03 15:28:34 EDT 2022" starttimestamp="1651603184346" timestamp="2930530" />
  <Command __id="416" _type="EclipseCommand" commandID="" date="Tue May 03 15:28:34 EDT 2022" starttimestamp="1651603184346" timestamp="2930532" />
  <Command __id="418" _type="PauseCommand" date="Tue May 03 15:28:53 EDT 2022" range="10s-20s" starttimestamp="1651603184346" timestamp="2949222">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[18690]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="417" _type="ShellCommand" date="Tue May 03 15:28:53 EDT 2022" starttimestamp="1651603184346" timestamp="2949222" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="420" _type="PauseCommand" date="Tue May 03 15:29:37 EDT 2022" range="30s-1m" starttimestamp="1651603184346" timestamp="2993244">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[44022]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="419" _type="ShellCommand" date="Tue May 03 15:29:37 EDT 2022" starttimestamp="1651603184346" timestamp="2993244" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="421" _type="ShellCommand" date="Tue May 03 15:29:37 EDT 2022" starttimestamp="1651603184346" timestamp="2993403" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="423" _type="PauseCommand" date="Tue May 03 15:29:39 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="2995368">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1965]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="422" _type="ShellCommand" date="Tue May 03 15:29:39 EDT 2022" starttimestamp="1651603184346" timestamp="2995368" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="424" _type="EclipseCommand" commandID="" date="Tue May 03 15:29:40 EDT 2022" starttimestamp="1651603184346" timestamp="2995740" />
  <Command __id="425" _type="EclipseCommand" commandID="" date="Tue May 03 15:29:40 EDT 2022" starttimestamp="1651603184346" timestamp="2995742" />
  <Command __id="427" _type="PauseCommand" date="Tue May 03 15:29:47 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="3003626">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7884]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="426" _type="ShellCommand" date="Tue May 03 15:29:47 EDT 2022" starttimestamp="1651603184346" timestamp="3003626" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="429" _type="PauseCommand" date="Tue May 03 15:29:52 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3008251">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4625]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="431" _type="ShellCommand" date="Tue May 03 15:31:27 EDT 2022" starttimestamp="1651603184346" timestamp="3103124" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="434" _type="ShellCommand" date="Tue May 03 15:31:27 EDT 2022" starttimestamp="1651603184346" timestamp="3103564" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="436" _type="PauseCommand" date="Tue May 03 15:31:58 EDT 2022" range="30s-1m" starttimestamp="1651603184346" timestamp="3133918">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[30354]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="435" _type="ShellCommand" date="Tue May 03 15:31:58 EDT 2022" starttimestamp="1651603184346" timestamp="3133918" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="438" _type="PauseCommand" date="Tue May 03 15:32:03 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="3139605">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5687]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="437" _type="ShellCommand" date="Tue May 03 15:32:03 EDT 2022" starttimestamp="1651603184346" timestamp="3139605" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="440" _type="PauseCommand" date="Tue May 03 15:32:29 EDT 2022" range="20s-30s" starttimestamp="1651603184346" timestamp="3165099">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[25494]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="441" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:32:32 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3168409" type="Run" />
  <Command __id="443" _type="ShellCommand" date="Tue May 03 15:32:33 EDT 2022" starttimestamp="1651603184346" timestamp="3168765" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="445" _type="PauseCommand" date="Tue May 03 15:32:34 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3170167">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1402]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="444" _type="ConsoleOutput" date="Tue May 03 15:32:34 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3170167" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"The following output was collected:¶0              ../cm/parse/parse.sml:502.47¶1 - Results:val it = () : unit¶2 stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall¶3 ¶4 - [autoloading]¶5 [autoloading done]¶6 stdIn:1.2-2.17 Warning: type vars not generalized because of¶7    value restriction are instantiated to dummy types (X1,X2,...)¶The following tests were not passed:¶no disallowed functions: pass¶matching derived safe calls matching safe with matcher: pass¶matching given safe calls matching safe with matcher: pass¶curryable interpolated safe calls interpolated safe: pass¶curried once interpolated safe calls curryable interpolated safe: pass¶curried twice interpolated safe calls curried once interpolated safe: pass¶curried matching given safe calls curryable matching safe with given safe matcher: pass¶curried matching derived safe calls curryable matching safe with derived safe matcher: pass¶no magic numbers in functions: pass¶StyleTest did not pass completely:View console for more detail%0.0¶¶Test execution time (ms):695"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="446" _type="ShellCommand" date="Tue May 03 15:32:34 EDT 2022" starttimestamp="1651603184346" timestamp="3170627" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="447" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:32:35 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3170808" type="Run" />
  <Command __id="448" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:32:35 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3170808" type="Run" />
  <Command __id="450" _type="PauseCommand" date="Tue May 03 15:32:36 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3172297">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1489]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="449" _type="ShellCommand" date="Tue May 03 15:32:36 EDT 2022" starttimestamp="1651603184346" timestamp="3172297" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="452" _type="PauseCommand" date="Tue May 03 15:32:38 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3174171">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1874]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="451" _type="ExceptionCommand" date="Tue May 03 15:32:38 EDT 2022" starttimestamp="1651603184346" timestamp="3174171" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="453" _type="ConsoleOutput" date="Tue May 03 15:32:38 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3174282" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="454" _type="ExceptionCommand" date="Tue May 03 15:32:39 EDT 2022" starttimestamp="1651603184346" timestamp="3175006" type="Exception">
    <exceptionString><![CDATA[The following output was collected:
0              ../cm/parse/parse.sml:502.47
1 - Results:val it = () : unit
2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall
3 
4 - [autoloading]
5 [autoloading done]
6 stdIn:1.2-2.17 Warning: type vars not generalized because of
7    value restriction are instantiated to dummy types (X1,X2,...)
The following tests were not passed:
no disallowed functions: pass
matching derived safe calls matching safe with matcher: pass
matching given safe calls matching safe with matcher: pass
curryable interpolated safe calls interpolated safe: pass
curried once interpolated safe calls curryable interpolated safe: pass
curried twice interpolated safe calls curried once interpolated safe: pass
curried matching given safe calls curryable matching safe with given safe matcher: pass
curried matching derived safe calls curryable matching safe with derived safe matcher: pass
no magic numbers in functions: pass
StyleTest did not pass completely:View console for more detail%0.0

Test execution time (ms):703
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="455" _type="ConsoleOutput" date="Tue May 03 15:32:39 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3175006" type="ConsoleOutput">
    <outputString><![CDATA[The following output was collected:
0              ../cm/parse/parse.sml:502.47
1 - Results:val it = () : unit
2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall
3 
4 - [autoloading]
5 [autoloading done]
6 stdIn:1.2-2.17 Warning: type vars not generalized because of
7    value restriction are instantiated to dummy types (X1,X2,...)
The following tests were not passed:
no disallowed functions: pass
matching derived safe calls matching safe with matcher: pass
matching given safe calls matching safe with matcher: pass
curryable interpolated safe calls interpolated safe: pass
curried once interpolated safe calls curryable interpolated safe: pass
curried twice interpolated safe calls curried once interpolated safe: pass
curried matching given safe calls curryable matching safe with given safe matcher: pass
curried matching derived safe calls curryable matching safe with derived safe matcher: pass
no magic numbers in functions: pass
StyleTest did not pass completely:View console for more detail%0.0

Test execution time (ms):703
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"The following output was collected:¶0              ../cm/parse/parse.sml:502.47¶1 - Results:val it = () : unit¶2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall¶3 ¶4 - [autoloading]¶5 [autoloading done]¶6 stdIn:1.2-2.17 Warning: type vars not generalized because of¶7    value restriction are instantiated to dummy types (X1,X2,...)¶The following tests were not passed:¶no disallowed functions: pass¶matching derived safe calls matching safe with matcher: pass¶matching given safe calls matching safe with matcher: pass¶curryable interpolated safe calls interpolated safe: pass¶curried once interpolated safe calls curryable interpolated safe: pass¶curried twice interpolated safe calls curried once interpolated safe: pass¶curried matching given safe calls curryable matching safe with given safe matcher: pass¶curried matching derived safe calls curryable matching safe with derived safe matcher: pass¶no magic numbers in functions: pass¶StyleTest did not pass completely:View console for more detail%0.0¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"703"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="457" _type="PauseCommand" date="Tue May 03 15:32:54 EDT 2022" range="10s-20s" starttimestamp="1651603184346" timestamp="3190116">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15110]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="456" _type="ConsoleOutput" date="Tue May 03 15:32:54 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3190116" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment3.styleParsing.StyleTest@3139fe89 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"The following output was collected:¶0              ../cm/parse/parse.sml:502.47¶1 - Results:val it = () : unit¶2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall¶3 ¶4 - [autoloading]¶5 [autoloading done]¶6 stdIn:1.2-2.17 Warning: type vars not generalized because of¶7    value restriction are instantiated to dummy types (X1,X2,...)¶The following tests were not passed:¶no disallowed functions: pass¶matching derived safe calls matching safe with matcher: pass¶matching given safe calls matching safe with matcher: pass¶curryable interpolated safe calls interpolated safe: pass¶curried once interpolated safe calls curryable interpolated safe: pass¶curried twice interpolated safe calls curried once interpolated safe: pass¶curried matching given safe calls curryable matching safe with given safe matcher: pass¶curried matching derived safe calls curryable matching safe with derived safe matcher: pass¶no magic numbers in functions: pass¶StyleTest did not pass completely:View console for more detail%0.0¶¶Test execution time (ms):703"), Diff(INSERT,"Re-running test gradingTools.comp524f20.assignment3.styleParsing.StyleTest@3139fe89 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="459" _type="PauseCommand" date="Tue May 03 15:32:56 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3191750">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1634]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="476" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:39:25 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3581632" type="Run" />
  <Command __id="478" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:39:25 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3581632" type="Run" />
  <Command __id="480" _type="PauseCommand" date="Tue May 03 15:39:27 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3583318">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1686]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="479" _type="ConsoleOutput" date="Tue May 03 15:39:27 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3583318" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f20.assignment3.styleParsing.StyleTest@3139fe89 . Results may change."), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="482" _type="PauseCommand" date="Tue May 03 15:39:28 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3584584">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1266]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="481" _type="ShellCommand" date="Tue May 03 15:39:28 EDT 2022" starttimestamp="1651603184346" timestamp="3584584" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="484" _type="PauseCommand" date="Tue May 03 15:39:33 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3589335">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4751]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="483" _type="ExceptionCommand" date="Tue May 03 15:39:33 EDT 2022" starttimestamp="1651603184346" timestamp="3589335" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="486" _type="PauseCommand" date="Tue May 03 15:39:37 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3592812">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3477]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="485" _type="ConsoleOutput" date="Tue May 03 15:39:37 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3592812" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="488" _type="PauseCommand" date="Tue May 03 15:39:42 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="3598539">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5727]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="487" _type="ConsoleOutput" date="Tue May 03 15:39:42 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3598539" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9130
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9130¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="490" _type="PauseCommand" date="Tue May 03 15:39:44 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3600121">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1582]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="489" _type="BalloonCommand" date="Tue May 03 15:39:44 EDT 2022" message="*******************************************
Worked 18 minutes(fixed)/56 minutes(context based) from
Tue May 03 14:39:49 EDT 2022 to Tue May 03 15:39:42 EDT 2022
Edited 0 Projects: 
Edited 0 Files: 
Number of insert: 0
Number of delete: 0
" starttimestamp="1651603184346" timestamp="3600121">
    <fineGrainedWorkTime><![CDATA[56]]></fineGrainedWorkTime>
    <insert><![CDATA[0]]></insert>
    <startTime><![CDATA[1651603189198]]></startTime>
    <endTime><![CDATA[1651606782885]]></endTime>
    <workTime><![CDATA[18]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="492" _type="PauseCommand" date="Tue May 03 15:39:46 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3601966">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[1845]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="491" _type="ConsoleOutput" date="Tue May 03 15:39:46 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3601966" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):9130¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="494" _type="PauseCommand" date="Tue May 03 15:39:51 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="3607636">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5670]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="493" _type="ConsoleOutput" date="Tue May 03 15:39:51 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3607636" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9089
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9089¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="496" _type="PauseCommand" date="Tue May 03 15:39:53 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3608830">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1193]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="495" _type="ConsoleOutput" date="Tue May 03 15:39:53 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3608829" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1235
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"9089¶Number of traces > 600  turning tracing off"), Diff(INSERT,"1235"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="498" _type="PauseCommand" date="Tue May 03 15:39:55 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3611599">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2770]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="497" _type="ConsoleOutput" date="Tue May 03 15:39:55 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3611599" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2763
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1235"), Diff(INSERT,"2763"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="500" _type="PauseCommand" date="Tue May 03 15:39:58 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3614349">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2750]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="499" _type="ConsoleOutput" date="Tue May 03 15:39:58 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3614349" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2696
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"763"), Diff(INSERT,"696"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="501" _type="ShellCommand" date="Tue May 03 15:39:59 EDT 2022" starttimestamp="1651603184346" timestamp="3615043" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="502" _type="ShellCommand" date="Tue May 03 15:39:59 EDT 2022" starttimestamp="1651603184346" timestamp="3615471" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="504" _type="PauseCommand" date="Tue May 03 15:40:01 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3617051">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1580]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="514" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:41:38 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3713992" type="Run" />
  <Command __id="516" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:41:38 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3713992" type="Run" />
  <Command __id="518" _type="PauseCommand" date="Tue May 03 15:41:39 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3715618">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1626]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="517" _type="ConsoleOutput" date="Tue May 03 15:41:39 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3715618" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2693"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="520" _type="PauseCommand" date="Tue May 03 15:41:41 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3716941">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1323]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="519" _type="ShellCommand" date="Tue May 03 15:41:41 EDT 2022" starttimestamp="1651603184346" timestamp="3716941" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="522" _type="PauseCommand" date="Tue May 03 15:41:43 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3719153">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2211]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="521" _type="ExceptionCommand" date="Tue May 03 15:41:43 EDT 2022" starttimestamp="1651603184346" timestamp="3719152" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="523" _type="ExceptionCommand" date="Tue May 03 15:41:44 EDT 2022" starttimestamp="1651603184346" timestamp="3719805" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.PrintSafety.test(PrintSafety.java:39)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="524" _type="ExceptionCommand" date="Tue May 03 15:41:44 EDT 2022" starttimestamp="1651603184346" timestamp="3720348" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.ConcisePrintSafety.test(ConcisePrintSafety.java:33)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="525" _type="ExceptionCommand" date="Tue May 03 15:41:45 EDT 2022" starttimestamp="1651603184346" timestamp="3720876" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.ListPrintSafety.test(ListPrintSafety.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="526" _type="ExceptionCommand" date="Tue May 03 15:41:45 EDT 2022" starttimestamp="1651603184346" timestamp="3721353" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.MatchingSafe.test(MatchingSafe.java:42)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="527" _type="ExceptionCommand" date="Tue May 03 15:41:46 EDT 2022" starttimestamp="1651603184346" timestamp="3721884" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.MatchingGivenSafe.test(MatchingGivenSafe.java:33)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="528" _type="ExceptionCommand" date="Tue May 03 15:41:46 EDT 2022" starttimestamp="1651603184346" timestamp="3722458" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.MatchingDerivedSafe.test(MatchingDerivedSafe.java:34)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="530" _type="PauseCommand" date="Tue May 03 15:41:51 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3727177">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[4719]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="536" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:42:48 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3783811" type="Run" />
  <Command __id="538" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:42:48 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3783812" type="Run" />
  <Command __id="539" _type="ShellCommand" date="Tue May 03 15:42:48 EDT 2022" starttimestamp="1651603184346" timestamp="3784083" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="541" _type="PauseCommand" date="Tue May 03 15:42:49 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3785590">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1507]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="540" _type="ConsoleOutput" date="Tue May 03 15:42:49 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3785590" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f20.assignment3.functionParamaters.PrintSafety@32250275 . Results may change."), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="543" _type="PauseCommand" date="Tue May 03 15:42:53 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3788872">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3282]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="571" _type="ShellCommand" date="Tue May 03 15:45:17 EDT 2022" starttimestamp="1651603184346" timestamp="3933155" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="574" _type="PauseCommand" date="Tue May 03 15:45:19 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3935568">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2413]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="575" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:45:22 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3937744" type="Run" />
  <Command __id="577" _type="ShellCommand" date="Tue May 03 15:45:22 EDT 2022" starttimestamp="1651603184346" timestamp="3938335" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="578" _type="ShellCommand" date="Tue May 03 15:45:22 EDT 2022" starttimestamp="1651603184346" timestamp="3938413" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="580" _type="PauseCommand" date="Tue May 03 15:45:23 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3939597">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1184]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="582" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:45:29 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3944938" type="Run" />
  <Command __id="584" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 15:45:29 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="3944938" type="Run" />
  <Command __id="586" _type="PauseCommand" date="Tue May 03 15:45:30 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3946570">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1632]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="585" _type="ExceptionCommand" date="Tue May 03 15:45:30 EDT 2022" starttimestamp="1651603184346" timestamp="3946570" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="587" _type="ConsoleOutput" date="Tue May 03 15:45:31 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3946680" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="589" _type="PauseCommand" date="Tue May 03 15:45:34 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3950138">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3458]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="588" _type="ConsoleOutput" date="Tue May 03 15:45:34 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3950138" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="591" _type="PauseCommand" date="Tue May 03 15:45:40 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="3955833">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5695]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="590" _type="ConsoleOutput" date="Tue May 03 15:45:40 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3955833" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9131
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9131¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="593" _type="PauseCommand" date="Tue May 03 15:45:43 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3959247">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3414]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="592" _type="ConsoleOutput" date="Tue May 03 15:45:43 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3959247" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):9131¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="595" _type="PauseCommand" date="Tue May 03 15:45:49 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="3964893">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5646]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="594" _type="ConsoleOutput" date="Tue May 03 15:45:49 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3964893" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9104
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9104¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="597" _type="PauseCommand" date="Tue May 03 15:45:50 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="3966185">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1292]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="596" _type="ConsoleOutput" date="Tue May 03 15:45:50 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3966185" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1235
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"9104¶Number of traces > 600  turning tracing off"), Diff(INSERT,"1235"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="599" _type="PauseCommand" date="Tue May 03 15:45:53 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3968949">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2764]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="598" _type="ConsoleOutput" date="Tue May 03 15:45:53 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3968949" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2751
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1235"), Diff(INSERT,"2751"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="601" _type="PauseCommand" date="Tue May 03 15:45:55 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3971639">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2690]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="600" _type="ConsoleOutput" date="Tue May 03 15:45:55 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="3971639" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2723
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(DELETE,"51"), Diff(INSERT,"23"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="603" _type="PauseCommand" date="Tue May 03 15:45:58 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="3974371">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2732]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="659" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 16:40:01 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="7217547" type="Run" />
  <Command __id="661" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 16:40:01 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="7217547" type="Run" />
  <Command __id="663" _type="PauseCommand" date="Tue May 03 16:40:03 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="7219185">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1638]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="662" _type="ConsoleOutput" date="Tue May 03 16:40:03 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7219185" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2725"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="665" _type="PauseCommand" date="Tue May 03 16:40:04 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="7220539">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1354]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="664" _type="ShellCommand" date="Tue May 03 16:40:04 EDT 2022" starttimestamp="1651603184346" timestamp="7220539" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="667" _type="PauseCommand" date="Tue May 03 16:40:06 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="7222122">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1583]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="666" _type="ExceptionCommand" date="Tue May 03 16:40:06 EDT 2022" starttimestamp="1651603184346" timestamp="7222122" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="669" _type="PauseCommand" date="Tue May 03 16:40:09 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7225562">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3440]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="668" _type="ConsoleOutput" date="Tue May 03 16:40:09 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7225562" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="671" _type="PauseCommand" date="Tue May 03 16:40:15 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="7231227">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5665]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="670" _type="ConsoleOutput" date="Tue May 03 16:40:15 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7231227" type="ConsoleOutput">
    <outputString><![CDATA[
Testing PrintSafety with the following inputs:
"print("Results:");" "val testFeatures=(13,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,29,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,14,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,9);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,29,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,29,9);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(28,29,49);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,14,49);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,119,9);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(28,119,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,14,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,16,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,0,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,16,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,16,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,16,31);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,0,31);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,31,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,31,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,0,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,50);
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 600  turning tracing off"), Diff(INSERT,"¶Testing PrintSafety with the following inputs:¶"print("Results:");" "val testFeatures=(13,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,29,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,14,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,9);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,29,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,29,9);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(28,29,49);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,14,49);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,119,9);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(28,119,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,14,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,16,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,0,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,16,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,16,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,16,31);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,0,31);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,31,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,31,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,0,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,50);"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="672" _type="ConsoleOutput" date="Tue May 03 16:40:15 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7231345" type="ConsoleOutput">
    <outputString><![CDATA[" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,500,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,500);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(5,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,121,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,31);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,500);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,500,500);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(128,128,128);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,0,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,0,51);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,0,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(20,22,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" 
"printSafety(listDerivedSafe,testFeatures);" 

Collected output:
0 val curriedMatchingGivenSafe = fn : int * int * int -> bool
1 - Results:val it = () : unit
2 - val testFeatures = (13,30,30) : int * int * int
3 - Distance:13 Duration:30 Exhalation:30 Safe:true
4 val it = () : unit
5 - Distance:13 Duration:30 Exhalation:30 Safe:true
6 val it = () : unit
7 - Distance:13 Duration:30 Exhalation:30 Safe:true
8 val it = () : unit
9 - val testFeatures = (6,30,10) : int * int * int
10 - Distance:6 Duration:30 Exhalation:10 Safe:true
11 val it = () : unit
12 - Distance:6 Duration:30 Exhalation:10 Safe:true
13 val it = () : unit
14 - Distance:6 Duration:30 Exhalation:10 Safe:true
15 val it = () : unit
16 - val testFeatures = (27,30,50) : int * int * int
17 - Distance:27 Duration:30 Exhalation:50 Safe:true
18 val it = () : unit
19 - Distance:27 Duration:30 Exhalation:50 Safe:true
20 val it = () : unit
21 - Distance:27 Duration:30 Exhalation:50 Safe:true
22 val it = () : unit
23 - val testFeatures = (13,15,50) : int * int * int
24 - Distance:13 Duration:15 Exhalation:50 Safe:true
25 val it = () : unit
26 - Distance:13 Duration:15 Exhalation:50 Safe:true
27 val it = () : unit
28 - Distance:13 Duration:15 Exhalation:50 Safe:true
29 val it = () : unit
30 - val testFeatures = (13,120,10) : int * int * int
31 - Distance:13 Duration:120 Exhalation:10 Safe:true
32 val it = () : unit
33 - Distance:13 Duration:120 Exhalation:10 Safe:true
34 val it = () : unit
35 - Distance:13 Duration:120 Exhalation:10 Safe:true
36 val it = () : unit
37 - val testFeatures = (27,120,30) : int * int * int
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Testing PrintSafety with the following inputs:¶"print("Results:");" "val testFeatures=(13,30,30);"), Diff(EQUAL,"" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"6"), Diff(INSERT,"27"), Diff(EQUAL,",30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,"), Diff(DELETE,"5"), Diff(INSERT,"3"), Diff(EQUAL,"0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"13,15,5"), Diff(INSERT,"27,120,1"), Diff(EQUAL,"0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"13"), Diff(INSERT,"27"), Diff(EQUAL,",120,"), Diff(DELETE,"1"), Diff(INSERT,"5"), Diff(EQUAL,"0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,"), Diff(DELETE,"12"), Diff(INSERT,"50"), Diff(EQUAL,"0,"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,"0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"6,15,3"), Diff(INSERT,"27,120,50"), Diff(EQUAL,"0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"14,30"), Diff(INSERT,"5,15"), Diff(EQUAL,",30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"7,30"), Diff(INSERT,"13,121"), Diff(EQUAL,",10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,"), Diff(DELETE,"29,50"), Diff(INSERT,"120,31"), Diff(EQUAL,");" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"13,14,5"), Diff(INSERT,"0,15,1"), Diff(EQUAL,"0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"13,120,9"), Diff(INSERT,"6,15,500"), Diff(EQUAL,");" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"27,120,29"), Diff(INSERT,"500,500,500"), Diff(EQUAL,");" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"7,15,30"), Diff(INSERT,"128,128,128"), Diff(EQUAL,");" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"14,29,29"), Diff(INSERT,"0,0,50"), Diff(EQUAL,");" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"7,29,9"), Diff(INSERT,"13,0,51"), Diff(EQUAL,");" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"28,29,49"), Diff(INSERT,"0,0,0"), Diff(EQUAL,");" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"14,14,49"), Diff(INSERT,"20,22,50"), Diff(EQUAL,");" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "), Diff(DELETE,""val testFeatures=(14,119,9);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDer"), Diff(INSERT,"¶¶Collected output:¶0 val curriedMatchingG"), Diff(EQUAL,"ive"), Diff(DELETE,"d"), Diff(INSERT,"n"), Diff(EQUAL,"Safe"), Diff(DELETE,",testFeatures);" "val testFeatures=(28,119,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,14,29);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT," = fn : int * int * int -> bool¶1 - Results:val it = () : unit¶2 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"=(26"), Diff(INSERT," = (13"), Diff(EQUAL,",30,30)"), Diff(DELETE,";" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,16,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,0,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT," : int * int * int¶3 - Distance:13 Duration:30 Exhalation:30 Safe:true¶4 val it = () : unit¶5 - Distance:13 Duration:30 Exhalation:30 Safe:true¶6 val it = () : unit¶7 - Distance:13 Duration:30 Exhalation:30 Safe:true¶8 val it = () : unit¶9 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"=(26,16,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,16,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,16,31);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,0,31);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT," = (6,30,10) : int * int * int¶10 - Distance:6 Duration:30 Exhalation:10 Safe:true¶11 val it = () : unit¶12 - Distance:6 Duration:30 Exhalation:10 Safe:true¶13 val it = () : unit¶14 - Distance:6 Duration:30 Exhalation:10 Safe:true¶15 val it = () : unit¶16 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"="), Diff(INSERT," = "), Diff(EQUAL,"(2"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,",3"), Diff(DELETE,"1,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,31,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,0,11);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT,"0,50) : int * int * int¶17 - Distance:27 Duration:30 Exhalation:50 Safe:true¶18 val it = () : unit¶19 - Distance:27 Duration:30 Exhalation:50 Safe:true¶20 val it = () : unit¶21 - Distance:27 Duration:30 Exhalation:50 Safe:true¶22 val it = () : unit¶23 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"=(6"), Diff(INSERT," = (13"), Diff(EQUAL,",15,50)"), Diff(DELETE,";" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT," : int * int * int¶24 - Distance:13 Duration:15 Exhalation:50 Safe:true¶25 val it = () : unit¶26 - Distance:13 Duration:15 Exhalation:50 Safe:true¶27 val it = () : unit¶28 - Distance:13 Duration:15 Exhalation:50 Safe:true¶29 val it = () : unit¶30 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"="), Diff(INSERT," = "), Diff(EQUAL,"(13,1"), Diff(DELETE,"5"), Diff(INSERT,"20"), Diff(EQUAL,",10)"), Diff(DELETE,";" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT," : int * int * int¶31 - Distance:13 Duration:120 Exhalation:10 Safe:true¶32 val it = () : unit¶33 - Distance:13 Duration:120 Exhalation:10 Safe:true¶34 val it = () : unit¶35 - Distance:13 Duration:120 Exhalation:10 Safe:true¶36 val it = () : unit¶37 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"="), Diff(INSERT," = "), Diff(EQUAL,"(27,1"), Diff(DELETE,"5"), Diff(INSERT,"20"), Diff(EQUAL,",30)"), Diff(DELETE,";" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,50);"), Diff(INSERT," : int * int * int"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="673" _type="ConsoleOutput" date="Tue May 03 16:40:15 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7231405" type="ConsoleOutput">
    <outputString><![CDATA[
205 - val testFeatures = (12,16,0) : int * int * int
206 - Distance:12 Duration:16 Exhalation:0 Safe:false
207 val it = () : unit
208 - Distance:12 Duration:16 Exhalation:0 Safe:true
209 val it = () : unit
210 - Distance:12 Duration:16 Exhalation:0 Safe:true
211 val it = () : unit
212 - val testFeatures = (500,16,31) : int * int * int
213 - Distance:500 Duration:16 Exhalation:31 Safe:false
214 val it = () : unit
215 - Distance:500 Duration:16 Exhalation:31 Safe:true
216 val it = () : unit
217 - Distance:500 Duration:16 Exhalation:31 Safe:true
218 val it = () : unit
219 - val testFeatures = (26,0,31) : int * int * int
220 - Distance:26 Duration:0 Exhalation:31 Safe:false
221 val it = () : unit
222 - Distance:26 Duration:0 Exhalation:31 Safe:true
223 val it = () : unit
224 - Distance:26 Duration:0 Exhalation:31 Safe:true
225 val it = () : unit
226 - val testFeatures = (26,31,0) : int * int * int
227 - Distance:26 Duration:31 Exhalation:0 Safe:false
228 val it = () : unit
229 - Distance:26 Duration:31 Exhalation:0 Safe:true
230 val it = () : unit
231 - Distance:26 Duration:31 Exhalation:0 Safe:true
232 val it = () : unit
233 - val testFeatures = (500,31,11) : int * int * int
234 - Distance:500 Duration:31 Exhalation:11 Safe:false
235 val it = () : unit
236 - Distance:500 Duration:31 Exhalation:11 Safe:true
237 val it = () : unit
238 - Distance:500 Duration:31 Exhalation:11 Safe:true
239 val it = () : unit
240 - val testFeatures = (12,0,11) : int * int * int
241 - Distance:12 Duration:0 Exhalation:11 Safe:false
242 val it = () : unit
243 - Distance:12 Duration:0 Exhalation:11 Safe:true
244 val it = () : unit
245 - Distance:12 Duration:0 Exhalation:11 Safe:true
246 val it = () : unit
247 - val testFeatures = (6,15,10) : int * int * int
248 - Distance:6 Duration:15 Exhalation:10 Safe:false
249 val it = () : unit
250 - Distance:6 Duration:15 Exhalation:10 Safe:false
251 val it = () : unit
252 - Distance:6 Duration:15 Exhalation:10 Safe:true
253 val it = () : unit
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,500,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,500);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(5,15,30);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,121,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,31);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT,"¶205 - val testFeatures = (12,16,0) : int * int * int¶206 - Distance:12 Duration:16 Exhalation:0 Safe:false¶207 val it = () : unit¶208 - Distance:12 Duration:16 Exhalation:0 Safe:true¶209 val it = () : unit¶210 - Distance:12 Duration:16 Exhalation:0 Safe:true¶211 val it = () : unit¶212 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"=(0,15,10);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,500);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,500,500);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(128,128,128);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,0,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,0,51);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,0,0);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" "printSafety(listDerivedSafe,testFeatures);" "val testFeatures=(20,22,50);" "printSafety(givenSafe,testFeatures);" "printSafety(interpolatedSafe,testFeatures);" ¶"printSafety(listDerivedSafe,testFeatures);" ¶¶Collected output:¶0 val curriedMatchingGivenSafe = fn : int * int * int -> bool¶1 - Results:"), Diff(INSERT," = (500,16,31) : int * int * int¶213 - Distance:500 Duration:16 Exhalation:31 Safe:false¶214 val it = () : unit¶215 - Distance:500 Duration:16 Exhalation:31 Safe:true¶216 val it = () : unit¶217 - Distance:500 Duration:16 Exhalation:31 Safe:true¶218 "), Diff(EQUAL,"val it = () : unit¶2"), Diff(INSERT,"19"), Diff(EQUAL," - val testFeatures = ("), Diff(DELETE,"13,3"), Diff(INSERT,"26,"), Diff(EQUAL,"0,3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,") : int * int * int¶"), Diff(DELETE,"3"), Diff(INSERT,"220"), Diff(EQUAL," - Distance:"), Diff(DELETE,"13"), Diff(INSERT,"26"), Diff(EQUAL," Duration:"), Diff(DELETE,"3"), Diff(EQUAL,"0 Exhalation:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," Safe:"), Diff(DELETE,"true¶4"), Diff(INSERT,"false¶221"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"5"), Diff(INSERT,"222"), Diff(EQUAL," - Distance:"), Diff(DELETE,"13"), Diff(INSERT,"26"), Diff(EQUAL," Duration:"), Diff(DELETE,"3"), Diff(EQUAL,"0 Exhalation:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," Safe:true¶"), Diff(DELETE,"6"), Diff(INSERT,"223"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"7"), Diff(INSERT,"224"), Diff(EQUAL," - Distance:"), Diff(DELETE,"13"), Diff(INSERT,"26"), Diff(EQUAL," Duration:"), Diff(DELETE,"3"), Diff(EQUAL,"0 Exhalation:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," Safe:true¶"), Diff(DELETE,"8"), Diff(INSERT,"225"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"9"), Diff(INSERT,"226"), Diff(EQUAL," - val testFeatures = ("), Diff(INSERT,"2"), Diff(EQUAL,"6,3"), Diff(DELETE,"0,"), Diff(EQUAL,"1"), Diff(INSERT,","), Diff(EQUAL,"0) : int * int * int¶"), Diff(DELETE,"10"), Diff(INSERT,"227"), Diff(EQUAL," - Distance:"), Diff(INSERT,"2"), Diff(EQUAL,"6 Duration:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," Exhalation:"), Diff(DELETE,"1"), Diff(EQUAL,"0 Safe:"), Diff(DELETE,"true¶11"), Diff(INSERT,"false¶228"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"29"), Diff(EQUAL," - Distance:"), Diff(INSERT,"2"), Diff(EQUAL,"6 Duration:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," Exhalation:"), Diff(DELETE,"1"), Diff(EQUAL,"0 Safe:true¶"), Diff(DELETE,"13"), Diff(INSERT,"230"), Diff(EQUAL," val it = () : unit¶"), Diff(INSERT,"23"), Diff(EQUAL,"1"), Diff(DELETE,"4"), Diff(EQUAL," - Distance:"), Diff(INSERT,"2"), Diff(EQUAL,"6 Duration:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," Exhalation:"), Diff(DELETE,"1"), Diff(EQUAL,"0 Safe:true¶"), Diff(DELETE,"15"), Diff(INSERT,"232"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"16"), Diff(INSERT,"233"), Diff(EQUAL," - val testFeatures = ("), Diff(DELETE,"27,30,50"), Diff(INSERT,"500,31,11"), Diff(EQUAL,") : int * int * int¶"), Diff(DELETE,"17"), Diff(INSERT,"234"), Diff(EQUAL," - Distance:"), Diff(DELETE,"27"), Diff(INSERT,"500"), Diff(EQUAL," Duration:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," Exhalation:"), Diff(DELETE,"50"), Diff(INSERT,"11"), Diff(EQUAL," Safe:"), Diff(DELETE,"true¶18"), Diff(INSERT,"false¶235"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"19"), Diff(INSERT,"236"), Diff(EQUAL," - Distance:"), Diff(DELETE,"27"), Diff(INSERT,"500"), Diff(EQUAL," Duration:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," Exhalation:"), Diff(DELETE,"50"), Diff(INSERT,"11"), Diff(EQUAL," Safe:true¶2"), Diff(DELETE,"0"), Diff(INSERT,"37"), Diff(EQUAL," val it = () : unit¶2"), Diff(DELETE,"1"), Diff(INSERT,"38"), Diff(EQUAL," - Distance:"), Diff(DELETE,"27"), Diff(INSERT,"500"), Diff(EQUAL," Duration:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," Exhalation:"), Diff(DELETE,"50"), Diff(INSERT,"11"), Diff(EQUAL," Safe:true¶2"), Diff(DELETE,"2"), Diff(INSERT,"39"), Diff(EQUAL," val it = () : unit¶2"), Diff(DELETE,"3"), Diff(INSERT,"40"), Diff(EQUAL," - val testFeatures = (1"), Diff(DELETE,"3,15,50"), Diff(INSERT,"2,0,11"), Diff(EQUAL,") : int * int * int¶24"), Diff(INSERT,"1"), Diff(EQUAL," - Distance:1"), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL," Duration:"), Diff(DELETE,"15"), Diff(INSERT,"0"), Diff(EQUAL," Exhalation:"), Diff(DELETE,"50"), Diff(INSERT,"11"), Diff(EQUAL," Safe:"), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e¶2"), Diff(DELETE,"5"), Diff(INSERT,"42"), Diff(EQUAL," val it = () : unit¶2"), Diff(DELETE,"6"), Diff(INSERT,"43"), Diff(EQUAL," - Distance:1"), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL," Duration:"), Diff(DELETE,"15"), Diff(INSERT,"0"), Diff(EQUAL," Exhalation:"), Diff(DELETE,"50"), Diff(INSERT,"11"), Diff(EQUAL," Safe:true¶2"), Diff(DELETE,"7"), Diff(INSERT,"44"), Diff(EQUAL," val it = () : unit¶2"), Diff(DELETE,"8"), Diff(INSERT,"45"), Diff(EQUAL," - Distance:1"), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL," Duration:"), Diff(DELETE,"15"), Diff(INSERT,"0"), Diff(EQUAL," Exhalation:"), Diff(DELETE,"50"), Diff(INSERT,"11"), Diff(EQUAL," Safe:true¶2"), Diff(DELETE,"9"), Diff(INSERT,"46"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"30"), Diff(INSERT,"247"), Diff(EQUAL," - val testFeatures = ("), Diff(DELETE,"13,120"), Diff(INSERT,"6,15"), Diff(EQUAL,",10) : int * int * int¶"), Diff(DELETE,"31"), Diff(INSERT,"248"), Diff(EQUAL," - Distance:"), Diff(DELETE,"13"), Diff(INSERT,"6"), Diff(EQUAL," Duration:1"), Diff(DELETE,"20"), Diff(INSERT,"5"), Diff(EQUAL," Exhalation:10 Safe:"), Diff(DELETE,"true¶32"), Diff(INSERT,"false¶249"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"33"), Diff(INSERT,"250"), Diff(EQUAL," - Distance:"), Diff(DELETE,"13"), Diff(INSERT,"6"), Diff(EQUAL," Duration:1"), Diff(DELETE,"20"), Diff(INSERT,"5"), Diff(EQUAL," Exhalation:10 Safe:"), Diff(DELETE,"true¶34"), Diff(INSERT,"false¶251"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"35"), Diff(INSERT,"252"), Diff(EQUAL," - Distance:"), Diff(DELETE,"13"), Diff(INSERT,"6"), Diff(EQUAL," Duration:1"), Diff(DELETE,"20"), Diff(INSERT,"5"), Diff(EQUAL," Exhalation:10 Safe:true¶"), Diff(INSERT,"25"), Diff(EQUAL,"3"), Diff(DELETE,"6"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"37 - val testFeatures = (27,120,30) : int * int * int¶")]]]></diff>
  </Command>
  <Command __id="675" _type="PauseCommand" date="Tue May 03 16:40:24 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="7240540">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9135]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="674" _type="ConsoleOutput" date="Tue May 03 16:40:24 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7240540" type="ConsoleOutput">
    <outputString><![CDATA[
Testing ConcisePrintSafety with the following inputs:
"print("Results:");" "val testFeatures=(13,30,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,30,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,30,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,29,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,14,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,9);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,29);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,29,29);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,29,9);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(28,29,49);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,14,49);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,119,9);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(28,119,29);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,14,29);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,30,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,30,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,16,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,0,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,16,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,16,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,16,31);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,0,31);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,31,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,31,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,0,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,10);" "concisePrintSafety(givenSafe,testFeature
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"205 - "), Diff(INSERT,"Testing ConcisePrintSafety with the following inputs:¶"print("Results:");" ""), Diff(EQUAL,"val testFeatures"), Diff(DELETE," = (12,16,0) : int * int * int¶206 - Distance:12 Duration:16 Exhalation:0 Safe:false¶207 val it = () : unit¶208 - Distance:12 Duration:16 Exhalation:0 Safe:true¶209 val it = () : unit¶210 - Distance:12 Duration:16 Exhalation:0 Safe:true¶211 val it = () : unit¶212 - "), Diff(INSERT,"=(13,30,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(EQUAL,"val testFeatures"), Diff(DELETE," = (500,16,31) : int * int * int¶213 - Distance:500 Duration:16 Exhalation:31 Safe:false¶214 val it = () : unit¶215 - Distance:500 Duration:16 Exhalation:31 Safe:true¶216 val it = () : unit¶217 - Distance:500 Duration:16 Exhalation:31 Safe:true¶218 val it = () : unit¶219 - "), Diff(INSERT,"=(27,120,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,30,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,30,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,29,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,14,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,9);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(EQUAL,"val testFeatures"), Diff(DELETE," = (26,0,31) : int * int * int¶220 - Distance:26 Duration:0 Exhalation:31 Safe:false¶221 val it = () : unit¶222 - Distance:26 Duration:0 Exhalation:31 Safe:true¶223 val it = () : unit¶224 - Distance:26 Duration:0 Exhalation:31 Safe:true¶225 val it = () : unit¶226 - "), Diff(INSERT,"=(27,120,29);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,29,29);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,29,9);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(28,29,49);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,14,49);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(14,119,9);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(28,119,29);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(7,14,29);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(EQUAL,"val testFeatures"), Diff(DELETE," = "), Diff(INSERT,"="), Diff(EQUAL,"(26,3"), Diff(DELETE,"1,0) : int * int * int¶227 - Distance:26 Duration:31 Exhalation:0 Safe:false¶228 val it = () : unit¶229 - Distance:26 Duration:31 Exhalation:0 Safe:true¶230 val it = () : unit¶231 - Distance:26 Duration:31 Exhalation:0 Safe:true¶232 val it = () : unit¶233 - "), Diff(INSERT,"0,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,30,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,16,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,0,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(EQUAL,"val testFeatures"), Diff(DELETE," = (500,31,11) : int * int * int¶234 - Distance:500 Duration:31 Exhalation:11 Safe:false¶235 val it = () : unit¶236 - Distance:500 Duration:31 Exhalation:11 Safe:true¶237 val it = () : unit¶238 - Distance:500 Duration:31 Exhalation:11 Safe:true¶239 val it = () : unit¶240 - "), Diff(INSERT,"=(26,16,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,16,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,16,31);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,0,31);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,31,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,31,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(EQUAL,"val testFeatures"), Diff(DELETE," = "), Diff(INSERT,"="), Diff(EQUAL,"(12,0,11)"), Diff(DELETE," : int * int * int¶241 - Distance:12 Duration:0 Exhalation:11 Safe:false¶242 val it = () : unit¶243 - Distance:12 Duration:0 Exhalation:11 Safe:true¶244 val it = () : unit¶245 - Distance:12 Duration:0 Exhalation:11 Safe:true¶246 val it = () : unit¶247 - "), Diff(INSERT,";" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(EQUAL,"val testFeatures"), Diff(DELETE," = "), Diff(INSERT,"="), Diff(EQUAL,"(6,1"), Diff(DELETE,"5,10) : int * int * int¶248 - Distance:6 Duration:15 Exhalation:10 Safe:false¶249 val it = () : unit¶250 - Distance:6 Duration:15 Exhalation:10 Safe:false¶251 val it = () : unit¶252 - Distance:6 Duration:15 Exhalation:10 Safe:true¶253 val it = () : unit"), Diff(INSERT,"20,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,10);" "concisePrintSafety(givenSafe,testFeature"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="676" _type="ConsoleOutput" date="Tue May 03 16:40:24 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7240607" type="ConsoleOutput">
    <outputString><![CDATA[s);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,120,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,15,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,30,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,500,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,500);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(5,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,121,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,31);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,15,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,500);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,500,500);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(128,128,128);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,0,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,0,51);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,0,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(20,22,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" 
"concisePrintSafety(listDerivedSafe,testFeatures);" 

Collected output:
0 val curriedMatchingGivenSafe = fn : int * int * int -> bool
1 - Results:val it = () : unit
2 - val testFeatures = (13,30,30) : int * int * int
3 - (13, 30, 30, true)
4 val it = () : unit
5 - (13, 30, 30, true)
6 val it = () : unit
7 - (13, 30, 30, true)
8 val it = () : unit
9 - val testFeatures = (6,30,10) : int * int * int
10 - (6, 30, 10, true)
11 val it = () : unit
12 - (6, 30, 10, true)
13 val it = () : unit
14 - (6, 30, 10, true)
15 val it = () : unit
16 - val testFeatures = (27,30,50) : int * int * int
17 - (27, 30, 50, true)
18 val it = () : unit
19 - (27, 30, 50, true)
20 val it = () : unit
21 - (27, 30, 50, true)
22 val it = () : unit
23 - val testFeatures = (13,15,50) : int * int * int
24 - (13, 15, 50, true)
25 val it = () : unit
26 - (13, 15, 50, true)
27 val it = () : unit
28 - (13, 15, 50, true)
29 val it = () : unit
30 - val testFeatures = (13,120,10) : int * int * int
31 - (13, 120, 10, true)
32 val it = () : unit
33 - (13, 120, 10, true)
34 val it = () : unit
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Testing ConcisePrintSafety with the following inputs:¶"print("Results:");" "val testFeatures=(13,30,30);" "concisePrintSafety(givenSafe,testFeature"), Diff(EQUAL,"s);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"6"), Diff(INSERT,"13"), Diff(EQUAL,",30,"), Diff(DELETE,"1"), Diff(INSERT,"5"), Diff(EQUAL,"0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"27,3"), Diff(INSERT,"13,12"), Diff(EQUAL,"0,"), Diff(DELETE,"5"), Diff(INSERT,"3"), Diff(EQUAL,"0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,1"), Diff(DELETE,"5"), Diff(INSERT,"20"), Diff(EQUAL,",50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"13,120"), Diff(INSERT,"27,15"), Diff(EQUAL,",10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,1"), Diff(DELETE,"20"), Diff(INSERT,"5"), Diff(EQUAL,",30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"6"), Diff(INSERT,"27"), Diff(EQUAL,",15,"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,"0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"14"), Diff(INSERT,"27"), Diff(EQUAL,",30,"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(INSERT,"2"), Diff(EQUAL,"7,30,"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,"), Diff(DELETE,"29,5"), Diff(INSERT,"120,1"), Diff(EQUAL,"0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"13,14"), Diff(INSERT,"27,120"), Diff(EQUAL,",50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"13,120,9"), Diff(INSERT,"27,500,50"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,"), Diff(DELETE,"29"), Diff(INSERT,"500"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"7"), Diff(INSERT,"5"), Diff(EQUAL,",15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(1"), Diff(DELETE,"4,29,29"), Diff(INSERT,"3,121,10"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(INSERT,"2"), Diff(EQUAL,"7,"), Diff(DELETE,"29,9"), Diff(INSERT,"120,31"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"28,29,49"), Diff(INSERT,"0,15,10"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"14,14,49"), Diff(INSERT,"6,15,500"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"14,119,9"), Diff(INSERT,"500,500,500"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(INSERT,"1"), Diff(EQUAL,"28,1"), Diff(DELETE,"19,29"), Diff(INSERT,"28,128"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"7,14,29"), Diff(INSERT,"0,0,50"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"26,30,30"), Diff(INSERT,"13,0,51"), Diff(EQUAL,");" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=("), Diff(DELETE,"12,3"), Diff(INSERT,"0,"), Diff(EQUAL,"0,"), Diff(DELETE,"1"), Diff(EQUAL,"0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(2"), Diff(DELETE,"7,16"), Diff(INSERT,"0,22"), Diff(EQUAL,",50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "), Diff(DELETE,""val testFeatures=(13,0,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT,"¶¶Collected output:¶0 val curriedMatchingGivenSafe = fn : int * int * int -> bool¶1 - Results:val it = () : unit¶2 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"="), Diff(INSERT," = "), Diff(EQUAL,"(13,"), Diff(DELETE,"12"), Diff(INSERT,"3"), Diff(EQUAL,"0,"), Diff(INSERT,"3"), Diff(EQUAL,"0)"), Diff(DELETE,";" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT," : int * int * int¶3 - (13, 30, 30, true)¶4 val it = () : unit¶5 - (13, 30, 30, true)¶6 val it = () : unit¶7 - (13, 30, 30, true)¶8 val it = () : unit¶9 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"=(26,16,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,16,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,16,31);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(26,0,31);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT," = (6,30,10) : int * int * int¶10 - (6, 30, 10, true)¶11 val it = () : unit¶12 - (6, 30, 10, true)¶13 val it = () : unit¶14 - (6, 30, 10, true)¶15 val it = () : unit¶16 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"="), Diff(INSERT," = "), Diff(EQUAL,"(2"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,",3"), Diff(DELETE,"1,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,31,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(12,0,11);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT,"0,50) : int * int * int¶17 - (27, 30, 50, true)¶18 val it = () : unit¶19 - (27, 30, 50, true)¶20 val it = () : unit¶21 - (27, 30, 50, true)¶22 val it = () : unit¶23 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"=(6"), Diff(INSERT," = (13"), Diff(EQUAL,",15,50)"), Diff(DELETE,";" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,30,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" ""), Diff(INSERT," : int * int * int¶24 - (13, 15, 50, true)¶25 val it = () : unit¶26 - (13, 15, 50, true)¶27 val it = () : unit¶28 - (13, 15, 50, true)¶29 val it = () : unit¶30 - "), Diff(EQUAL,"val testFeatures"), Diff(DELETE,"=(6"), Diff(INSERT," = (13"), Diff(EQUAL,",120,"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0)"), Diff(DELETE,";" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,120,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,30,10);" "concisePrintSafety(givenSafe,testFeature"), Diff(INSERT," : int * int * int¶31 - (13, 120, 10, true)¶32 val it = () : unit¶33 - (13, 120, 10, true)¶34 val it = () : unit"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="678" _type="PauseCommand" date="Tue May 03 16:40:26 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="7241736">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1129]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="677" _type="ConsoleOutput" date="Tue May 03 16:40:26 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7241736" type="ConsoleOutput">
    <outputString><![CDATA[
Testing ListPrintSafety with the following inputs:
"print("Results:");" "val testFeatures=[(7,30,10),(6,15,30),(0,15,10),(6,15,10),(27,120,31)];" "listPrintSafety(printSafety,givenSafe,testFeatures);" "listPrintSafety(printSafety,interpolatedSafe,testFeatures);" "listPrintSafety(printSafety,listDerivedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,givenSafe,testFeatures);" "listPrintSafety(concisePrintSafety,interpolatedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,listDerivedSafe,testFeatures);" 
"val testFeatures=[(500,16,31),(27,120,31),(12,16,0),(13,30,50),(13,14,50)];" "listPrintSafety(printSafety,givenSafe,testFeatures);" "listPrintSafety(printSafety,interpolatedSafe,testFeatures);" "listPrintSafety(printSafety,listDerivedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,givenSafe,testFeatures);" "listPrintSafety(concisePrintSafety,interpolatedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,listDerivedSafe,testFeatures);" "val testFeatures=[(500,16,31),(27,120,10),(7,29,9),(27,120,30),(13,120,9)];" 
"listPrintSafety(printSafety,givenSafe,testFeatures);" "listPrintSafety(printSafety,interpolatedSafe,testFeatures);" "listPrintSafety(printSafety,listDerivedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,givenSafe,testFeatures);" "listPrintSafety(concisePrintSafety,interpolatedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,listDerivedSafe,testFeatures);" 

Collected output:
0 val curriedMatchingGivenSafe = fn : int * int * int -> bool
1 - Results:val it = () : unit
2 - val testFeatures = [(7,30,10),(6,15,30),(0,15,10),(6,15,10),(27,120,31)]
3   : (int * int * int) list
4 - Distance:7 Duration:30 Exhalation:10 Safe:false
5 Distance:6 Duration:15 Exhalation:30 Safe:true
6 Distance:0 Duration:15 Exhalation:10 Safe:false
7 Distance:6 Duration:15 Exhalation:10 Safe:false
8 Distance:27 Duration:120 Exhalation:31 Safe:false
9 val it = () : unit
10 - Distance:7 Duration:30 Exhalation:10 Safe:true
11 Distance:6 Duration:15 Exhalation:30 Safe:true
12 Distance:0 Duration:15 Exhalation:10 Safe:false
13 Distance:6 Duration:15 Exhalation:10 Safe:false
14 Distance:27 Duration:120 Exhalation:31 Safe:false
15 val it = () : unit
16 - Distance:7 Duration:30 Exhalation:10 Safe:true
17 Distance:6 Duration:15 Exhalation:30 Safe:true
18 
19 uncaught exception Match [nonexhaustive match failure]
20   raised at: C:\Users\User\eclipse-workspace\SML\src/SocialDistance.sml:44.61
21 - (7, 30, 10, false)
22 (6, 15, 30, true)
23 (0, 15, 10, false)
24 (6, 15, 10, false)
25 (27, 120, 31, false)
26 val it = () : unit
27 - (7, 30, 10, true)
28 (6, 15, 30, true)
29 (0, 15, 10, false)
30 (6, 15, 10, false)
31 (27, 120, 31, false)
32 val it = () : unit
33 - (7, 30, 10, true)
34 (6, 15, 30, true)
35 
36 uncaught exception Match [nonexhaustive match failure]
37   raised at: C:\Users\User\eclipse-workspace\SML\src/SocialDistance.sml:44.61
38 - val testFeatures = [(500,16,31),(27,120,31),(12,16,0),(13,30,50),(13,14,50)]
39   : (int * int * int) list
40 - Distance:500 Duration:16 Exhalation:31 Safe:false
41 Distance:27 Duration:120 Exhalation:31 Safe:false
42 Distance:12 Duration:16 Exhalation:0 Safe:false
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"s);" "conc"), Diff(INSERT,"¶Testing L"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety"), Diff(DELETE,"(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures"), Diff(INSERT," with the following inputs:¶"print("Results:""), Diff(EQUAL,");" "val testFeatures="), Diff(DELETE,"(13,30,50);" "concisePrintSafety(givenSafe,testFeatures);" "conc"), Diff(INSERT,"[(7,30,10),(6,15,30),(0,15,10),(6,15,10),(27,120,31)];" "l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"interpolatedSafe,testFeatures);" ¶"conciseP"), Diff(INSERT,"p"), Diff(EQUAL,"rintSafety"), Diff(DELETE,"(listDer"), Diff(INSERT,",g"), Diff(EQUAL,"ive"), Diff(DELETE,"d"), Diff(INSERT,"n"), Diff(EQUAL,"Safe,testFeatures);" ""), Diff(DELETE,"val testFeatures=(13,120,30);" "conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"givenSafe,testFeatures);" "conciseP"), Diff(INSERT,"p"), Diff(EQUAL,"rintSafety"), Diff(DELETE,"("), Diff(INSERT,","), Diff(EQUAL,"interpolatedSafe,testFeatures);" ""), Diff(DELETE,"conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"listDerivedSafe,testFeatures);" "val testFeatures=(13,120,50);" "concisePrintSafety(g"), Diff(INSERT,"printSafety,listDer"), Diff(EQUAL,"ive"), Diff(DELETE,"n"), Diff(INSERT,"d"), Diff(EQUAL,"Safe,testFeatures);" ""), Diff(DELETE,"conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"interpolatedSafe,testFeatures);" ¶""), Diff(EQUAL,"concisePrintSafety"), Diff(DELETE,"(listDer"), Diff(INSERT,",g"), Diff(EQUAL,"ive"), Diff(DELETE,"d"), Diff(INSERT,"n"), Diff(EQUAL,"Safe,testFeatures);" ""), Diff(DELETE,"val testFeatures=(27,15,10);" "concisePrintSafety(givenSafe,testFeatures);" ""), Diff(INSERT,"listPrintSafety("), Diff(EQUAL,"concisePrintSafety"), Diff(DELETE,"("), Diff(INSERT,","), Diff(EQUAL,"interpolatedSafe,testFeatures);" ""), Diff(INSERT,"listPrintSafety("), Diff(EQUAL,"concisePrintSafety"), Diff(DELETE,"("), Diff(INSERT,","), Diff(EQUAL,"listDerivedSafe,testFeatures);" "), Diff(INSERT,"¶"), Diff(EQUAL,""val testFeatures="), Diff(DELETE,"(27,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "conc"), Diff(INSERT,"[(500,16,31),(27,120,31),(12,16,0),(13,30,50),(13,14,50)];" "l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"interpolatedSafe,testFeatures);" ¶"conciseP"), Diff(INSERT,"p"), Diff(EQUAL,"rintSafety"), Diff(DELETE,"(listDer"), Diff(INSERT,",g"), Diff(EQUAL,"ive"), Diff(DELETE,"d"), Diff(INSERT,"n"), Diff(EQUAL,"Safe,testFeatures);" ""), Diff(DELETE,"val testFeatures=(27,15,50);" "conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"givenSafe,testFeatures);" "conciseP"), Diff(INSERT,"p"), Diff(EQUAL,"rintSafety"), Diff(DELETE,"("), Diff(INSERT,","), Diff(EQUAL,"interpolatedSafe,testFeatures);" ""), Diff(DELETE,"conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"listDerivedSafe,testFeatures);" "val testFeatures=(27,30,10);" "concisePrintSafety(g"), Diff(INSERT,"printSafety,listDer"), Diff(EQUAL,"ive"), Diff(DELETE,"n"), Diff(INSERT,"d"), Diff(EQUAL,"Safe,testFeatures);" ""), Diff(DELETE,"conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"interpolatedSafe,testFeatures);" ¶""), Diff(EQUAL,"concisePrintSafety"), Diff(DELETE,"(listDer"), Diff(INSERT,",g"), Diff(EQUAL,"ive"), Diff(DELETE,"d"), Diff(INSERT,"n"), Diff(EQUAL,"Safe,testFeatures);" ""), Diff(DELETE,"val testFeatures=(27,30,30);" "concisePrintSafety(givenSafe,testFeatures);" ""), Diff(INSERT,"listPrintSafety("), Diff(EQUAL,"concisePrintSafety"), Diff(DELETE,"("), Diff(INSERT,","), Diff(EQUAL,"interpolatedSafe,testFeatures);" ""), Diff(INSERT,"listPrintSafety("), Diff(EQUAL,"concisePrintSafety"), Diff(DELETE,"("), Diff(INSERT,","), Diff(EQUAL,"listDerivedSafe,testFeatures);" "val testFeatures="), Diff(DELETE,"(27,120,10);" "concisePrintSafety(givenSafe,testFeatures);" "conc"), Diff(INSERT,"[(500,16,31),(27,120,10),(7,29,9),(27,120,30),(13,120,9)];" ¶"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"interpolatedSafe,testFeatures);" ¶"conciseP"), Diff(INSERT,"p"), Diff(EQUAL,"rintSafety"), Diff(DELETE,"(listDer"), Diff(INSERT,",g"), Diff(EQUAL,"ive"), Diff(DELETE,"d"), Diff(INSERT,"n"), Diff(EQUAL,"Safe,testFeatures);" ""), Diff(DELETE,"val testFeatures=(27,120,50);" "concisePrintSafety(givenSafe,testFeatures);" "conciseP"), Diff(INSERT,"listPrintSafety(p"), Diff(EQUAL,"rintSafety"), Diff(DELETE,"("), Diff(INSERT,","), Diff(EQUAL,"interpolatedSafe,testFeatures);" ""), Diff(DELETE,"conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"listDerivedSafe,testFeatures);" "val testFeatures=(27,500,50);" "concisePrintSafety(g"), Diff(INSERT,"printSafety,listDer"), Diff(EQUAL,"ive"), Diff(DELETE,"n"), Diff(INSERT,"d"), Diff(EQUAL,"Safe,testFeatures);" ""), Diff(DELETE,"conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"interpolatedSafe,testFeatures);" ¶""), Diff(EQUAL,"concisePrintSafety"), Diff(DELETE,"(listDer"), Diff(INSERT,",g"), Diff(EQUAL,"ive"), Diff(DELETE,"d"), Diff(INSERT,"n"), Diff(EQUAL,"Safe,testFeatures);" ""), Diff(DELETE,"val testFeatures=(27,120,500);" "conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"givenSafe,testFeatures);" ""), Diff(EQUAL,"concisePrintSafety"), Diff(DELETE,"("), Diff(INSERT,","), Diff(EQUAL,"interpolatedSafe,testFeatures);" ""), Diff(DELETE,"conc"), Diff(INSERT,"l"), Diff(EQUAL,"is"), Diff(DELETE,"e"), Diff(INSERT,"t"), Diff(EQUAL,"PrintSafety("), Diff(DELETE,"listDerivedSafe,testFeatures);" "val testFeatures=(5,15,30);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,121,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(27,120,31);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,15,10);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(6,15,500);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(500,500,500);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(128,128,128);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,0,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(13,0,51);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(0,0,0);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" "concisePrintSafety(listDerivedSafe,testFeatures);" "val testFeatures=(20,22,50);" "concisePrintSafety(givenSafe,testFeatures);" "concisePrintSafety(interpolatedSafe,testFeatures);" ¶"concisePrintSafety(listDerivedSafe,testFeatures);" ¶¶Collected output:¶0 val curriedMatchingGivenSafe = fn : int * int * int -> bool"), Diff(INSERT,"concisePrintSafety,listDerivedSafe,testFeatures);" ¶¶Collected output:¶0 val curriedMatchingGivenSafe = fn : int * int * int -> bool¶1 - Results:val it = () : unit¶2 - val testFeatures = [(7,30,10),(6,15,30),(0,15,10),(6,15,10),(27,120,31)]¶3   : (int * int * int) list¶4 - Distance:7 Duration:30 Exhalation:10 Safe:false¶5 Distance:6 Duration:15 Exhalation:30 Safe:true¶6 Distance:0 Duration:15 Exhalation:10 Safe:false¶7 Distance:6 Duration:15 Exhalation:10 Safe:false¶8 Distance:27 Duration:120 Exhalation:31 Safe:false¶9 val it = () : unit¶10 - Distance:7 Duration:30 Exhalation:10 Safe:true¶11 Distance:6 Duration:15 Exhalation:30 Safe:true¶12 Distance:0 Duration:15 Exhalation:10 Safe:false¶13 Distance:6 Duration:15 Exhalation:10 Safe:false¶14 Distance:27 Duration:120 Exhalation:31 Safe:false¶15 val it = () : unit¶16 - Distance:7 Duration:30 Exhalation:10 Safe:true¶17 Distance:6 Duration:15 Exhalation:30 Safe:true¶18 ¶19 uncaught exception Match [nonexhaustive match failure]¶20   raised at: C:\Users\User\eclipse-workspace\SML\src/SocialDistance.sml:44.61"), Diff(EQUAL,"¶"), Diff(INSERT,"2"), Diff(EQUAL,"1 - "), Diff(DELETE,"Results:val it = () : unit¶2 - val testFeatures = (13,30,30) : int * int * int"), Diff(INSERT,"(7, 30, 10, false)¶22 (6, 15, 30, true)"), Diff(EQUAL,"¶"), Diff(INSERT,"2"), Diff(EQUAL,"3 "), Diff(DELETE,"- (13, 30"), Diff(INSERT,"(0, 15"), Diff(EQUAL,", "), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0, "), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e)¶"), Diff(INSERT,"2"), Diff(EQUAL,"4 "), Diff(DELETE,"val it = () : unit"), Diff(INSERT,"(6, 15, 10, false)"), Diff(EQUAL,"¶"), Diff(INSERT,"2"), Diff(EQUAL,"5 "), Diff(DELETE,"- (13, 3"), Diff(INSERT,"(27, 12"), Diff(EQUAL,"0, 3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,", "), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e)¶"), Diff(INSERT,"2"), Diff(EQUAL,"6 val it = () : unit¶"), Diff(INSERT,"2"), Diff(EQUAL,"7 - ("), Diff(DELETE,"13"), Diff(INSERT,"7"), Diff(EQUAL,", 30, "), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0, true)¶"), Diff(INSERT,"2"), Diff(EQUAL,"8 "), Diff(DELETE,"val it = () : unit"), Diff(INSERT,"(6, 15, 30, true)"), Diff(EQUAL,"¶"), Diff(INSERT,"2"), Diff(EQUAL,"9 "), Diff(DELETE,"- val testFeatures = (6,30,10) : int * int * int¶10 - (6, 30, 10, tru"), Diff(INSERT,"(0, 15, 10, false)¶30 (6, 15, 10, false)¶31 (27, 120, 31, fals"), Diff(EQUAL,"e)¶"), Diff(DELETE,"11"), Diff(INSERT,"32"), Diff(EQUAL," val it = () : unit¶"), Diff(DELETE,"12"), Diff(INSERT,"33"), Diff(EQUAL," - ("), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,", 30, 10, true)¶"), Diff(DELETE,"13 val it = () : unit¶14 -"), Diff(INSERT,"34"), Diff(EQUAL," (6, "), Diff(DELETE,"30"), Diff(INSERT,"15"), Diff(EQUAL,", "), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"0, true)¶"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"5 "), Diff(DELETE,"val it = () : unit"), Diff(EQUAL,"¶"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"6 "), Diff(DELETE,"- val testFeatures = (27,30,50) : int * int * int¶17 - (27, 30, 50, true)¶18 val it = () : unit¶19 - (27, 30, 50, true)¶20 val it = () : unit¶21 - (27, 30, 50, true)¶22 val it = () : unit¶23 - val testFeatures = (13,15,50) : int * int * int¶24 - (13, 15, 50, true)¶25 val it = () : unit¶26 - (13, 15, 50, true)¶27 val it = () : unit¶28 - (13, 15, 50, true)¶29 val it = () : uni"), Diff(INSERT,"uncaught exception Match [nonexhaustive match failure]¶37   raised at: C:\Users\User\eclipse-workspace\SML\src/SocialDistance.sml:44.61¶38 - val testFeatures = [(500,16,31),(27,120,31),(12,16,0),(13,30,50),(13,14,50)]¶39   : (int * int * int) lis"), Diff(EQUAL,"t¶"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"0 - "), Diff(DELETE,"val testFeatures = (13,120,10) : int * int * int¶31 - (13, 120, 10, true)¶32 val it = () : unit¶33 - (13, 120, 10, true)¶34 val it = () : unit"), Diff(INSERT,"Distance:500 Duration:16 Exhalation:31 Safe:false¶41 Distance:27 Duration:120 Exhalation:31 Safe:false¶42 Distance:12 Duration:16 Exhalation:0 Safe:false"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="679" _type="ConsoleOutput" date="Tue May 03 16:40:26 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7241796" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1242
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test"), Diff(DELETE,"ing ListPrintSafety with the following inputs:¶"print("Results:");" "val testFeatures=[(7,30,10),(6,15,30),(0,15,10),(6,15,10),(27,120,31)];" "listPrintSafety(printSafety,givenSafe,testFeatures);" "listPrintSafety(printSafety,interpolatedSafe,testFeatures);" "listPrintSafety(printSafety,listDerivedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,givenSafe,testFeatures);" "listPrintSafety(concisePrintSafety,interpolatedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,listDerivedSafe,testFeatures);" ¶"val testFeatures=[(500,16,31),(27,120,31),(12,16,0),(13,30,50),(13,14,50)];" "listPrintSafety(printSafety,givenSafe,testFeatures);" "listPrintSafety(printSafety,interpolatedSafe,testFeatures);" "listPrintSafety(printSafety,listDerivedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,givenSafe,testFeatures);" "listPrintSafety(concisePrintSafety,interpolatedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,listDerivedSafe,testFeatures);" "val testFeatures=[(500,16,31),(27,120,10),(7,29,9),(27,120,30),(13,120,9)];" ¶"listPrintSafety(printSafety,givenSafe,testFeatures);" "listPrintSafety(printSafety,interpolatedSafe,testFeatures);" "listPrintSafety(printSafety,listDerivedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,givenSafe,testFeatures);" "listPrintSafety(concisePrintSafety,interpolatedSafe,testFeatures);" "listPrintSafety(concisePrintSafety,listDerivedSafe,testFeatures);" ¶¶Collected output:¶0 val curriedMatchingGivenSafe = fn : int * int * int -> bool¶1 - Results:val it = () : unit¶2 - val testFeatures = [(7,30,10),(6,15,30),(0,15,10),(6,15,10),(27,120,31)]¶3   : (int * int * int) list¶4 - Distance:7 Duration:30 Exhalation:10 Safe:false¶5 Distance:6 Duration:15 Exhalation:30 Safe:true¶6 Distance:0 Duration:15 Exhalation:10 Safe:false¶7 Distance:6 Duration:15 Exhalation:10 Safe:false¶8 Distance:27 Duration:120 Exhalation:31 Safe:false¶9 val it = () : unit¶10 - Distance:7 Duration:30 Exhalation:10 Safe:true¶11 Distance:6 Duration:15 Exhalation:30 Safe:true¶12 Distance:0 Duration:15 Exhalation:10 Safe:false¶13 Distance:6 Duration:15 Exhalation:10 Safe:false¶14 Distance:27 Duration:120 Exhalation:31 Safe:false¶15 val it = () : unit¶16 - Distance:7 Duration:30 Exhalation:10 Safe:true¶17 Distance:6 Duration:15 Exhalation:30 Safe:true¶18 ¶19 uncaught exception Match [nonexhaustive match failure]¶20   raised at: C:\Users\User\eclipse-workspace\SML\src/SocialDistance.sml:44.61¶21 - (7, 30, 10, false)¶22 (6, 15, 30, true)¶23 (0, 15, 10, false)¶24 (6, 15, 10, false)¶25 (27, 120, 31, false)¶26 val it = () : unit¶27 - (7, 30, 10, true)¶28 (6, 15, 30, true)¶29 (0, 15, 10, false)¶30 (6, 15, 10, false)¶31 (27, 120, 31, false)¶32 val it = () : unit¶33 - (7, 30, 10, true)¶34 (6, 15, 30, true)¶35 ¶36 uncaught exception Match [nonexhaustive match failure]¶37   raised at: C:\Users\User\eclipse-workspace\SML\src/SocialDistance.sml:44.61¶38 - val testFeatures = [(500,16,31),(27,120,31),(12,16,0),(13,30,50),(13,14,50)]¶39   : (int * int * int) list¶40 - Distance:500 Duration:16 Exhalation:31 Safe:false¶41 Distance:27 Duration:120 Exhalation:31 Safe:false¶42 Distance:12 Duration:16 Exhalation:0 Safe:false"), Diff(INSERT," execution time (ms):1242"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="681" _type="PauseCommand" date="Tue May 03 16:40:28 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7244477">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2681]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="680" _type="ConsoleOutput" date="Tue May 03 16:40:28 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7244477" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2757
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1242"), Diff(INSERT,"2757"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="683" _type="PauseCommand" date="Tue May 03 16:40:31 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7247159">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2682]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="682" _type="ConsoleOutput" date="Tue May 03 16:40:31 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7247159" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2725
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(INSERT,"2"), Diff(EQUAL,"5"), Diff(DELETE,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="685" _type="PauseCommand" date="Tue May 03 16:40:34 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7249888">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2729]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="684" _type="ConsoleOutput" date="Tue May 03 16:40:34 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7249888" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2723
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):272"), Diff(DELETE,"5"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="687" _type="PauseCommand" date="Tue May 03 16:40:37 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7252901">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3013]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="699" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 16:44:36 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="7492639" type="Run" />
  <Command __id="701" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 16:44:36 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="7492639" type="Run" />
  <Command __id="703" _type="PauseCommand" date="Tue May 03 16:44:38 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="7494233">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1594]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="719" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 16:45:14 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="7530481" type="Run" />
  <Command __id="721" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 16:45:14 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="7530481" type="Run" />
  <Command __id="723" _type="PauseCommand" date="Tue May 03 16:45:16 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="7532105">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1624]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="722" _type="ConsoleOutput" date="Tue May 03 16:45:16 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7532105" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src¶")]]]></diff>
  </Command>
  <Command __id="725" _type="PauseCommand" date="Tue May 03 16:45:17 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="7533399">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1294]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="724" _type="ShellCommand" date="Tue May 03 16:45:17 EDT 2022" starttimestamp="1651603184346" timestamp="7533399" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="727" _type="PauseCommand" date="Tue May 03 16:45:19 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="7534744">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1345]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="726" _type="ExceptionCommand" date="Tue May 03 16:45:19 EDT 2022" starttimestamp="1651603184346" timestamp="7534744" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="729" _type="PauseCommand" date="Tue May 03 16:45:22 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7538287">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3543]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="728" _type="ConsoleOutput" date="Tue May 03 16:45:22 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7538287" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="731" _type="PauseCommand" date="Tue May 03 16:45:28 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="7543933">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5646]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="730" _type="ConsoleOutput" date="Tue May 03 16:45:28 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7543933" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9168
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9168¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="733" _type="PauseCommand" date="Tue May 03 16:45:31 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7547390">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3457]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="732" _type="ConsoleOutput" date="Tue May 03 16:45:31 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7547390" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):9168¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="735" _type="PauseCommand" date="Tue May 03 16:45:37 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="7553020">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5630]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="734" _type="ConsoleOutput" date="Tue May 03 16:45:37 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7553020" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9081
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9081¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="737" _type="PauseCommand" date="Tue May 03 16:45:38 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="7554334">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1314]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="736" _type="ConsoleOutput" date="Tue May 03 16:45:38 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7554334" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1257
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"9081¶Number of traces > 600  turning tracing off"), Diff(INSERT,"1257"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="739" _type="PauseCommand" date="Tue May 03 16:45:41 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7557049">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2715]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="738" _type="ConsoleOutput" date="Tue May 03 16:45:41 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7557049" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2760
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1257"), Diff(INSERT,"2760"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="741" _type="PauseCommand" date="Tue May 03 16:45:44 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7559809">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2760]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="740" _type="ConsoleOutput" date="Tue May 03 16:45:44 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="7559809" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2700
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(DELETE,"6"), Diff(INSERT,"0"), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="743" _type="PauseCommand" date="Tue May 03 16:45:46 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="7562529">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2720]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="839" _type="ShellCommand" date="Tue May 03 17:30:19 EDT 2022" starttimestamp="1651603184346" timestamp="10235027" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="842" _type="PauseCommand" date="Tue May 03 17:31:39 EDT 2022" range="1m-2m" starttimestamp="1651603184346" timestamp="10315593">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[80566]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="879" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:40:29 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="10844958" type="Run" />
  <Command __id="881" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:40:29 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="10844959" type="Run" />
  <Command __id="883" _type="PauseCommand" date="Tue May 03 17:40:31 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="10846735">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1776]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="882" _type="ConsoleOutput" date="Tue May 03 17:40:31 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10846735" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2713"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="885" _type="PauseCommand" date="Tue May 03 17:40:32 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="10848187">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1452]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="884" _type="ShellCommand" date="Tue May 03 17:40:32 EDT 2022" starttimestamp="1651603184346" timestamp="10848187" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="887" _type="PauseCommand" date="Tue May 03 17:40:33 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="10849513">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1326]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="886" _type="ExceptionCommand" date="Tue May 03 17:40:33 EDT 2022" starttimestamp="1651603184346" timestamp="10849513" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="888" _type="ExceptionCommand" date="Tue May 03 17:40:34 EDT 2022" starttimestamp="1651603184346" timestamp="10850164" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.PrintSafety.test(PrintSafety.java:39)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="889" _type="ExceptionCommand" date="Tue May 03 17:40:35 EDT 2022" starttimestamp="1651603184346" timestamp="10850715" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.ConcisePrintSafety.test(ConcisePrintSafety.java:33)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="890" _type="ExceptionCommand" date="Tue May 03 17:40:35 EDT 2022" starttimestamp="1651603184346" timestamp="10851242" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.ListPrintSafety.test(ListPrintSafety.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="891" _type="ExceptionCommand" date="Tue May 03 17:40:36 EDT 2022" starttimestamp="1651603184346" timestamp="10851737" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.MatchingSafe.test(MatchingSafe.java:42)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="892" _type="ExceptionCommand" date="Tue May 03 17:40:36 EDT 2022" starttimestamp="1651603184346" timestamp="10852317" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.MatchingGivenSafe.test(MatchingGivenSafe.java:33)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="893" _type="ExceptionCommand" date="Tue May 03 17:40:37 EDT 2022" starttimestamp="1651603184346" timestamp="10852817" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionParamaters.MatchingDerivedSafe.test(MatchingDerivedSafe.java:34)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="895" _type="PauseCommand" date="Tue May 03 17:40:44 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="10860077">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[7260]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="894" _type="ExceptionCommand" date="Tue May 03 17:40:44 EDT 2022" starttimestamp="1651603184346" timestamp="10860077" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurriedOnceInterpolatedSafe.test(CurriedOnceInterpolatedSafe.java:92)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="896" _type="ExceptionCommand" date="Tue May 03 17:40:44 EDT 2022" starttimestamp="1651603184346" timestamp="10860609" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurriedTwiceInterpolatedSafe.test(CurriedTwiceInterpolatedSafe.java:61)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="897" _type="ConsoleOutput" date="Tue May 03 17:40:45 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10860788" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="898" _type="ExceptionCommand" date="Tue May 03 17:40:45 EDT 2022" starttimestamp="1651603184346" timestamp="10861141" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurryableInterpolatedSafe.test(CurryableInterpolatedSafe.java:55)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="899" _type="ShellCommand" date="Tue May 03 17:40:45 EDT 2022" starttimestamp="1651603184346" timestamp="10861339" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="901" _type="ExceptionCommand" date="Tue May 03 17:40:45 EDT 2022" starttimestamp="1651603184346" timestamp="10861629" type="Exception">
    <exceptionString><![CDATA[java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:354)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at java.base/sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:318)
	at java.base/sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:153)
	at java.base/java.io.OutputStreamWriter.flush(OutputStreamWriter.java:251)
	at grader.basics.execution.ARunnerInputStreamProcessor.newInput(ARunnerInputStreamProcessor.java:58)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:991)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:762)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:730)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:256)
	at grader.basics.execution.BasicProcessRunner.run(BasicProcessRunner.java:210)
	at grader.basics.project.BasicProject.launch(BasicProject.java:544)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:90)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:54)
	at gradingTools.utils.RunningProjectUtils.runProject(RunningProjectUtils.java:63)
	at gradingTools.utils.RunningProjectUtils.runProjectandWithMainFile(RunningProjectUtils.java:48)
	at gradingTools.comp524f20.assignment3.AnAbstractSMLRunningProject.createRunningProject(AnAbstractSMLRunningProject.java:30)
	at gradingTools.comp524f20.assignment3.functionReturnValues.CurryableMatchingSafe.test(CurryableMatchingSafe.java:42)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="903" _type="PauseCommand" date="Tue May 03 17:40:56 EDT 2022" range="10s-20s" starttimestamp="1651603184346" timestamp="10872339">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[10710]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="902" _type="ShellCommand" date="Tue May 03 17:40:56 EDT 2022" starttimestamp="1651603184346" timestamp="10872339" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="904" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:40:57 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="10873127" type="Run" />
  <Command __id="905" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:40:57 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="10873127" type="Run" />
  <Command __id="907" _type="PauseCommand" date="Tue May 03 17:40:58 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="10874199">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1072]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="908" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:41:02 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="10877783" type="Run" />
  <Command __id="910" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:41:02 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="10877783" type="Run" />
  <Command __id="912" _type="PauseCommand" date="Tue May 03 17:41:03 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="10879560">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1777]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="911" _type="ConsoleOutput" date="Tue May 03 17:41:03 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10879560" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 600  turning tracing off"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="914" _type="PauseCommand" date="Tue May 03 17:41:05 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="10880984">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1424]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="913" _type="ShellCommand" date="Tue May 03 17:41:05 EDT 2022" starttimestamp="1651603184346" timestamp="10880984" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="916" _type="PauseCommand" date="Tue May 03 17:41:06 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="10882402">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1418]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="915" _type="ExceptionCommand" date="Tue May 03 17:41:06 EDT 2022" starttimestamp="1651603184346" timestamp="10882402" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="918" _type="PauseCommand" date="Tue May 03 17:41:10 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="10885918">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3516]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="917" _type="ConsoleOutput" date="Tue May 03 17:41:10 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10885918" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="920" _type="PauseCommand" date="Tue May 03 17:41:15 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="10891612">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5694]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="919" _type="ConsoleOutput" date="Tue May 03 17:41:15 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10891612" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9135
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9135¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="922" _type="PauseCommand" date="Tue May 03 17:41:19 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="10894975">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3363]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="921" _type="ConsoleOutput" date="Tue May 03 17:41:19 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10894975" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):9135¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="924" _type="PauseCommand" date="Tue May 03 17:41:25 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="10900707">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5732]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="923" _type="ConsoleOutput" date="Tue May 03 17:41:25 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10900707" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9090
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9090¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="926" _type="PauseCommand" date="Tue May 03 17:41:26 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="10901940">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1233]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="925" _type="ConsoleOutput" date="Tue May 03 17:41:26 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10901940" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1227
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"9090¶Number of traces > 600  turning tracing off"), Diff(INSERT,"1227"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="928" _type="PauseCommand" date="Tue May 03 17:41:29 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="10904671">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2731]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="927" _type="ConsoleOutput" date="Tue May 03 17:41:29 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10904671" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2727
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"7"), Diff(EQUAL,"27¶")]]]></diff>
  </Command>
  <Command __id="930" _type="PauseCommand" date="Tue May 03 17:41:31 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="10907367">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2696]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="929" _type="ConsoleOutput" date="Tue May 03 17:41:31 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10907367" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2690
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"727"), Diff(INSERT,"690"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="932" _type="PauseCommand" date="Tue May 03 17:41:34 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="10910069">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2702]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="938" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:41:49 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="10925493" type="Run" />
  <Command __id="940" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:41:49 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="10925493" type="Run" />
  <Command __id="941" _type="ShellCommand" date="Tue May 03 17:41:50 EDT 2022" starttimestamp="1651603184346" timestamp="10925911" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="943" _type="PauseCommand" date="Tue May 03 17:41:52 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="10927755">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1844]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="942" _type="ConsoleOutput" date="Tue May 03 17:41:52 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="10927755" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2697"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="945" _type="PauseCommand" date="Tue May 03 17:41:58 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="10933951">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6196]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="979" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:45:58 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="11174296" type="Run" />
  <Command __id="981" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:45:58 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="11174297" type="Run" />
  <Command __id="983" _type="PauseCommand" date="Tue May 03 17:46:00 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="11175869">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1572]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="982" _type="ConsoleOutput" date="Tue May 03 17:46:00 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11175869" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src¶")]]]></diff>
  </Command>
  <Command __id="985" _type="PauseCommand" date="Tue May 03 17:46:01 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="11177270">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1401]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="984" _type="ShellCommand" date="Tue May 03 17:46:01 EDT 2022" starttimestamp="1651603184346" timestamp="11177270" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="987" _type="PauseCommand" date="Tue May 03 17:46:03 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="11178909">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1639]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1003" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:46:15 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="11191068" type="Run" />
  <Command __id="1005" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:46:15 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="11191069" type="Run" />
  <Command __id="1007" _type="PauseCommand" date="Tue May 03 17:46:17 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="11192897">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1828]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1006" _type="ConsoleOutput" date="Tue May 03 17:46:17 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11192897" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src¶")]]]></diff>
  </Command>
  <Command __id="1009" _type="PauseCommand" date="Tue May 03 17:46:18 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="11194385">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1488]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1008" _type="ShellCommand" date="Tue May 03 17:46:18 EDT 2022" starttimestamp="1651603184346" timestamp="11194385" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1011" _type="PauseCommand" date="Tue May 03 17:46:20 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="11195843">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1458]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1010" _type="ExceptionCommand" date="Tue May 03 17:46:20 EDT 2022" starttimestamp="1651603184346" timestamp="11195843" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1013" _type="PauseCommand" date="Tue May 03 17:46:23 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="11199355">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3512]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1012" _type="ConsoleOutput" date="Tue May 03 17:46:23 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11199355" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1015" _type="PauseCommand" date="Tue May 03 17:46:29 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="11205035">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5680]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1014" _type="ConsoleOutput" date="Tue May 03 17:46:29 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11205035" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9113
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9113¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="1017" _type="PauseCommand" date="Tue May 03 17:46:32 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="11208439">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3404]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1016" _type="ConsoleOutput" date="Tue May 03 17:46:32 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11208439" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):9113¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="1019" _type="PauseCommand" date="Tue May 03 17:46:38 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="11214125">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5686]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1018" _type="ConsoleOutput" date="Tue May 03 17:46:38 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11214125" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9084
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9084¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="1021" _type="PauseCommand" date="Tue May 03 17:46:39 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="11215355">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1230]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1020" _type="ConsoleOutput" date="Tue May 03 17:46:39 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11215355" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1223
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"9084¶Number of traces > 600  turning tracing off"), Diff(INSERT,"1223"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1023" _type="PauseCommand" date="Tue May 03 17:46:42 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="11218124">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2769]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1022" _type="ConsoleOutput" date="Tue May 03 17:46:42 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11218124" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2764
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1223"), Diff(INSERT,"2764"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1025" _type="PauseCommand" date="Tue May 03 17:46:45 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="11220839">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2715]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1024" _type="ConsoleOutput" date="Tue May 03 17:46:45 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11220839" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2709
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(DELETE,"64"), Diff(INSERT,"09"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1027" _type="PauseCommand" date="Tue May 03 17:46:47 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="11223549">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2710]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1026" _type="ConsoleOutput" date="Tue May 03 17:46:47 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11223549" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2702
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):270"), Diff(DELETE,"9"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1029" _type="PauseCommand" date="Tue May 03 17:46:51 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="11227413">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3864]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1028" _type="ConsoleOutput" date="Tue May 03 17:46:51 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11227413" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1134
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2702"), Diff(INSERT,"1134"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1030" _type="ConsoleOutput" date="Tue May 03 17:46:52 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11228294" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):823
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1134"), Diff(INSERT,"823"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1032" _type="PauseCommand" date="Tue May 03 17:46:55 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="11231030">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2736]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1086" _type="ShellCommand" date="Tue May 03 17:59:05 EDT 2022" starttimestamp="1651603184346" timestamp="11961436" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1089" _type="PauseCommand" date="Tue May 03 17:59:14 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="11970629">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9193]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1088" _type="ShellCommand" date="Tue May 03 17:59:14 EDT 2022" starttimestamp="1651603184346" timestamp="11970629" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1090" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 17:59:15 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="11970779" type="Run" />
  <Command __id="1092" _type="PauseCommand" date="Tue May 03 17:59:17 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="11972987">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2208]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1091" _type="ConsoleOutput" date="Tue May 03 17:59:17 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="11972987" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2691"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1094" _type="PauseCommand" date="Tue May 03 18:01:07 EDT 2022" range="1m-2m" starttimestamp="1651603184346" timestamp="12083460">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[110473]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1196" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 19:02:59 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="15795171" type="Run" />
  <Command __id="1198" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 19:02:59 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="15795171" type="Run" />
  <Command __id="1200" _type="PauseCommand" date="Tue May 03 19:03:00 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="15796652">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1480]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1199" _type="ConsoleOutput" date="Tue May 03 19:03:00 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15796651" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):2723"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1202" _type="PauseCommand" date="Tue May 03 19:03:02 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="15797797">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1146]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1201" _type="ShellCommand" date="Tue May 03 19:03:02 EDT 2022" starttimestamp="1651603184346" timestamp="15797797" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1204" _type="PauseCommand" date="Tue May 03 19:03:05 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15801041">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3244]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1216" _type="RunCommand" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 19:03:57 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="15853425" type="Run" />
  <Command __id="1219" _type="PauseCommand" date="Tue May 03 19:03:59 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="15854882">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1457]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1218" _type="ConsoleOutput" date="Tue May 03 19:03:59 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15854882" type="ConsoleOutput">
    <outputString><![CDATA[Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml
Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 600  turning tracing off"), Diff(INSERT,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1221" _type="PauseCommand" date="Tue May 03 19:04:00 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="15856047">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1165]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1220" _type="ShellCommand" date="Tue May 03 19:04:00 EDT 2022" starttimestamp="1651603184346" timestamp="15856047" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1223" _type="PauseCommand" date="Tue May 03 19:04:02 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="15857939">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1892]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1222" _type="ExceptionCommand" date="Tue May 03 19:04:02 EDT 2022" starttimestamp="1651603184346" timestamp="15857939" type="Exception">
    <exceptionString><![CDATA[java.nio.file.NoSuchFileException: C:\Users\User\eclipse-workspace\SML\src\Logs\LocalChecks\comp524f21_assignment4_F21Assignment4SuiteFineGrained.csv
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:235)
	at java.base/java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:478)
	at java.base/java.nio.file.Files.newOutputStream(Files.java:220)
	at java.base/java.nio.file.Files.newBufferedWriter(Files.java:2920)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadSecondAppendableFile(AnAbstractTestLogFileWriter.java:314)
	at grader.basics.observers.AnAbstractTestLogFileWriter.maybeCreateOrLoadAppendableFile(AnAbstractTestLogFileWriter.java:296)
	at grader.basics.observers.AFineGrainedTestLogFileWriter.testRunStarted(AFineGrainedTestLogFileWriter.java:111)
	at org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)
	at org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
	at org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)
	at grader.basics.junit.AGradableJUnitTopLevelSuite.testRunStarted(AGradableJUnitTopLevelSuite.java:107)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1225" _type="PauseCommand" date="Tue May 03 19:04:05 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15861452">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3513]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1224" _type="ConsoleOutput" date="Tue May 03 19:04:05 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15861452" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Found a source file:C:\Users\User\eclipse-workspace\SML\src\Greeting.sml¶Assuming src folder is:C:\Users\User\eclipse-workspace\SML\src"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1227" _type="PauseCommand" date="Tue May 03 19:04:11 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="15867168">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5716]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1226" _type="ConsoleOutput" date="Tue May 03 19:04:11 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15867168" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9210
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9210¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="1229" _type="PauseCommand" date="Tue May 03 19:04:14 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15870602">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3434]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1228" _type="ConsoleOutput" date="Tue May 03 19:04:14 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15870602" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):9210¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="1231" _type="PauseCommand" date="Tue May 03 19:04:20 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="15876352">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5750]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1230" _type="ConsoleOutput" date="Tue May 03 19:04:20 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15876352" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):9179
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):9179¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="1233" _type="PauseCommand" date="Tue May 03 19:04:21 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="15877605">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1253]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1232" _type="ConsoleOutput" date="Tue May 03 19:04:21 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15877605" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1243
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"9179¶Number of traces > 600  turning tracing off"), Diff(INSERT,"1243"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1235" _type="PauseCommand" date="Tue May 03 19:04:24 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15880445">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2840]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1234" _type="ConsoleOutput" date="Tue May 03 19:04:24 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15880445" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2786
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1243"), Diff(INSERT,"2786"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1237" _type="PauseCommand" date="Tue May 03 19:04:27 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15883129">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2684]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1236" _type="ConsoleOutput" date="Tue May 03 19:04:27 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15883129" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2728
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(INSERT,"2"), Diff(EQUAL,"8"), Diff(DELETE,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1239" _type="PauseCommand" date="Tue May 03 19:04:30 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15885917">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2788]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1238" _type="ConsoleOutput" date="Tue May 03 19:04:30 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15885917" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2728
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2728¶")]]]></diff>
  </Command>
  <Command __id="1241" _type="PauseCommand" date="Tue May 03 19:04:33 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15889318">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3401]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1240" _type="ConsoleOutput" date="Tue May 03 19:04:33 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15889318" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1146
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2728"), Diff(INSERT,"1146"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1242" _type="ConsoleOutput" date="Tue May 03 19:04:34 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15890121" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):841
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1146"), Diff(INSERT,"841"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1244" _type="PauseCommand" date="Tue May 03 19:04:37 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15892999">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2878]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1243" _type="ConsoleOutput" date="Tue May 03 19:04:37 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15892999" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2825
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"841"), Diff(INSERT,"2825"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1246" _type="PauseCommand" date="Tue May 03 19:04:40 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15895798">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2799]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1245" _type="ConsoleOutput" date="Tue May 03 19:04:40 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15895798" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2802
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):28"), Diff(INSERT,"0"), Diff(EQUAL,"2"), Diff(DELETE,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1248" _type="PauseCommand" date="Tue May 03 19:04:42 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15898489">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2691]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1247" _type="ConsoleOutput" date="Tue May 03 19:04:42 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15898489" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2725
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"802"), Diff(INSERT,"725"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1250" _type="PauseCommand" date="Tue May 03 19:04:45 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15901292">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2803]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1249" _type="ConsoleOutput" date="Tue May 03 19:04:45 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15901292" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2744
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(DELETE,"25"), Diff(INSERT,"44"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1252" _type="PauseCommand" date="Tue May 03 19:04:52 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="15908182">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6890]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1251" _type="ConsoleOutput" date="Tue May 03 19:04:52 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15908182" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2717
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(DELETE,"44"), Diff(INSERT,"17"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1254" _type="PauseCommand" date="Tue May 03 19:04:55 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15910910">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2728]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1253" _type="ConsoleOutput" date="Tue May 03 19:04:55 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15910910" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2716
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):271"), Diff(DELETE,"7"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1256" _type="PauseCommand" date="Tue May 03 19:05:02 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="15918036">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7126]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1255" _type="ConsoleOutput" date="Tue May 03 19:05:02 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15918036" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2726
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):27"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"6¶")]]]></diff>
  </Command>
  <Command __id="1258" _type="PauseCommand" date="Tue May 03 19:05:05 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15921093">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3057]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1257" _type="ConsoleOutput" date="Tue May 03 19:05:05 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15921093" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):619
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2726"), Diff(INSERT,"619"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1259" _type="ConsoleOutput" date="Tue May 03 19:05:06 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15921931" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@7169b9d8 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):619"), Diff(INSERT,"Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@7169b9d8 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1261" _type="PauseCommand" date="Tue May 03 19:05:08 EDT 2022" range="1s-2s" starttimestamp="1651603184346" timestamp="15923765">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1834]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1260" _type="ExceptionCommand" date="Tue May 03 19:05:08 EDT 2022" starttimestamp="1651603184346" timestamp="15923765" type="Exception">
    <exceptionString><![CDATA[The following output was collected:
0              ../cm/parse/parse.sml:502.47
1 - Results:val it = () : unit
2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall
3 
4 - [autoloading]
5 [autoloading done]
6 stdIn:1.2-2.17 Warning: type vars not generalized because of
7    value restriction are instantiated to dummy types (X1,X2,...)
The following tests were not passed:
no disallowed functions: pass
matching derived safe calls matching safe with matcher: pass
matching given safe calls matching safe with matcher: pass
curryable interpolated safe calls interpolated safe: pass
curried once interpolated safe calls curryable interpolated safe: pass
curried twice interpolated safe calls curried once interpolated safe: pass
curried matching given safe calls curryable matching safe with given safe matcher: pass
curried matching derived safe calls curryable matching safe with derived safe matcher: pass
no magic numbers in functions: pass
StyleTest did not pass completely:View console for more detail%0.0

Test execution time (ms):665
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="1262" _type="ConsoleOutput" date="Tue May 03 19:05:08 EDT 2022" overflow="false" starttimestamp="1651603184346" timestamp="15923771" type="ConsoleOutput">
    <outputString><![CDATA[The following output was collected:
0              ../cm/parse/parse.sml:502.47
1 - Results:val it = () : unit
2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall
3 
4 - [autoloading]
5 [autoloading done]
6 stdIn:1.2-2.17 Warning: type vars not generalized because of
7    value restriction are instantiated to dummy types (X1,X2,...)
The following tests were not passed:
no disallowed functions: pass
matching derived safe calls matching safe with matcher: pass
matching given safe calls matching safe with matcher: pass
curryable interpolated safe calls interpolated safe: pass
curried once interpolated safe calls curryable interpolated safe: pass
curried twice interpolated safe calls curried once interpolated safe: pass
curried matching given safe calls curryable matching safe with given safe matcher: pass
curried matching derived safe calls curryable matching safe with derived safe matcher: pass
no magic numbers in functions: pass
StyleTest did not pass completely:View console for more detail%0.0

Test execution time (ms):665
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f20.assignment0_3.testcases.SMLGreetingLoadAndRun@7169b9d8 . Results may change."), Diff(INSERT,"The following output was collected:¶0              ../cm/parse/parse.sml:502.47¶1 - Results:val it = () : unit¶2 - stdIn:2.1-2.16 Error: unbound structure: A3Grader in path A3Grader.runall¶3 ¶4 - [autoloading]¶5 [autoloading done]¶6 stdIn:1.2-2.17 Warning: type vars not generalized because of¶7    value restriction are instantiated to dummy types (X1,X2,...)¶The following tests were not passed:¶no disallowed functions: pass¶matching derived safe calls matching safe with matcher: pass¶matching given safe calls matching safe with matcher: pass¶curryable interpolated safe calls interpolated safe: pass¶curried once interpolated safe calls curryable interpolated safe: pass¶curried twice interpolated safe calls curried once interpolated safe: pass¶curried matching given safe calls curryable matching safe with given safe matcher: pass¶curried matching derived safe calls curryable matching safe with derived safe matcher: pass¶no magic numbers in functions: pass¶StyleTest did not pass completely:View console for more detail%0.0¶¶Test execution time (ms):665"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1264" _type="PauseCommand" date="Tue May 03 19:05:10 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15926120">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2349]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1265" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 19:05:14 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="15930434" type="Run" />
  <Command __id="1267" _type="ProgramExecutionEvent" className="/joshep_A4/src/a4/RunFA21A4Tests.java" date="Tue May 03 19:05:14 EDT 2022" kind="HitBreakPoint" projectName="joshep_A4" starttimestamp="1651603184346" timestamp="15930434" type="Run" />
  <Command __id="1269" _type="PauseCommand" date="Tue May 03 19:05:42 EDT 2022" range="20s-30s" starttimestamp="1651603184346" timestamp="15958214">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[27780]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1272" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:05:46 EDT 2022" docOffset="0" starttimestamp="1651603184346" timestamp="15962479" />
  <Command __id="1270" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:05:46 EDT 2022" docASTNodeCount="89" docActiveCodeLength="710" docExpressionCount="56" docLength="1127" projectName="joshep_A5" starttimestamp="1651603184346" timestamp="15962354">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A5\src\a5\A5Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a5;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f20.assignment5.F20Assignment5Suite;
import trace.grader.basics.GraderBasicsTraceUtility;
//import util.trace.Tracer;

public class A5Tests {
	static int printedTrace = 600;
	static int maxTrace = 2000;
	static int processTimeOut= 5;
	public static void main(String[] args) {
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(printedTrace);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTrace);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F20Assignment5Suite.main(args);
	}
}]]></snapshot>
  </Command>
  <Command __id="1274" _type="PauseCommand" date="Tue May 03 19:05:53 EDT 2022" range="5s-10s" starttimestamp="1651603184346" timestamp="15969227">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6748]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1275" _type="MoveCaretCommand" caretOffset="284" date="Tue May 03 19:05:53 EDT 2022" docOffset="284" starttimestamp="1651603184346" timestamp="15969302" />
  <Command __id="1277" _type="PauseCommand" date="Tue May 03 19:05:58 EDT 2022" range="2s-5s" starttimestamp="1651603184346" timestamp="15973939">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4637]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
</Events>
