<Events startTimestamp="1651724647535" logVersion="1.0.0.202201202038">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="118" date="Thu May 05 00:24:09 EDT 2022" docOffset="118" starttimestamp="1651724647535" timestamp="1680" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:24:09 EDT 2022" docASTNodeCount="62" docActiveCodeLength="618" docExpressionCount="32" docLength="618" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1524">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\UtilityTesterMain.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a1;

public class UtilityTesterMain {
	static int mediumExhale = 30;
	static int mediumExhaleMinusOne = 28;
	static int mediumExhalePlusTwo = 32;
	
	public static void main(String[] args) {
		SocialDistancing.printGivenAndGeneratedCombinationsDerivedSafety();
		SocialDistancing.printGivenAndGeneratedCombinationsInferredSafety();
		SocialDistancing.compareSafetyComputations();
		SocialDistancing.printSafeDistancesAndDurations(mediumExhale);
		SocialDistancing.printSafeDistancesAndDurations(mediumExhaleMinusOne);
		SocialDistancing.printSafeDistancesAndDurations(mediumExhalePlusTwo);
	}
}
]]></snapshot>
  </Command>
  <Command __id="3" _type="PauseCommand" date="Thu May 05 00:24:11 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="3748">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2058]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2" _type="Delete" date="Thu May 05 00:24:11 EDT 2022" docASTNodeCount="62" docActiveCodeLength="617" docExpressionCount="32" docLength="617" endLine="4" length="1" offset="117" startLine="4" starttimestamp="1651724647535" timestamp="3738">
    <text><![CDATA[8]]></text>
  </DocumentChange>
  <Command __id="4" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:24:11 EDT 2022" starttimestamp="1651724647535" timestamp="3788" />
  <Command __id="11" _type="ProgramExecutionEvent" className="/joshep_A2/src/a1/UtilityTesterMain.java" date="Thu May 05 00:24:17 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="9501" type="Run" />
  <Command __id="13" _type="RunCommand" className="/joshep_A2/src/a1/UtilityTesterMain.java" date="Thu May 05 00:24:17 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="9502" type="Run" />
  <Command __id="14" _type="ConsoleOutput" date="Thu May 05 00:24:17 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="9918" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
16,40,39,false
11,37,9,false
23,101,46,false
20,103,45,false
1,138,29,false
9,136,39,false
0,15,33,false
4,78,51,false
28,99,43,false
7,73,48,false
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="16" _type="ProgramExecutionEvent" className="/joshep_A2/src/a1/UtilityTesterMain.java" date="Thu May 05 00:24:17 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="10080" type="Run" />
  <Command __id="17" _type="ProgramExecutionEvent" className="/joshep_A2/src/a1/UtilityTesterMain.java" date="Thu May 05 00:24:17 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="10080" type="Run" />
  <Command __id="15" _type="ConsoleOutput" date="Thu May 05 00:24:17 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="10099" type="ConsoleOutput">
    <outputString><![CDATA[13,62,3,true
3,70,34,true
31,109,39,true
7,57,47,true
17,102,0,true
28,142,11,true
11,62,6,true
25,22,19,true
10,25,45,true
26,21,4,true
Distance,Duration,Exhalation,Derived,Inferred
8,139,9,false,true
29,41,54,false,true
21,13,41,true,true
26,74,32,false,true
15,112,33,false,true
8,129,15,false,true
14,38,42,false,true
6,30,53,false,true
0,69,44,false,true
25,76,12,false,true
30,[{13,30}{27,120}{6,15}]
29,[{13,30}{27,120}{6,15}]
32,[{27,30}{13,15}]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Distance,Duration,Exhalation,IsSaf"), Diff(INSERT,"13,62,3,tru"), Diff(EQUAL,"e¶"), Diff(DELETE,"1"), Diff(EQUAL,"3,"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,"0,3"), Diff(DELETE,"0"), Diff(INSERT,"4"), Diff(EQUAL,",true¶"), Diff(DELETE,"6,30,10"), Diff(INSERT,"31,109,39"), Diff(EQUAL,",true¶"), Diff(DELETE,"2"), Diff(EQUAL,"7,"), Diff(DELETE,"30,50"), Diff(INSERT,"57,47"), Diff(EQUAL,",true¶1"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,",1"), Diff(DELETE,"5,5"), Diff(INSERT,"02,"), Diff(EQUAL,"0,true¶"), Diff(DELETE,"13,120"), Diff(INSERT,"28,142"), Diff(EQUAL,",1"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,",true¶"), Diff(DELETE,"27,120,30"), Diff(INSERT,"11,62,6"), Diff(EQUAL,",true¶"), Diff(DELETE,"6,15,30,true¶----------¶16,40,39,false¶11,37,9,false¶23,101,46"), Diff(INSERT,"25,22,19,true¶10,25,45,true¶26,21,4,true¶Distance,Duration,Exhalation,Derived,Inferred¶8,139,9"), Diff(EQUAL,",false"), Diff(DELETE,"¶20,103,45"), Diff(INSERT,",true¶29,41,54"), Diff(EQUAL,",false"), Diff(INSERT,",true"), Diff(EQUAL,"¶"), Diff(INSERT,"2"), Diff(EQUAL,"1,13"), Diff(DELETE,"8,29,false¶9,136"), Diff(INSERT,",41,true,true¶26,74"), Diff(EQUAL,",3"), Diff(DELETE,"9"), Diff(INSERT,"2"), Diff(EQUAL,",false"), Diff(DELETE,"¶0,15,33,false¶4,78,51,false¶28,99,43,false¶7,73"), Diff(INSERT,",true¶15,112,33,false,true¶8,129,15,false,true¶14,38"), Diff(EQUAL,",4"), Diff(DELETE,"8"), Diff(INSERT,"2"), Diff(EQUAL,",false"), Diff(DELETE,"¶Distance,Duration,Exhalation,IsSaf"), Diff(INSERT,",tru"), Diff(EQUAL,"e¶"), Diff(DELETE,"13"), Diff(INSERT,"6"), Diff(EQUAL,",30,"), Diff(DELETE,"30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------"), Diff(INSERT,"53,false,true¶0,69,44,false,true¶25,76,12,false,true¶30,[{13,30}{27,120}{6,15}]¶29,[{13,30}{27,120}{6,15}]¶32,[{27,30}{13,15}]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="19" _type="PauseCommand" date="Thu May 05 00:24:34 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="27393">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[17294]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="18" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Thu May 05 00:24:34 EDT 2022" starttimestamp="1651724647535" timestamp="27393" />
  <Command __id="20" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:24:35 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="27784" type="Run" />
  <Command __id="21" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:24:35 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="27785" type="Run" />
  <Command __id="23" _type="PauseCommand" date="Thu May 05 00:24:38 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="31399">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3614]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="22" _type="ShellCommand" date="Thu May 05 00:24:38 EDT 2022" starttimestamp="1651724647535" timestamp="31399" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="25" _type="PauseCommand" date="Thu May 05 00:24:41 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="33846">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2447]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="24" _type="ConsoleOutput" date="Thu May 05 00:24:41 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="33846" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33
Test execution time (ms):3
SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0

Test execution time (ms):3
SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null in class registry%0.0

Test execution time (ms):0
SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0

Test execution time (ms):0
SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0

Test execution time (ms):0
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"13,62,3,true¶3,70,34,true¶31,109,39,true¶7,57,47,true¶17,102,0,true¶28,142,11,true¶11,62,6,true¶25,22,19,true¶10,25,45,true¶26,21,4,true¶Distance,Duration,Exhalation,Derived,"), Diff(INSERT,"Test execution time (ms):33¶Test execution time (ms):3¶SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0¶¶Test execution time (ms):3¶SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVC"), Diff(EQUAL,"In"), Diff(DELETE,"f"), Diff(INSERT,"t"), Diff(EQUAL,"er"), Diff(DELETE,"red¶8,139,9,false,true¶29,41,54,false,true¶21,13,41,true,true¶26,74,32,false,true¶15,112,33,false,true¶8,129,15,false,true¶14,38,42,false,true¶6,30,53,false,true¶0,69,44,false,true¶25,76,12,false,true¶30,[{13,30}{27,120}{6,15}]¶29,[{13,30}{27,120}{6,15}]¶32,[{27,30}{13,15}]"), Diff(INSERT,"polatingMain returns null in class registry%0.0¶¶Test execution time (ms):0¶SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0¶¶Test execution time (ms):0¶SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0¶¶Test execution time (ms):0¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="27" _type="PauseCommand" date="Thu May 05 00:25:02 EDT 2022" range="20s-30s" starttimestamp="1651724647535" timestamp="55060">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[21214]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="26" _type="ShellCommand" date="Thu May 05 00:25:02 EDT 2022" starttimestamp="1651724647535" timestamp="55060" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="29" _type="MoveCaretCommand" caretOffset="1432" date="Thu May 05 00:25:03 EDT 2022" docOffset="1432" starttimestamp="1651724647535" timestamp="55665" />
  <Command __id="31" _type="PauseCommand" date="Thu May 05 00:25:06 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="58913">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3248]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="30" _type="ShellCommand" date="Thu May 05 00:25:06 EDT 2022" starttimestamp="1651724647535" timestamp="58913" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="33" _type="PauseCommand" date="Thu May 05 00:25:28 EDT 2022" range="20s-30s" starttimestamp="1651724647535" timestamp="80836">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[21923]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="32" _type="ShellCommand" date="Thu May 05 00:25:28 EDT 2022" starttimestamp="1651724647535" timestamp="80836" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="34" _type="MoveCaretCommand" caretOffset="1436" date="Thu May 05 00:25:28 EDT 2022" docOffset="1436" starttimestamp="1651724647535" timestamp="80921" />
  <DocumentChange __id="5" _type="Insert" date="Thu May 05 00:24:11 EDT 2022" docASTNodeCount="62" docActiveCodeLength="618" docExpressionCount="32" docLength="618" length="1" offset="117" starttimestamp="1651724647535" timestamp="4116">
    <text><![CDATA[9]]></text>
  </DocumentChange>
  <Command __id="28" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:25:02 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1881" docExpressionCount="110" docLength="2425" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="55462">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\ClassRegistry.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a2;
import gradingTools.comp524f21. assignment2.F21A2SocialDistanceClassRegistry;

public class ClassRegistry implements F21A2SocialDistanceClassRegistry{

	@Override
	public Class<?> getBasicSocialDistanceUtility() {
		// TODO Auto-generated method stub
		return a1.SocialDistancing.class;
	}

	@Override
	public Class<?> getSocialDistancDerivingModel() {
		// TODO Auto-generated method stub
		return DerivedModel.class;
	}

	@Override
	public Class<?> getSocialDistancInferringModel() {
		// TODO Auto-generated method stub
		return InferredModel.class;
	}

	@Override
	public Class<?> getSocialDistanceBasicModel() {
		// TODO Auto-generated method stub
		return BasicModel.class;
	}

	@Override
	public Class<?> getSocialDistanceClassifierFactory() {
		// TODO Auto-generated method stub
		return ClassifierFactory.class;
	}

	@Override
	public Class<?> getSocialDistanceController() {
		// TODO Auto-generated method stub
		return Controller.class;
	}

	@Override
	public Class<?> getSocialDistanceControllerFactory() {
		// TODO Auto-generated method stub
		return ControllerFactory.class;
	}

	@Override
	public Class<?> getSocialDistanceInterpolatingModel() {
		// TODO Auto-generated method stub
		return InterpolatedModel.class;
	}

	@Override
	public Class<?> getSocialDistanceMVCBasicMain() {
		// TODO Auto-generated method stub
		return BasicMain.class;
	}

	@Override
	public Class<?> getSocialDistanceMVCDerivingMain() {
		// TODO Auto-generated method stub
		return DerivedMain.class;
	}

	@Override
	public Class<?> getSocialDistanceMVCInferringMain() {
		// TODO Auto-generated method stub
		return InferringMain.class;
	}

	@Override
	public Class<?> getSocialDistanceMVCInterpolatingMain() {
		// TODO Auto-generated method stub
		return InterpolatedMain.class;
	}

	@Override
	public Class<?> getSocialDistanceModelFactory() {
		// TODO Auto-generated method stub
		return ModelFactory.class;
	}

	@Override
	public Class<?> getSocialDistanceUilityTesterMain() {
		// TODO Auto-generated method stub
		return a1.UtilityTesterMain.class;
	}

	@Override
	public Class<?> getSocialDistanceView() {
		// TODO Auto-generated method stub
		return LogView.class;
	}

	@Override
	public Class<?> getSocialDistanceViewFactory() {
		// TODO Auto-generated method stub
		return ViewFactory.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="36" _type="PauseCommand" date="Thu May 05 00:25:31 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="84415">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3494]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="37" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:25:32 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="84539" />
  <Command __id="35" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:25:31 EDT 2022" docASTNodeCount="29" docActiveCodeLength="162" docExpressionCount="14" docLength="162" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="84415">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\BasicMain.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a2;

public class BasicMain {
	public static void main (String[] args) {
		ModelFactory.setModel(new BasicModel());
		MVC.setupMVC("Given");
	}
}
]]></snapshot>
  </Command>
  <Command __id="39" _type="PauseCommand" date="Thu May 05 00:25:45 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="97517">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12978]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="40" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:25:45 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="97690" />
  <Command __id="38" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:25:45 EDT 2022" docASTNodeCount="32" docActiveCodeLength="240" docExpressionCount="19" docLength="274" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="97517">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\BasicModel.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a2;


public class BasicModel extends AbstractModel {
	public BasicModel() {
	}
	
	@Override
	public Boolean isSafe() {
		// TODO Auto-generated method stub
		return a1.SocialDistancing.isGivenSafe(getDistance(), getDuration(), getExhalation());
	}

}
]]></snapshot>
  </Command>
  <Command __id="42" _type="PauseCommand" date="Thu May 05 00:25:51 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="103775">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6085]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="43" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:25:51 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="103993" />
  <Command __id="45" _type="PauseCommand" date="Thu May 05 00:26:07 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="119937">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15944]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="44" _type="ShellCommand" date="Thu May 05 00:26:07 EDT 2022" starttimestamp="1651724647535" timestamp="119937" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="47" _type="PauseCommand" date="Thu May 05 00:26:09 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="121999">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2062]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="46" _type="ConsoleOutput" date="Thu May 05 00:26:09 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="121999" type="ConsoleOutput">
    <outputString><![CDATA[ModelFactoryTest did not pass completely:Null model factory in class registry%0.0Steps traced since last test:

Test execution time (ms):2

ViewFactoryTest did not pass completely:Null view factory in class registry%0.0

Test execution time (ms):1
ControllerFactoryTest did not pass completely:Null controller factory in class registry%0.0

Test execution time (ms):0
ClassifierFactoryTest did not pass completely:Null classifier factory in class registry%0.0

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):33¶Test execution time (ms):3¶SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0"), Diff(INSERT,"ModelFactoryTest did not pass completely:Null model factory in class registry%0.0Steps traced since last test:"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,"¶"), Diff(DELETE,"SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null"), Diff(INSERT,"¶ViewFactoryTest did not pass completely:Null view factory"), Diff(EQUAL," in class registry%0.0¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶"), Diff(DELETE,"SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null"), Diff(INSERT,"ControllerFactoryTest did not pass completely:Null controller factory"), Diff(EQUAL," in class registry%0.0¶¶Test execution time (ms):0¶"), Diff(DELETE,"SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null"), Diff(INSERT,"ClassifierFactoryTest did not pass completely:Null classifier factory"), Diff(EQUAL," in class registry%0.0¶¶Test execution time (ms):"), Diff(DELETE,"0¶Test execution time (ms):1"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="49" _type="PauseCommand" date="Thu May 05 00:26:13 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="126105">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4106]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="48" _type="ConsoleOutput" date="Thu May 05 00:26:13 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="126105" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):11
1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.25 the minimum required accuracy threshold should be 0.8
0.25
F21A2IsInferredSafeTest did not pass completely:view console output%0.756961958806221

Test execution time (ms):71
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
1,64,57,true
8,137,38,true
20,95,25,true
24,17,12,true
2,104,20,true
29,29,20,true
2,17,48,true
6,73,34,true
2,120,48,true
29,78,53,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ModelFactoryTest did not pass completely:Null model factory in class registry%0.0Steps traced since last test:¶¶Test execution time (ms):2¶¶ViewFactoryTest did not pass completely:Null view factory in class registry%0.0¶¶Test execution time (ms):1¶ControllerFactory"), Diff(INSERT,"Test execution time (ms):11¶1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.25 the minimum required accuracy threshold should be 0.8¶0.25¶F21A2IsInferredSafe"), Diff(EQUAL,"Test did not pass completely:"), Diff(DELETE,"Null controller factory in class registry%0.0¶¶Test execution time (ms):0¶ClassifierFactoryTest did not pass completely:Null classifier factory in class registry%0.0¶¶Test execution time (ms):2"), Diff(INSERT,"view console output%0.756961958806221¶¶Test execution time (ms):71¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶1,64,57,true¶8,137,38,true¶20,95,25,true¶24,17,12,true¶2,104,20,true¶29,29,20,true¶2,17,48,true¶6,73,34,true¶2,120,48,true¶29,78,53,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="50" _type="ConsoleOutput" date="Thu May 05 00:26:13 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="126224" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
1,51,20,true
5,63,26,true
9,53,29,true
31,137,17,true
26,91,31,true
11,107,33,true
19,1,7,true
4,110,43,true
2,74,39,true
12,26,37,true
Test execution time (ms):31
Distance,Duration,Exhalation,Derived,Inferred
17,133,15,false,true
17,40,45,false,true
17,16,33,false,true
20,2,46,true,true
17,80,9,true,true
16,11,18,true,true
17,110,57,false,true
11,9,48,false,true
14,125,3,false,true
19,67,44,false,true
Distance,Duration,Exhalation,Derived,Inferred
26,89,41,false,true
20,110,19,false,true
22,33,22,false,true
13,122,18,false,true
13,64,15,false,true
1,72,8,false,true
15,85,32,false,true
11,61,26,false,true
8,48,24,false,true
20,129,51,false,true
Distance,Duration,Exhalation,Derived,Inferred
1,50,55,false,true
31,131,40,false,true
28,142,53,false,true
28,36,27,true,true
15,27,49,false,true
1,34,27,false,true
11,80,6,false,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):11¶1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.25 the minimum required accuracy threshold should be 0.8¶0.25¶F21A2IsInferredSafeTest did not pass completely:view console output%0.756961958806221¶¶Test execution time (ms):71¶Distance,Duration,Exhalation,IsSafe¶13,30,30"), Diff(INSERT,"Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶1,51,20,true¶5,63,26,true¶9,53,29,true¶31,137,17,true¶26,91,31,true¶11,107,33,true¶19,1,7,true¶4,110,43,true¶2,74,39,true¶12,26,37,true¶Test execution time (ms):31¶Distance,Duration,Exhalation,Derived,Inferred¶17,133,15,false,true¶17,40,45,false,true¶17,16,33,false,true¶20,2,46,true,true¶17,80,9,true,true¶16,11,18,true,true¶17,110,57,false,true¶11,9,48,false,true¶14,125,3,false,true¶19,67,44,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶26,89,41,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"6,3"), Diff(INSERT,"2"), Diff(EQUAL,"0,"), Diff(INSERT,"1"), Diff(EQUAL,"10,"), Diff(INSERT,"19,false,"), Diff(EQUAL,"true¶2"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,",3"), Diff(DELETE,"0,50"), Diff(INSERT,"3,22,false"), Diff(EQUAL,",true¶13,1"), Diff(DELETE,"5,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶1,64,57,true¶8,137,38,true¶20,95,25,true¶24,17,12,true¶2,104,20,true¶29,29,20,true¶2,17,48,true¶6,73,34,true¶2,120,48,true¶29,78,53"), Diff(INSERT,"22,18,false,true¶13,64,15,false,true¶1,72,8,false,true¶15,85,32,false,true¶11,61,26,false,true¶8,48,24,false,true¶20,129,51,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶1,50,55,false,true¶31,131,40,false,true¶28,142,53,false,true¶28,36,27,true,true¶15,27,49,false,true¶1,34,27,false,true¶11,80,6,false"), Diff(EQUAL,",true¶")]]]></diff>
  </Command>
  <Command __id="51" _type="ConsoleOutput" date="Thu May 05 00:26:13 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="126244" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
27,39,35,false,true
9,126,17,false,true
7,84,41,false,true
2,17,30,false,true
16,56,54,false,true
29,22,27,true,true
29,15,55,false,true
1,133,12,false,true
0,42,0,false,true
3,17,47,false,true
Distance,Duration,Exhalation,Derived,Inferred
21,43,9,true,true
17,12,0,true,true
13,139,22,false,true
30,45,51,false,true
1,58,59,false,true
27,106,40,false,true
28,62,51,false,true
9,114,8,false,true
1,82,43,false,true
3,23,54,false,true
Distance,Duration,Exhalation,Derived,Inferred
10,36,46,false,true
13,42,9,true,true
4,33,28,false,true
29,103,50,false,true
27,110,4,true,true
15,22,8,true,true
21,34,32,false,true
27,94,6,true,true
30,58,24,true,true
7,19,56,false,true
Distance,Duration,Exhalation,Derived,Inferred
7,4,47,false,true
23,130,9,false,true
15,135,10,false,true
13,5,12,true,true
11,65,32,false,true
15,55,3,true,true
3,70,47,false,true
21,20,49,false,true
15,13,4,true,true
2,55,25,false,true
Distance,Duration,Exhalation,Derived,Inferred
23,65,7,true,true
25,136,11,false,true
22,96,12,false,true
5,107,33,false,true
23,132,27,false,true
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10"), Diff(INSERT,"Derived,Inferred¶27,39,35,false,true¶9,126,17,false,true¶7,84,41,false"), Diff(EQUAL,",true¶2"), Diff(INSERT,",1"), Diff(EQUAL,"7,30,"), Diff(DELETE,"50"), Diff(INSERT,"false"), Diff(EQUAL,",true¶1"), Diff(DELETE,"3,15,50,true¶13,120,10"), Diff(INSERT,"6,56,54,false,true¶29,22,27,true"), Diff(EQUAL,",true¶2"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,",1"), Diff(DELETE,"20,30"), Diff(INSERT,"5,55,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"6"), Diff(INSERT,"1"), Diff(EQUAL,",1"), Diff(DELETE,"5,30,true¶----------¶1,51,20,true¶5,63,26,true¶9,5"), Diff(INSERT,"33,12,false,true¶0,42,0,false,true¶3,17,47,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶21,4"), Diff(EQUAL,"3,"), Diff(DELETE,"2"), Diff(EQUAL,"9,true"), Diff(DELETE,"¶31,137,17,true¶26,91,31,true¶11,107,33,true¶19,1,7"), Diff(INSERT,",true¶17,12,0,true,true¶13,139,22,false,true¶30,45,51,false,true¶1,58,59,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"4,1"), Diff(INSERT,"27,"), Diff(EQUAL,"10"), Diff(INSERT,"6"), Diff(EQUAL,",4"), Diff(DELETE,"3"), Diff(INSERT,"0,false"), Diff(EQUAL,",true¶2"), Diff(DELETE,",74,39,true¶12,26,37,true¶Test execution time (ms):31"), Diff(INSERT,"8,62,51,false,true¶9,114,8,false,true¶1,82,43,false,true¶3,23,54,false,true"), Diff(EQUAL,"¶Distance,Duration,Exhalation,Derived,Inferred¶1"), Diff(DELETE,"7,133,15"), Diff(INSERT,"0,36,46"), Diff(EQUAL,",false,true¶1"), Diff(DELETE,"7"), Diff(INSERT,"3"), Diff(EQUAL,",4"), Diff(DELETE,"0,45,false,true¶17,16,33"), Diff(INSERT,"2,9,true,true¶4,33,28"), Diff(EQUAL,",false,true¶2"), Diff(DELETE,"0,2,46,tru"), Diff(INSERT,"9,103,50,fals"), Diff(EQUAL,"e,true¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"7,"), Diff(DELETE,"8"), Diff(INSERT,"11"), Diff(EQUAL,"0,"), Diff(DELETE,"9"), Diff(INSERT,"4"), Diff(EQUAL,",true,true¶1"), Diff(DELETE,"6,11,1"), Diff(INSERT,"5,22,"), Diff(EQUAL,"8,true,true¶"), Diff(DELETE,"17,110,57"), Diff(INSERT,"21,34,32"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"11,9,48,false,true¶14,125,3,fals"), Diff(INSERT,"27,94,6,true,true¶30,58,24,tru"), Diff(EQUAL,"e,true¶"), Diff(INSERT,"7,"), Diff(EQUAL,"19,"), Diff(INSERT,"5"), Diff(EQUAL,"6"), Diff(DELETE,"7,44"), Diff(EQUAL,",false,true¶Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"26,89"), Diff(INSERT,"7,4"), Diff(EQUAL,",4"), Diff(DELETE,"1"), Diff(INSERT,"7"), Diff(EQUAL,",false,true¶2"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,",1"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"0,"), Diff(DELETE,"1"), Diff(EQUAL,"9,false,true¶"), Diff(DELETE,"22,33,22"), Diff(INSERT,"15,135,10"), Diff(EQUAL,",false,true¶13,"), Diff(DELETE,"122,18,fals"), Diff(INSERT,"5,12,tru"), Diff(EQUAL,"e,true¶1"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,",6"), Diff(DELETE,"4,15"), Diff(INSERT,"5,32"), Diff(EQUAL,",false,true¶1"), Diff(DELETE,",72,8,false,true¶15,85,32"), Diff(INSERT,"5,55,3,true,true¶3,70,47"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"11,61,26"), Diff(INSERT,"21,20,49"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"8,48,24,fals"), Diff(INSERT,"15,13,4,tru"), Diff(EQUAL,"e,true¶2"), Diff(DELETE,"0,129,51"), Diff(INSERT,",55,25"), Diff(EQUAL,",false,true¶Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"1,50,55,false,true¶31,131,40,fals"), Diff(INSERT,"23,65,7,tru"), Diff(EQUAL,"e,true¶2"), Diff(DELETE,"8"), Diff(INSERT,"5"), Diff(EQUAL,",1"), Diff(DELETE,"42,53"), Diff(INSERT,"36,11"), Diff(EQUAL,",false,true¶2"), Diff(DELETE,"8,36,27,true,true¶15,27,49"), Diff(INSERT,"2,96,12"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"1,34,27"), Diff(INSERT,"5,107,33"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"11,80,6"), Diff(INSERT,"23,132,27"), Diff(EQUAL,",false,true¶")]]]></diff>
  </Command>
  <Command __id="52" _type="ConsoleOutput" date="Thu May 05 00:26:13 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="126390" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):135
Cannot run test, no basic main class:
BasicMainTest did not pass completely:Could not create project. See console messages.%0.0

Test execution time (ms):5
Cannot run test, no basic main class:
InterpolatingMainTest did not pass completely:Could not create project. See console messages.%0.0

Test execution time (ms):3
Cannot run test, no basic main class:
DerivingMainTest did not pass completely:Could not create project. See console messages.%0.0

Test execution time (ms):3
Cannot run test, no inferring main class:
InferringMainTest did not pass completely:Could not create project. See console messages.%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2CommonPropertiesInherited did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):4
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2NoHiddenFields did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2NonPublicAccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Distance,Duration,Exhalation,Derived,Inferred¶27,39,35,false,true¶9,126,17,false,true¶7,84,41,false,true¶2,17,30,false,true¶16,56,54,false,true¶29,22,27,true,true¶29,15,55,false,true¶1,133,12,false,true¶0,42,0,false,true¶3,17,47,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶21,43,9,true,true¶17,12,0,true,true¶13,139,22,false,true¶30,45,51,false,true¶1,58,59,false,true¶27,106,40,false,true¶28,62,51,false,true¶9,114,8,false,true¶1,82,43,false,true¶3,23,54,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶10,36,46,false,true¶13,42,9,true,true¶4,33,28,false,true¶29,103,50,false,true¶27,110,4,true,true¶15,22,8,true,true¶21,34,32,false,true¶27,94,6,true,true¶30,58,24,true,true¶7,19,56,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶7,4,47,false,true¶23,130,9,false,true¶15,135,10,false,true¶13,5,12,true,true¶11,65,32,false,true¶15,55,3,true,true¶3,70,47,false,true¶21,20,49,false,true¶15,13,4,true,true¶2,55,25,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶23,65,7,true,true¶25,136,11,false,true¶22,96,12,false,true¶5,107,33,false,true¶23,132,27,false,true"), Diff(INSERT,"Test execution time (ms):135¶Cannot run test, no basic main class:¶BasicMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):5¶Cannot run test, no basic main class:¶InterpolatingMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):3¶Cannot run test, no basic main class:¶DerivingMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):3¶Cannot run test, no inferring main class:¶InferringMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2CommonPropertiesInherited did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):4¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2NoHiddenFields did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2NonPublicAccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="54" _type="PauseCommand" date="Thu May 05 00:26:16 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="129099">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2709]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="53" _type="ConsoleOutput" date="Thu May 05 00:26:16 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="129099" type="ConsoleOutput">
    <outputString><![CDATA[Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks

Test execution time (ms):1
SocialDistanceMainSetsModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceMainFetchesViewSingleton did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceMainCallsControllerMethod did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceControllerFetchesModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks

SocialDistanceControllerWritesModel did not pass completely:No checkstyle output, check console error messages%0.0
Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceViewISAPropertyListener did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
BasicModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):2
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
DerivingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
InterpolatingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
InferringModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):135¶Cannot run test, no basic main class:¶BasicMainTest did not pass completely:Could not create project. See console messages.%0.0"), Diff(INSERT,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"1"), Diff(EQUAL,"¶"), Diff(DELETE,"Cannot run test, no basic main class:¶InterpolatingMainTest"), Diff(INSERT,"SocialDistanceMainSetsModelSingleton"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Could not create project. See"), Diff(INSERT,"No checkstyle output, check"), Diff(EQUAL," console "), Diff(INSERT,"error "), Diff(EQUAL,"messages"), Diff(DELETE,"."), Diff(EQUAL,"%0.0¶"), Diff(DELETE,"¶Test execution time (ms):3¶Cannot run test, no basic main class:¶DerivingMainTest"), Diff(INSERT,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainFetchesViewSingleton"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Could not create project. See"), Diff(INSERT,"No checkstyle output, check"), Diff(EQUAL," console "), Diff(INSERT,"error "), Diff(EQUAL,"messages"), Diff(DELETE,"."), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(DELETE,"3"), Diff(INSERT,"0"), Diff(EQUAL,"¶"), Diff(DELETE,"Cannot run test, no inferring main class:¶InferringMainTest"), Diff(INSERT,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainCallsControllerMethod"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"Could not create project. See"), Diff(INSERT,"No checkstyle output, check"), Diff(EQUAL," console "), Diff(INSERT,"error "), Diff(EQUAL,"messages"), Diff(DELETE,"."), Diff(EQUAL,"%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶"), Diff(DELETE,"A2CommonPropertiesInherited"), Diff(INSERT,"SocialDistanceControllerFetchesModelSingleton"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶"), Diff(DELETE,"A2CommonSignaturesAreInherited"), Diff(INSERT,"¶SocialDistanceControllerWritesModel"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶"), Diff(DELETE,"A2Encapsulation"), Diff(INSERT,"SocialDistanceViewISAPropertyListener"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶"), Diff(DELETE,"A2InterfaceAsType"), Diff(INSERT,"BasicModelRegistersObserver"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶"), Diff(DELETE,"A2NoHiddenFields"), Diff(INSERT,"DerivingModelRegistersObserver"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶"), Diff(DELETE,"A2NonPublicAccessModifiersMatched"), Diff(INSERT,"InterpolatingModelRegistersObserver"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶"), Diff(DELETE,"A2PublicMethodsOverride"), Diff(INSERT,"InferringModelRegistersObserver"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="56" _type="PauseCommand" date="Thu May 05 00:26:19 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="132184">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3085]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="55" _type="ConsoleOutput" date="Thu May 05 00:26:19 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="132184" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):12
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶Test execution time (ms):1¶SocialDistanceMainSetsModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainFetchesViewSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainCallsControllerMethod did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceControllerFetchesModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶SocialDistanceControllerWritesModel did not pass completely:No checkstyle output, check console error messages%0.0¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceViewISAPropertyListener did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶BasicModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):2¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InterpolatingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferringModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶"), Diff(EQUAL,"Test execution time (ms):1"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="58" _type="PauseCommand" date="Thu May 05 00:26:33 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="146079">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13895]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="57" _type="ConsoleOutput" date="Thu May 05 00:26:33 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="146079" type="ConsoleOutput">
    <outputString><![CDATA[Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
DerivedAndInferredPrintCallSharedProcedure did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
DerivedPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
InferredPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
ModelReuse did not pass completely:One or more of model classes null in configuration%0.0

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):12"), Diff(INSERT,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedAndInferredPrintCallSharedProcedure did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferredPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶ModelReuse did not pass completely:One or more of model classes null in configuration%0.0¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="60" _type="PauseCommand" date="Thu May 05 00:26:41 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="153879">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7800]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="59" _type="ShellCommand" date="Thu May 05 00:26:41 EDT 2022" starttimestamp="1651724647535" timestamp="153879" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="41" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:25:51 EDT 2022" docASTNodeCount="245" docActiveCodeLength="1582" docExpressionCount="132" docLength="1582" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="103775">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\AbstractModel.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a2;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeSupport;

public abstract class AbstractModel {
	public static final String DISTANCE = "Distance";
	public static final String DURATION = "Duration";
	public static final String EXHALE = "Exhalation";
	public static final String SAFE = "Safe";

	Integer Distance = null;
	Integer Duration = null;
	Integer Exhalation = null;
	Boolean Safe = null;
	
	PropertyChangeSupport changeSupport = new PropertyChangeSupport(this);
	
	public void addPropertyChangeListener(PropertyChangeListener listener) {
		changeSupport.addPropertyChangeListener(listener);
	}
	public void setLevels (int distance, int duration, int exhale) {
		Integer oldDistance = Distance;
		Integer oldDuration = Duration;
		Integer oldExhale = Exhalation;
		Boolean oldIsSafe = Safe;
		Distance = distance;	
		Duration = duration;
		Exhalation = exhale;
		Safe = isSafe();
		changeSupport.firePropertyChange(DISTANCE, oldDistance, Distance);
		changeSupport.firePropertyChange(DURATION, oldDuration, Duration);
		changeSupport.firePropertyChange(EXHALE, oldExhale, Exhalation);
		changeSupport.firePropertyChange(SAFE, oldIsSafe, Safe);
		reset();
	}
	
	protected void reset() {
		Distance = null;
		Duration = null;
		Exhalation = null;
		Safe = null;
	}
	public Integer getDistance() {return Distance;}
	public Integer getDuration() {return Duration;}
	public Integer getExhalation() {return Exhalation;}
	public abstract Boolean isSafe();
}
]]></snapshot>
  </Command>
  <Command __id="62" _type="PauseCommand" date="Thu May 05 00:26:43 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="156188">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2309]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="61" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:26:43 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1881" docExpressionCount="110" docLength="2425" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="156188">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\ClassRegistry.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a2;¶import gradingTools.comp524f21. assignment2.F21A2SocialDistanceClassRegistry;¶¶public class ClassRegistry implements F21A2SocialDistanceClassRegistry{¶¶	@Override¶	public Class<?> getBasicSocialDistanceUtility() {¶		// TODO Auto-generated method stub¶		return a1.SocialDistancing.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistancDerivingModel() {¶		// TODO Auto-generated method stub¶		return DerivedModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistancInferringModel() {¶		// TODO Auto-generated method stub¶		return InferredModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceBasicModel() {¶		// TODO Auto-generated method stub¶		return BasicModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceClassifierFactory() {¶		// TODO Auto-generated method stub¶		return ClassifierFactory.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceController() {¶		// TODO Auto-generated method stub¶		return Controller.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceControllerFactory() {¶		// TODO Auto-generated method stub¶		return ControllerFactory.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceInterpolatingModel() {¶		// TODO Auto-generated method stub¶		return InterpolatedModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCBasicMain() {¶		// TODO Auto-generated method stub¶		return BasicMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCDerivingMain() {¶		// TODO Auto-generated method stub¶		return DerivedMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCInferringMain() {¶		// TODO Auto-generated method stub¶		return InferringMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCInterpolatingMain() {¶		// TODO Auto-generated method stub¶		return InterpolatedMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceModelFactory() {¶		// TODO Auto-generated method stub¶		return ModelFactory.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceUilityTesterMain() {¶		// TODO Auto-generated method stub¶		return a1.UtilityTesterMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceView() {¶		// TODO Auto-generated method stub¶		return LogView.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceViewFactory() {¶		// TODO Auto-generated method stub¶		return ViewFactory.class;¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="63" _type="MoveCaretCommand" caretOffset="1436" date="Thu May 05 00:26:43 EDT 2022" docOffset="1436" starttimestamp="1651724647535" timestamp="156315" />
  <Command __id="65" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:26:44 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="157387" />
  <Command __id="64" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:26:44 EDT 2022" docASTNodeCount="245" docActiveCodeLength="1582" docExpressionCount="132" docLength="1582" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="157131">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\AbstractModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a2;¶import java.beans.PropertyChangeListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeSupport;¶¶public abstract class AbstractModel {¶	public static final String DISTANCE = "Distance";¶	public static final String DURATION = "Duration";¶	public static final String EXHALE = "Exhalation";¶	public static final String SAFE = "Safe";¶¶	Integer Distance = null;¶	Integer Duration = null;¶	Integer Exhalation = null;¶	Boolean Safe = null;¶	¶	PropertyChangeSupport changeSupport = new PropertyChangeSupport(this);¶	¶	public void addPropertyChangeListener(PropertyChangeListener listener) {¶		changeSupport.addPropertyChangeListener(listener);¶	}¶	public void setLevels (int distance, int duration, int exhale) {¶		Integer oldDistance = Distance;¶		Integer oldDuration = Duration;¶		Integer oldExhale = Exhalation;¶		Boolean oldIsSafe = Safe;¶		Distance = distance;	¶		Duration = duration;¶		Exhalation = exhale;¶		Safe = isSafe();¶		changeSupport.firePropertyChange(DISTANCE, oldDistance, Distance);¶		changeSupport.firePropertyChange(DURATION, oldDuration, Duration);¶		changeSupport.firePropertyChange(EXHALE, oldExhale, Exhalation);¶		changeSupport.firePropertyChange(SAFE, oldIsSafe, Safe);¶		reset();¶	}¶	¶	protected void reset() {¶		Distance = null;¶		Duration = null;¶		Exhalation = null;¶		Safe = null;¶	}¶	public Integer getDistance() {return Distance;}¶	public Integer getDuration() {return Duration;}¶	public Integer getExhalation() {return Exhalation;}¶	public abstract Boolean isSafe();¶}¶")]]]></diff>
  </Command>
  <Command __id="67" _type="PauseCommand" date="Thu May 05 00:26:49 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="161867">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4480]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="68" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:26:49 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="162031" />
  <Command __id="66" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:26:49 EDT 2022" docASTNodeCount="42" docActiveCodeLength="346" docExpressionCount="21" docLength="414" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="161867">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\ClassRegistry.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a1;

public class ClassRegistry implements gradingTools.comp524f21.assignment1.F21A1SocialDistanceClassRegistry{
	@Override
	public Class<?> getBasicSocialDistanceUtility() {
		// TODO Auto-generated method stub
		return SocialDistancing.class;
	}

	@Override
	public Class<?> getSocialDistanceUilityTesterMain() {
		// TODO Auto-generated method stub
		return UtilityTesterMain.class;
	}
}
]]></snapshot>
  </Command>
  <Command __id="70" _type="PauseCommand" date="Thu May 05 00:26:52 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="164545">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2514]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="69" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:26:52 EDT 2022" docASTNodeCount="1360" docActiveCodeLength="9302" docExpressionCount="849" docLength="11369" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="164545">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a1;

import java.util.ArrayList;
import java.util.List;
import a2.ClassifierFactory;
import gradingTools.comp524f20.assignment1.WekaUtil;



public class SocialDistancing {
	/*	public static void main(String[] args) {
		System.out.println("Yo");
	}
	 */	
	static final int smallDistance = 6;
	static final int mediumDistance = 13;
	static final int largeDistance = 27;
	
	static final int smallDuration = 15;
	static final int mediumDuration = 30;
	static final int largeDuration = 120;
	
	static final int smallExhale = 10;
	static final int mediumExhale = 30;
	static final int largeExhale = 50;
	
	static int tenRepetitions = 10;
	/**
	If the combination of the method parameters is safe, based on the given data, the function
	returns true. Otherwise, it returns false.
	*/	
	public static boolean isGivenSafe(int distance, int duration, int exhale) {
		if(distance == smallDistance) { 					//small distance
			if(duration == mediumDuration) {							//med duration
				if(exhale == smallExhale) {					//small exhale
					return true;
				}
			} else if (duration == smallDuration) {					//small duration
				if(exhale == mediumExhale) {					//med exhale
					return true;
				}
			}	
		}else if(distance == mediumDistance) {							//med distance
			if(duration == mediumDuration) {								//med duration
				if(exhale == mediumExhale) {						//med exhale
					return true;
				}
			} else if(duration == smallDuration) {						//small duration
				if(exhale == largeExhale) {						//large exhale
					return true;
				}
			}else if(duration == largeDuration) {						//large duration
				if(exhale == smallExhale) {						//small exhale
					return true;
				}
			}
		}else if(distance == largeDistance) {							//large distance
			if(duration == mediumDuration) {								//med duration
				if(exhale == largeExhale) {						//large exhale
					return true;
				}
			} else if (duration == largeDuration) {					//large duration
				if(exhale == mediumExhale) {						//med exhale
					return true;
				}
			}
		}
		return false;
	}
	/* 	higher distance are safe, so interpolate low (can have 0)
		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE
	*/
	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {
		
		int interpolatedDistance = distanceLowInterpolation(distance);
		int interpolatedDuration = durationHighInterpolation(duration);
		int interpolatedExhale = exhaleHighInterpolation(exhale);
		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);
		
	}
	public static boolean isInterpolatedSafe(int distance, int duration) {
		//exhalation level set to medium
		int interpolatedDistance = distanceLowInterpolation(distance);
		int interpolatedDuration = durationHighInterpolation(duration);
		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);
	}
	public static boolean isInterpolatedSafe(int distance) {
		//duration and exhalation levels set to medium
		int interpolatedDistance = distanceLowInterpolation(distance);
		return isInterpolatedSafe(interpolatedDistance, mediumDuration);
	}
	public static boolean isDerivedSafe (int distance, int duration, int exhale) {
		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx
			return true;
		}
		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx
			return true;
		}
		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx
			return true;
		}
		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx
			return true;
		}
		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx
			return true;
		}
		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx
			return true;
		}
		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx
			return true;
		}
		return false;
	}
	public static void printGeneratedCombinationDerivedSafety() {
		 int distance = (int)(Math.random()*32);
		 int duration = (int)(Math.random()*144);
		 int exhale = (int)(Math.random()*60);

		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);
		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);
	}
	public static void printGivenAndGeneratedCombinationsDerivedSafety() {
		System.out.println("Distance,Duration,Exhalation,IsSafe");
		System.out.println("13,30,30,true");
		System.out.println("6,30,10,true");
		System.out.println("27,30,50,true");
		System.out.println("13,15,50,true");
		System.out.println("13,120,10,true");
		System.out.println("27,120,30,true");
		System.out.println("6,15,30,true");
		System.out.println("----------");
		for(int i = 0; i < tenRepetitions; i++) {
			printGeneratedCombinationDerivedSafety();
		}
	}
	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {
		int interpolatedExhale = exhaleHighInterpolation(exhale);
		List<Integer[]> list = new ArrayList<Integer[]>();
		if (interpolatedExhale < 0) {return list;}
		if (interpolatedExhale == smallExhale) { 								//small exhale
			 Integer[] a1 = {6,30};
			 Integer[] a2 = {13,120};
			list.add(a1);
			list.add(a2);
			return list;
		} else if (interpolatedExhale == mediumExhale) {			//med exhale
			 Integer[] a1 = {13,30};
			 Integer[] a2 = {27,120};
			 Integer[] a3 = {6,15};
			list.add(0, a1);
			list.add(1, a2);
			list.add(2, a3);
			return list;
		} else if (interpolatedExhale == largeExhale) {						//large exhale
			 Integer[] a1 = {27,30};
			 Integer[] a2 = {13,15};
			list.add(0, a1);
			list.add(1, a2);
			return list;
		};
		return list;
	}
	public static void printSafeDistancesAndDurations(int exhale) {
		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);
		System.out.print(exhale + ",[");
		for (int i = 0; i < generatedList.size(); i++) {
			System.out.print("{");
			for (int jay = 0; jay < generatedList.get(i).length; jay++) {
				System.out.print(generatedList.get(i)[jay]);
				if (jay != generatedList.get(i).length - 1) {
					System.out.print(",");
				}
			}
			System.out.print("}");
		}
		System.out.print("]");
		System.out.print("\n");
	}
	/**
	  low interpolation to a sequence of values is either an element of the sequence or zero.
	  If higher values of the parameter are safer, then it is interpolated low. 
	 */
	public static int distanceLowInterpolation(int distance) {
		//low interpolation to a sequence of values is either an element of the sequence or zero
		//If higher values of the parameter are safer, then it is interpolated low
		int interpolatedDistance;
		if (distance < smallDistance) {					//distance interpolation
			interpolatedDistance = 0;
		} else if(distance < mediumDistance) {
			interpolatedDistance = smallDistance;
		} else if(distance < largeDistance) {
			interpolatedDistance = mediumDistance;
		} else {
			interpolatedDistance = largeDistance;
		}
		return interpolatedDistance;
	}
	/**
	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.
	 */
	
	public static int durationHighInterpolation(int duration) {
		//high interpolation to a sequence of values is either an element of the sequence or max integer
		//If lower values of the parameter are safer, then it is interpolated high.
		int interpolatedDuration;
		if (duration > largeDuration) {					//duration interpolation
			interpolatedDuration = Integer.MAX_VALUE;
		} else if(duration > mediumDuration) {
			interpolatedDuration = largeDuration;
		} else if(duration > smallDuration) {
			interpolatedDuration = mediumDuration;
		} else {
			interpolatedDuration = smallDuration;
		}
		return interpolatedDuration;
	}	
	/**
	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels
	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.
	 */
	public static int exhaleHighInterpolation(int exhalation) {
		//high interpolation to a sequence of values is either an element of the sequence or max integer
		//If lower values of the parameter are safer, then it is interpolated high.
		int interpolatedExhalation;
		if (exhalation > largeExhale) {						//exhale interpolation
			interpolatedExhalation = Integer.MAX_VALUE;
		} else if(exhalation > mediumExhale) {
			interpolatedExhalation = largeExhale;
		} else if(exhalation > smallExhale) {
			interpolatedExhalation = mediumExhale;
		} else {
			interpolatedExhalation = smallExhale;
		}
		return interpolatedExhalation;
	}
	
	public static boolean isInferredSafe(int distance, int duration, int exhalation) {
		 String TRUE = "true";
		 String FALSE = "false";
		 String resultAttributeName = "safe";
		 String[] resultValueNames = {TRUE, FALSE};
		 String[] featureNames = {"distance", "duration", "exhalation"};
		
		double[] anInputFeatureValues = {distance, duration, exhalation};
		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);
		return TRUE.equals(aResultString) ?true:false;
	}
	
	public static int compareSafetyComputations() {
		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");
		int correctInferrences = 0;
		for(int i = 0; i < tenRepetitions; i++) {
			int distance = (int)(Math.random()*32);
			int duration = (int)(Math.random()*144);
			int exhale = (int)(Math.random()*60);
			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);
			boolean combinationInferred = isInferredSafe(distance, duration, exhale);
			if(combinationDerived == combinationInferred) {
				correctInferrences++;
			}
			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);
		}
		return correctInferrences;
	}
	
	public static void printGeneratedCombinationInferredSafety() {
		 int distance = (int)(Math.random()*32);
		 int duration = (int)(Math.random()*144);
		 int exhale = (int)(Math.random()*60);

		 boolean inferredResult = isInferredSafe(distance, duration, exhale);
		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);
	}
	public static void printGivenAndGeneratedCombinationsInferredSafety() {
		System.out.println("Distance,Duration,Exhalation,IsSafe");
		System.out.println("13,30,30,true");
		System.out.println("6,30,10,true");
		System.out.println("27,30,50,true");
		System.out.println("13,15,50,true");
		System.out.println("13,120,10,true");
		System.out.println("27,120,30,true");
		System.out.println("6,15,30,true");
		System.out.println("----------");
		for(int i = 0; i < tenRepetitions; i++) {
			printGeneratedCombinationInferredSafety();
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="71" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:26:52 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="164726" />
  <Command __id="73" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:26:53 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="165817" />
  <Command __id="72" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:26:53 EDT 2022" docASTNodeCount="42" docActiveCodeLength="346" docExpressionCount="21" docLength="414" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="165710">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\ClassRegistry.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶public class ClassRegistry implements gradingTools.comp524f21.assignment1.F21A1SocialDistanceClassRegistry{¶	@Override¶	public Class<?> getBasicSocialDistanceUtility() {¶		// TODO Auto-generated method stub¶		return SocialDistancing.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceUilityTesterMain() {¶		// TODO Auto-generated method stub¶		return UtilityTesterMain.class;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="75" _type="PauseCommand" date="Thu May 05 00:26:58 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="171181">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5364]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="76" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:26:58 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="171331" />
  <Command __id="74" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:26:58 EDT 2022" docASTNodeCount="1360" docActiveCodeLength="9302" docExpressionCount="849" docLength="11369" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="171181">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶import java.util.ArrayList;¶import java.util.List;¶import a2.ClassifierFactory;¶import gradingTools.comp524f20.assignment1.WekaUtil;¶¶¶¶public class SocialDistancing {¶	/*	public static void main(String[] args) {¶		System.out.println("Yo");¶	}¶	 */	¶	static final int smallDistance = 6;¶	static final int mediumDistance = 13;¶	static final int largeDistance = 27;¶	¶	static final int smallDuration = 15;¶	static final int mediumDuration = 30;¶	static final int largeDuration = 120;¶	¶	static final int smallExhale = 10;¶	static final int mediumExhale = 30;¶	static final int largeExhale = 50;¶	¶	static int tenRepetitions = 10;¶	/**¶	If the combination of the method parameters is safe, based on the given data, the function¶	returns true. Otherwise, it returns false.¶	*/	¶	public static boolean isGivenSafe(int distance, int duration, int exhale) {¶		if(distance == smallDistance) { 					//small distance¶			if(duration == mediumDuration) {							//med duration¶				if(exhale == smallExhale) {					//small exhale¶					return true;¶				}¶			} else if (duration == smallDuration) {					//small duration¶				if(exhale == mediumExhale) {					//med exhale¶					return true;¶				}¶			}	¶		}else if(distance == mediumDistance) {							//med distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			} else if(duration == smallDuration) {						//small duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			}else if(duration == largeDuration) {						//large duration¶				if(exhale == smallExhale) {						//small exhale¶					return true;¶				}¶			}¶		}else if(distance == largeDistance) {							//large distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			} else if (duration == largeDuration) {					//large duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			}¶		}¶		return false;¶	}¶	/* 	higher distance are safe, so interpolate low (can have 0)¶		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE¶	*/¶	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {¶		¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);¶		¶	}¶	public static boolean isInterpolatedSafe(int distance, int duration) {¶		//exhalation level set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);¶	}¶	public static boolean isInterpolatedSafe(int distance) {¶		//duration and exhalation levels set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		return isInterpolatedSafe(interpolatedDistance, mediumDuration);¶	}¶	public static boolean isDerivedSafe (int distance, int duration, int exhale) {¶		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx¶			return true;¶		}¶		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx¶			return true;¶		}¶		return false;¶	}¶	public static void printGeneratedCombinationDerivedSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);¶	}¶	public static void printGivenAndGeneratedCombinationsDerivedSafety() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationDerivedSafety();¶		}¶	}¶	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		List<Integer[]> list = new ArrayList<Integer[]>();¶		if (interpolatedExhale < 0) {return list;}¶		if (interpolatedExhale == smallExhale) { 								//small exhale¶			 Integer[] a1 = {6,30};¶			 Integer[] a2 = {13,120};¶			list.add(a1);¶			list.add(a2);¶			return list;¶		} else if (interpolatedExhale == mediumExhale) {			//med exhale¶			 Integer[] a1 = {13,30};¶			 Integer[] a2 = {27,120};¶			 Integer[] a3 = {6,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			list.add(2, a3);¶			return list;¶		} else if (interpolatedExhale == largeExhale) {						//large exhale¶			 Integer[] a1 = {27,30};¶			 Integer[] a2 = {13,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			return list;¶		};¶		return list;¶	}¶	public static void printSafeDistancesAndDurations(int exhale) {¶		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);¶		System.out.print(exhale + ",[");¶		for (int i = 0; i < generatedList.size(); i++) {¶			System.out.print("{");¶			for (int jay = 0; jay < generatedList.get(i).length; jay++) {¶				System.out.print(generatedList.get(i)[jay]);¶				if (jay != generatedList.get(i).length - 1) {¶					System.out.print(",");¶				}¶			}¶			System.out.print("}");¶		}¶		System.out.print("]");¶		System.out.print("\n");¶	}¶	/**¶	  low interpolation to a sequence of values is either an element of the sequence or zero.¶	  If higher values of the parameter are safer, then it is interpolated low. ¶	 */¶	public static int distanceLowInterpolation(int distance) {¶		//low interpolation to a sequence of values is either an element of the sequence or zero¶		//If higher values of the parameter are safer, then it is interpolated low¶		int interpolatedDistance;¶		if (distance < smallDistance) {					//distance interpolation¶			interpolatedDistance = 0;¶		} else if(distance < mediumDistance) {¶			interpolatedDistance = smallDistance;¶		} else if(distance < largeDistance) {¶			interpolatedDistance = mediumDistance;¶		} else {¶			interpolatedDistance = largeDistance;¶		}¶		return interpolatedDistance;¶	}¶	/**¶	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	¶	public static int durationHighInterpolation(int duration) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedDuration;¶		if (duration > largeDuration) {					//duration interpolation¶			interpolatedDuration = Integer.MAX_VALUE;¶		} else if(duration > mediumDuration) {¶			interpolatedDuration = largeDuration;¶		} else if(duration > smallDuration) {¶			interpolatedDuration = mediumDuration;¶		} else {¶			interpolatedDuration = smallDuration;¶		}¶		return interpolatedDuration;¶	}	¶	/**¶	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels¶	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	public static int exhaleHighInterpolation(int exhalation) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedExhalation;¶		if (exhalation > largeExhale) {						//exhale interpolation¶			interpolatedExhalation = Integer.MAX_VALUE;¶		} else if(exhalation > mediumExhale) {¶			interpolatedExhalation = largeExhale;¶		} else if(exhalation > smallExhale) {¶			interpolatedExhalation = mediumExhale;¶		} else {¶			interpolatedExhalation = smallExhale;¶		}¶		return interpolatedExhalation;¶	}¶	¶	public static boolean isInferredSafe(int distance, int duration, int exhalation) {¶		 String TRUE = "true";¶		 String FALSE = "false";¶		 String resultAttributeName = "safe";¶		 String[] resultValueNames = {TRUE, FALSE};¶		 String[] featureNames = {"distance", "duration", "exhalation"};¶		¶		double[] anInputFeatureValues = {distance, duration, exhalation};¶		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);¶		return TRUE.equals(aResultString) ?true:false;¶	}¶	¶	public static int compareSafetyComputations() {¶		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");¶		int correctInferrences = 0;¶		for(int i = 0; i < tenRepetitions; i++) {¶			int distance = (int)(Math.random()*32);¶			int duration = (int)(Math.random()*144);¶			int exhale = (int)(Math.random()*60);¶			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);¶			boolean combinationInferred = isInferredSafe(distance, duration, exhale);¶			if(combinationDerived == combinationInferred) {¶				correctInferrences++;¶			}¶			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);¶		}¶		return correctInferrences;¶	}¶	¶	public static void printGeneratedCombinationInferredSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean inferredResult = isInferredSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);¶	}¶	public static void printGivenAndGeneratedCombinationsInferredSafety() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationInferredSafety();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="78" _type="PauseCommand" date="Thu May 05 00:27:01 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="173895">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2564]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="79" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:27:01 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="174028" />
  <Command __id="77" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:27:01 EDT 2022" docASTNodeCount="62" docActiveCodeLength="618" docExpressionCount="32" docLength="618" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="173895">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\UtilityTesterMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶public class UtilityTesterMain {¶	static int mediumExhale = 30;¶	static int mediumExhaleMinusOne = 2"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL,";¶	static int mediumExhalePlusTwo = 32;¶	¶	public static void main(String[] args) {¶		SocialDistancing.printGivenAndGeneratedCombinationsDerivedSafety();¶		SocialDistancing.printGivenAndGeneratedCombinationsInferredSafety();¶		SocialDistancing.compareSafetyComputations();¶		SocialDistancing.printSafeDistancesAndDurations(mediumExhale);¶		SocialDistancing.printSafeDistancesAndDurations(mediumExhaleMinusOne);¶		SocialDistancing.printSafeDistancesAndDurations(mediumExhalePlusTwo);¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package a1;

public class UtilityTesterMain {
	static int mediumExhale = 30;
	static int mediumExhaleMinusOne = 29;
	static int mediumExhalePlusTwo = 32;
	
	public static void main(String[] args) {
		SocialDistancing.printGivenAndGeneratedCombinationsDerivedSafety();
		SocialDistancing.printGivenAndGeneratedCombinationsInferredSafety();
		SocialDistancing.compareSafetyComputations();
		SocialDistancing.printSafeDistancesAndDurations(mediumExhale);
		SocialDistancing.printSafeDistancesAndDurations(mediumExhaleMinusOne);
		SocialDistancing.printSafeDistancesAndDurations(mediumExhalePlusTwo);
	}
}
]]></snapshot>
  </Command>
  <Command __id="81" _type="PauseCommand" date="Thu May 05 00:27:04 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="176687">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2659]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="82" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:27:04 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="176803" />
  <Command __id="80" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:27:04 EDT 2022" docASTNodeCount="1360" docActiveCodeLength="9302" docExpressionCount="849" docLength="11369" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="176687">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶import java.util.ArrayList;¶import java.util.List;¶import a2.ClassifierFactory;¶import gradingTools.comp524f20.assignment1.WekaUtil;¶¶¶¶public class SocialDistancing {¶	/*	public static void main(String[] args) {¶		System.out.println("Yo");¶	}¶	 */	¶	static final int smallDistance = 6;¶	static final int mediumDistance = 13;¶	static final int largeDistance = 27;¶	¶	static final int smallDuration = 15;¶	static final int mediumDuration = 30;¶	static final int largeDuration = 120;¶	¶	static final int smallExhale = 10;¶	static final int mediumExhale = 30;¶	static final int largeExhale = 50;¶	¶	static int tenRepetitions = 10;¶	/**¶	If the combination of the method parameters is safe, based on the given data, the function¶	returns true. Otherwise, it returns false.¶	*/	¶	public static boolean isGivenSafe(int distance, int duration, int exhale) {¶		if(distance == smallDistance) { 					//small distance¶			if(duration == mediumDuration) {							//med duration¶				if(exhale == smallExhale) {					//small exhale¶					return true;¶				}¶			} else if (duration == smallDuration) {					//small duration¶				if(exhale == mediumExhale) {					//med exhale¶					return true;¶				}¶			}	¶		}else if(distance == mediumDistance) {							//med distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			} else if(duration == smallDuration) {						//small duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			}else if(duration == largeDuration) {						//large duration¶				if(exhale == smallExhale) {						//small exhale¶					return true;¶				}¶			}¶		}else if(distance == largeDistance) {							//large distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			} else if (duration == largeDuration) {					//large duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			}¶		}¶		return false;¶	}¶	/* 	higher distance are safe, so interpolate low (can have 0)¶		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE¶	*/¶	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {¶		¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);¶		¶	}¶	public static boolean isInterpolatedSafe(int distance, int duration) {¶		//exhalation level set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);¶	}¶	public static boolean isInterpolatedSafe(int distance) {¶		//duration and exhalation levels set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		return isInterpolatedSafe(interpolatedDistance, mediumDuration);¶	}¶	public static boolean isDerivedSafe (int distance, int duration, int exhale) {¶		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx¶			return true;¶		}¶		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx¶			return true;¶		}¶		return false;¶	}¶	public static void printGeneratedCombinationDerivedSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);¶	}¶	public static void printGivenAndGeneratedCombinationsDerivedSafety() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationDerivedSafety();¶		}¶	}¶	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		List<Integer[]> list = new ArrayList<Integer[]>();¶		if (interpolatedExhale < 0) {return list;}¶		if (interpolatedExhale == smallExhale) { 								//small exhale¶			 Integer[] a1 = {6,30};¶			 Integer[] a2 = {13,120};¶			list.add(a1);¶			list.add(a2);¶			return list;¶		} else if (interpolatedExhale == mediumExhale) {			//med exhale¶			 Integer[] a1 = {13,30};¶			 Integer[] a2 = {27,120};¶			 Integer[] a3 = {6,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			list.add(2, a3);¶			return list;¶		} else if (interpolatedExhale == largeExhale) {						//large exhale¶			 Integer[] a1 = {27,30};¶			 Integer[] a2 = {13,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			return list;¶		};¶		return list;¶	}¶	public static void printSafeDistancesAndDurations(int exhale) {¶		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);¶		System.out.print(exhale + ",[");¶		for (int i = 0; i < generatedList.size(); i++) {¶			System.out.print("{");¶			for (int jay = 0; jay < generatedList.get(i).length; jay++) {¶				System.out.print(generatedList.get(i)[jay]);¶				if (jay != generatedList.get(i).length - 1) {¶					System.out.print(",");¶				}¶			}¶			System.out.print("}");¶		}¶		System.out.print("]");¶		System.out.print("\n");¶	}¶	/**¶	  low interpolation to a sequence of values is either an element of the sequence or zero.¶	  If higher values of the parameter are safer, then it is interpolated low. ¶	 */¶	public static int distanceLowInterpolation(int distance) {¶		//low interpolation to a sequence of values is either an element of the sequence or zero¶		//If higher values of the parameter are safer, then it is interpolated low¶		int interpolatedDistance;¶		if (distance < smallDistance) {					//distance interpolation¶			interpolatedDistance = 0;¶		} else if(distance < mediumDistance) {¶			interpolatedDistance = smallDistance;¶		} else if(distance < largeDistance) {¶			interpolatedDistance = mediumDistance;¶		} else {¶			interpolatedDistance = largeDistance;¶		}¶		return interpolatedDistance;¶	}¶	/**¶	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	¶	public static int durationHighInterpolation(int duration) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedDuration;¶		if (duration > largeDuration) {					//duration interpolation¶			interpolatedDuration = Integer.MAX_VALUE;¶		} else if(duration > mediumDuration) {¶			interpolatedDuration = largeDuration;¶		} else if(duration > smallDuration) {¶			interpolatedDuration = mediumDuration;¶		} else {¶			interpolatedDuration = smallDuration;¶		}¶		return interpolatedDuration;¶	}	¶	/**¶	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels¶	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	public static int exhaleHighInterpolation(int exhalation) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedExhalation;¶		if (exhalation > largeExhale) {						//exhale interpolation¶			interpolatedExhalation = Integer.MAX_VALUE;¶		} else if(exhalation > mediumExhale) {¶			interpolatedExhalation = largeExhale;¶		} else if(exhalation > smallExhale) {¶			interpolatedExhalation = mediumExhale;¶		} else {¶			interpolatedExhalation = smallExhale;¶		}¶		return interpolatedExhalation;¶	}¶	¶	public static boolean isInferredSafe(int distance, int duration, int exhalation) {¶		 String TRUE = "true";¶		 String FALSE = "false";¶		 String resultAttributeName = "safe";¶		 String[] resultValueNames = {TRUE, FALSE};¶		 String[] featureNames = {"distance", "duration", "exhalation"};¶		¶		double[] anInputFeatureValues = {distance, duration, exhalation};¶		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);¶		return TRUE.equals(aResultString) ?true:false;¶	}¶	¶	public static int compareSafetyComputations() {¶		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");¶		int correctInferrences = 0;¶		for(int i = 0; i < tenRepetitions; i++) {¶			int distance = (int)(Math.random()*32);¶			int duration = (int)(Math.random()*144);¶			int exhale = (int)(Math.random()*60);¶			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);¶			boolean combinationInferred = isInferredSafe(distance, duration, exhale);¶			if(combinationDerived == combinationInferred) {¶				correctInferrences++;¶			}¶			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);¶		}¶		return correctInferrences;¶	}¶	¶	public static void printGeneratedCombinationInferredSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean inferredResult = isInferredSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);¶	}¶	public static void printGivenAndGeneratedCombinationsInferredSafety() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationInferredSafety();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="84" _type="PauseCommand" date="Thu May 05 00:27:25 EDT 2022" range="20s-30s" starttimestamp="1651724647535" timestamp="197707">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[20904]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="85" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:27:25 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="197848" />
  <Command __id="87" _type="PauseCommand" date="Thu May 05 00:27:31 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="204274">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6426]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="86" _type="MoveCaretCommand" caretOffset="376" date="Thu May 05 00:27:31 EDT 2022" docOffset="495" starttimestamp="1651724647535" timestamp="204274" />
  <Command __id="88" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:27:32 EDT 2022" starttimestamp="1651724647535" timestamp="205121" />
  <Command __id="90" _type="PauseCommand" date="Thu May 05 00:27:34 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="206789">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1668]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="89" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:27:34 EDT 2022" starttimestamp="1651724647535" timestamp="206789" />
  <Command __id="91" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.SELECT_LINE_DOWN" date="Thu May 05 00:27:34 EDT 2022" starttimestamp="1651724647535" timestamp="206978" />
  <Command __id="92" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu May 05 00:27:35 EDT 2022" starttimestamp="1651724647535" timestamp="207842" />
  <Command __id="93" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:27:35 EDT 2022" starttimestamp="1651724647535" timestamp="208365" />
  <Command __id="94" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.select.wordPrevious" date="Thu May 05 00:27:36 EDT 2022" starttimestamp="1651724647535" timestamp="209036" />
  <Command __id="95" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.select.wordPrevious" date="Thu May 05 00:27:36 EDT 2022" starttimestamp="1651724647535" timestamp="209252" />
  <Command __id="96" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.select.wordNext" date="Thu May 05 00:27:37 EDT 2022" starttimestamp="1651724647535" timestamp="209767" />
  <Command __id="98" _type="InsertStringCommand" date="Thu May 05 00:27:38 EDT 2022" starttimestamp="1651724647535" timestamp="210683" timestamp2="210683">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="100" _type="InsertStringCommand" date="Thu May 05 00:27:38 EDT 2022" starttimestamp="1651724647535" timestamp="210873" timestamp2="210873">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="102" _type="InsertStringCommand" date="Thu May 05 00:27:38 EDT 2022" starttimestamp="1651724647535" timestamp="211066" timestamp2="211066">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="104" _type="InsertStringCommand" date="Thu May 05 00:27:38 EDT 2022" starttimestamp="1651724647535" timestamp="211206" timestamp2="211206">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="105" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu May 05 00:27:39 EDT 2022" starttimestamp="1651724647535" timestamp="212146" />
  <Command __id="106" _type="EclipseCommand" commandID="" date="Thu May 05 00:27:39 EDT 2022" starttimestamp="1651724647535" timestamp="212230" />
  <Command __id="107" _type="EclipseCommand" commandID="" date="Thu May 05 00:27:39 EDT 2022" starttimestamp="1651724647535" timestamp="212279" />
  <Command __id="109" _type="PauseCommand" date="Thu May 05 00:27:41 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="213972">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1693]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="113" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:27:44 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="217084" type="Run" />
  <Command __id="115" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:27:44 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="217086" type="Run" />
  <Command __id="117" _type="PauseCommand" date="Thu May 05 00:27:48 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="220655">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3569]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="116" _type="ShellCommand" date="Thu May 05 00:27:48 EDT 2022" starttimestamp="1651724647535" timestamp="220655" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="119" _type="PauseCommand" date="Thu May 05 00:27:51 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="223814">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3159]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="118" _type="ConsoleOutput" date="Thu May 05 00:27:51 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="223814" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):38
Test execution time (ms):6
SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0

Test execution time (ms):3
SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null in class registry%0.0

Test execution time (ms):0
SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0

Test execution time (ms):0
SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedAndInferredPrintCallSharedProcedure did not pass completely:No checkstyle output, check console error messages"), Diff(INSERT,"Test execution time (ms):38¶Test execution time (ms):6¶SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"¶"), Diff(DELETE,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages"), Diff(INSERT,"SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null in class registry"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶"), Diff(DELETE,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferredPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages"), Diff(INSERT,"SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶"), Diff(DELETE,"ModelReuse did not pass completely:One or more of model classes null in configuration"), Diff(INSERT,"SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="120" _type="ConsoleOutput" date="Thu May 05 00:27:51 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="223914" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"38¶Test execution time (ms):6¶SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0¶¶Test execution time (ms):3¶SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null in class registry%0.0¶¶Test execution time (ms):0¶SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0¶¶Test execution time (ms):0¶SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0¶¶Test execution time (ms):1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="122" _type="PauseCommand" date="Thu May 05 00:27:54 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="227175">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3261]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="121" _type="ShellCommand" date="Thu May 05 00:27:54 EDT 2022" starttimestamp="1651724647535" timestamp="227175" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="123" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:27:55 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="227810" type="Run" />
  <Command __id="124" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:27:55 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="227810" type="Run" />
  <Command __id="125" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.select.wordPrevious" date="Thu May 05 00:27:56 EDT 2022" starttimestamp="1651724647535" timestamp="228768" />
  <Command __id="126" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.select.wordPrevious" date="Thu May 05 00:27:56 EDT 2022" starttimestamp="1651724647535" timestamp="228839" />
  <Command __id="128" _type="PauseCommand" date="Thu May 05 00:27:58 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="231034">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2195]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="127" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:27:58 EDT 2022" starttimestamp="1651724647535" timestamp="231034" />
  <Command __id="83" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:27:25 EDT 2022" docASTNodeCount="89" docActiveCodeLength="711" docExpressionCount="56" docLength="1128" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="197707">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\A2Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a2;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f21.assignment2.F21Assignment2Suite;
import trace.grader.basics.GraderBasicsTraceUtility;
//import util.trace.Tracer;

public class A2Tests {
	static int printedTrace = 600;
	static int maxTrace = 2000;
	static int processTimeOut= 5;
	public static void main(String[] args) {
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(false);
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(printedTrace);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTrace);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F21Assignment2Suite.main(args);
	}
}]]></snapshot>
  </Command>
  <DocumentChange __id="97" _type="Replace" date="Thu May 05 00:27:38 EDT 2022" docASTNodeCount="89" docActiveCodeLength="707" docExpressionCount="56" docLength="1124" endLine="13" insertionLength="1" int_docASTNodeCount="88" int_docActiveCodeLength="706" int_docExpressionCount="55" int_docLength="1123" length="5" offset="491" startLine="13" starttimestamp="1651724647535" timestamp="210652">
    <deletedText><![CDATA[false]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="99" _type="Insert" date="Thu May 05 00:27:38 EDT 2022" docASTNodeCount="89" docActiveCodeLength="710" docExpressionCount="56" docLength="1127" length="3" offset="492" repeat="3" starttimestamp="1651724647535" timestamp="210852" timestamp2="211185">
    <text><![CDATA[rue]]></text>
  </DocumentChange>
  <Command __id="130" _type="PauseCommand" date="Thu May 05 00:28:22 EDT 2022" range="20s-30s" starttimestamp="1651724647535" timestamp="254866">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[23832]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="131" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:28:22 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="255046" />
  <Command __id="129" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:28:22 EDT 2022" docASTNodeCount="245" docActiveCodeLength="1582" docExpressionCount="132" docLength="1582" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="254866">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\AbstractModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a2;¶import java.beans.PropertyChangeListener;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeSupport;¶¶public abstract class AbstractModel {¶	public static final String DISTANCE = "Distance";¶	public static final String DURATION = "Duration";¶	public static final String EXHALE = "Exhalation";¶	public static final String SAFE = "Safe";¶¶	Integer Distance = null;¶	Integer Duration = null;¶	Integer Exhalation = null;¶	Boolean Safe = null;¶	¶	PropertyChangeSupport changeSupport = new PropertyChangeSupport(this);¶	¶	public void addPropertyChangeListener(PropertyChangeListener listener) {¶		changeSupport.addPropertyChangeListener(listener);¶	}¶	public void setLevels (int distance, int duration, int exhale) {¶		Integer oldDistance = Distance;¶		Integer oldDuration = Duration;¶		Integer oldExhale = Exhalation;¶		Boolean oldIsSafe = Safe;¶		Distance = distance;	¶		Duration = duration;¶		Exhalation = exhale;¶		Safe = isSafe();¶		changeSupport.firePropertyChange(DISTANCE, oldDistance, Distance);¶		changeSupport.firePropertyChange(DURATION, oldDuration, Duration);¶		changeSupport.firePropertyChange(EXHALE, oldExhale, Exhalation);¶		changeSupport.firePropertyChange(SAFE, oldIsSafe, Safe);¶		reset();¶	}¶	¶	protected void reset() {¶		Distance = null;¶		Duration = null;¶		Exhalation = null;¶		Safe = null;¶	}¶	public Integer getDistance() {return Distance;}¶	public Integer getDuration() {return Duration;}¶	public Integer getExhalation() {return Exhalation;}¶	public abstract Boolean isSafe();¶}¶")]]]></diff>
  </Command>
  <Command __id="133" _type="PauseCommand" date="Thu May 05 00:28:39 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="272361">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[17315]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="134" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:28:40 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="272508" />
  <Command __id="132" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:28:39 EDT 2022" docASTNodeCount="46" docActiveCodeLength="327" docExpressionCount="20" docLength="327" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="272361">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\ControllerFactory.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a2;

public class ControllerFactory {
	static Controller controller;
	
	
	public static Controller getSingleton() {
		if (controller == null) {
			controller = new Controller();
		}
		return controller;
	}
	public static void setController(Controller newController) {
		controller = newController;
	}
}
]]></snapshot>
  </Command>
  <Command __id="136" _type="PauseCommand" date="Thu May 05 00:28:46 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="278683">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6175]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="137" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:28:46 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="278874" />
  <Command __id="139" _type="PauseCommand" date="Thu May 05 00:28:50 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="283140">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4266]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="138" _type="MoveCaretCommand" caretOffset="283" date="Thu May 05 00:28:50 EDT 2022" docOffset="283" starttimestamp="1651724647535" timestamp="283140" />
  <Command __id="135" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:28:46 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1881" docExpressionCount="110" docLength="2425" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="278683">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\ClassRegistry.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a2;¶import gradingTools.comp524f21. assignment2.F21A2SocialDistanceClassRegistry;¶¶public class ClassRegistry implements F21A2SocialDistanceClassRegistry{¶¶	@Override¶	public Class<?> getBasicSocialDistanceUtility() {¶		// TODO Auto-generated method stub¶		return a1.SocialDistancing.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistancDerivingModel() {¶		// TODO Auto-generated method stub¶		return DerivedModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistancInferringModel() {¶		// TODO Auto-generated method stub¶		return InferredModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceBasicModel() {¶		// TODO Auto-generated method stub¶		return BasicModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceClassifierFactory() {¶		// TODO Auto-generated method stub¶		return ClassifierFactory.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceController() {¶		// TODO Auto-generated method stub¶		return Controller.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceControllerFactory() {¶		// TODO Auto-generated method stub¶		return ControllerFactory.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceInterpolatingModel() {¶		// TODO Auto-generated method stub¶		return InterpolatedModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCBasicMain() {¶		// TODO Auto-generated method stub¶		return BasicMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCDerivingMain() {¶		// TODO Auto-generated method stub¶		return DerivedMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCInferringMain() {¶		// TODO Auto-generated method stub¶		return InferringMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCInterpolatingMain() {¶		// TODO Auto-generated method stub¶		return InterpolatedMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceModelFactory() {¶		// TODO Auto-generated method stub¶		return ModelFactory.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceUilityTesterMain() {¶		// TODO Auto-generated method stub¶		return a1.UtilityTesterMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceView() {¶		// TODO Auto-generated method stub¶		return LogView.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceViewFactory() {¶		// TODO Auto-generated method stub¶		return ViewFactory.class;¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="141" _type="PauseCommand" date="Thu May 05 00:28:51 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="284386">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1246]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="142" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.deletePreviousWord" date="Thu May 05 00:28:51 EDT 2022" starttimestamp="1651724647535" timestamp="284418" />
  <Command __id="144" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:28:52 EDT 2022" starttimestamp="1651724647535" timestamp="285064" />
  <Command __id="146" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:28:52 EDT 2022" starttimestamp="1651724647535" timestamp="285238" />
  <Command __id="148" _type="PauseCommand" date="Thu May 05 00:28:57 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="290082">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4844]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="147" _type="ShellCommand" date="Thu May 05 00:28:57 EDT 2022" starttimestamp="1651724647535" timestamp="290082" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="149" _type="ShellCommand" date="Thu May 05 00:28:57 EDT 2022" starttimestamp="1651724647535" timestamp="290187" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="153" _type="PauseCommand" date="Thu May 05 00:29:01 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="294183">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[3918]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="152" _type="MoveCaretCommand" caretOffset="208" date="Thu May 05 00:29:01 EDT 2022" docOffset="208" starttimestamp="1651724647535" timestamp="294183" />
  <Command __id="155" _type="PauseCommand" date="Thu May 05 00:29:05 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="298124">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3941]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="154" _type="MoveCaretCommand" caretOffset="2154" date="Thu May 05 00:29:05 EDT 2022" docOffset="2154" starttimestamp="1651724647535" timestamp="298124" />
  <Command __id="156" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:29:06 EDT 2022" starttimestamp="1651724647535" timestamp="299108" />
  <Command __id="158" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:29:07 EDT 2022" starttimestamp="1651724647535" timestamp="299581" />
  <Command __id="160" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:29:07 EDT 2022" starttimestamp="1651724647535" timestamp="299733" />
  <Command __id="162" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:29:07 EDT 2022" starttimestamp="1651724647535" timestamp="299920" />
  <Command __id="164" _type="PauseCommand" date="Thu May 05 00:29:11 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="303736">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3816]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="163" _type="ShellCommand" date="Thu May 05 00:29:11 EDT 2022" starttimestamp="1651724647535" timestamp="303736" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="165" _type="ShellCommand" date="Thu May 05 00:29:11 EDT 2022" starttimestamp="1651724647535" timestamp="303888" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="169" _type="PauseCommand" date="Thu May 05 00:29:12 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="305447">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1529]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="168" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu May 05 00:29:12 EDT 2022" starttimestamp="1651724647535" timestamp="305447" />
  <Command __id="170" _type="EclipseCommand" commandID="" date="Thu May 05 00:29:13 EDT 2022" starttimestamp="1651724647535" timestamp="305513" />
  <Command __id="171" _type="EclipseCommand" commandID="" date="Thu May 05 00:29:13 EDT 2022" starttimestamp="1651724647535" timestamp="305563" />
  <Command __id="173" _type="PauseCommand" date="Thu May 05 00:29:19 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="311768">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6205]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="172" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Thu May 05 00:29:19 EDT 2022" starttimestamp="1651724647535" timestamp="311768" />
  <Command __id="174" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:29:19 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="312112" type="Run" />
  <Command __id="175" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:29:19 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="312112" type="Run" />
  <Command __id="177" _type="PauseCommand" date="Thu May 05 00:29:23 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="315784">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3672]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="176" _type="ShellCommand" date="Thu May 05 00:29:23 EDT 2022" starttimestamp="1651724647535" timestamp="315784" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="179" _type="PauseCommand" date="Thu May 05 00:29:25 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="318408">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2624]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="178" _type="ConsoleOutput" date="Thu May 05 00:29:25 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="318408" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):40
Test execution time (ms):3
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(INSERT,"4"), Diff(EQUAL,"0¶"), Diff(INSERT,"Test execution time (ms):3¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="181" _type="PauseCommand" date="Thu May 05 00:29:33 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="325951">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7543]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="180" _type="ConsoleOutput" date="Thu May 05 00:29:33 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="325951" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):10
1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.15625 the minimum required accuracy threshold should be 0.8
0.15625
F21A2IsInferredSafeTest did not pass completely:view console output%0.717899458806221
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"0¶"), Diff(DELETE,"Test execution time (ms):3¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):"), Diff(INSERT,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.15625 the minimum required accuracy threshold should be 0.8¶0.15625¶F21A2IsInferredSafeTest did not pass completely:view console output%0.71789945880622"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="182" _type="ConsoleOutput" date="Thu May 05 00:29:33 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="325961" type="ConsoleOutput">
    <outputString><![CDATA[
Number of traces > 600  turning tracing off
Test execution time (ms):93
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):10¶1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.15625 the minimum required accuracy threshold should be 0.8¶0.15625¶F21A2IsInferredSafeTest did not pass completely:view console output%0.717899458806221"), Diff(INSERT,"¶Number of traces > 600  turning tracing off¶Test execution time (ms):93"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="183" _type="ConsoleOutput" date="Thu May 05 00:29:33 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="326057" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
26,15,12,true
26,94,0,true
27,68,23,true
22,89,41,true
14,66,41,true
22,48,41,true
16,116,32,true
4,21,21,true
2,32,0,true
19,116,43,true
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
17,88,46,true
1,50,26,true
0,127,1,true
20,41,53,true
11,141,20,true
14,98,53,true
17,5,41,true
23,126,31,true
0,28,55,true
29,59,36,true
Test execution time (ms):33
Distance,Duration,Exhalation,Derived,Inferred
22,60,2,true,true
29,43,7,true,true
26,136,15,false,true
8,127,44,false,true
25,115,26,false,true
1,42,54,false,true
15,132,13,false,true
22,54,42,false,true
19,143,13,false,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off¶"), Diff(DELETE,"Test execution time (ms):93"), Diff(INSERT,"Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶26,15,12,true¶26,94,0,true¶27,68,23,true¶22,89,41,true¶14,66,41,true¶22,48,41,true¶16,116,32,true¶4,21,21,true¶2,32,0,true¶19,116,43,true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶17,88,46,true¶1,50,26,true¶0,127,1,true¶20,41,53,true¶11,141,20,true¶14,98,53,true¶17,5,41,true¶23,126,31,true¶0,28,55,true¶29,59,36,true¶Test execution time (ms):33¶Distance,Duration,Exhalation,Derived,Inferred¶22,60,2,true,true¶29,43,7,true,true¶26,136,15,false,true¶8,127,44,false,true¶25,115,26,false,true¶1,42,54,false,true¶15,132,13,false,true¶22,54,42,false,true¶19,143,13,false,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="184" _type="ConsoleOutput" date="Thu May 05 00:29:33 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="326167" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
9,103,31,false,true
12,42,11,false,true
18,105,9,true,true
28,125,34,false,true
27,131,24,false,true
28,79,14,true,true
26,143,19,false,true
24,87,51,false,true
6,15,23,true,true
12,83,13,false,true
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
18,116,26,false,true
12,80,12,false,true
12,18,25,false,true
30,120,25,true,true
25,89,48,false,true
11,116,38,false,true
9,139,43,false,true
28,65,35,false,true
1,29,22,false,true
4,45,57,false,true
Distance,Duration,Exhalation,Derived,Inferred
12,39,6,false,true
7,105,8,false,true
1,91,29,false,true
22,76,39,false,true
18,143,36,false,true
4,102,46,false,true
19,142,41,false,true
6,21,3,true,true
16,125,28,false,true
9,83,29,false,true
Distance,Duration,Exhalation,Derived,Inferred
1,46,18,false,true
30,78,8,true,true
11,13,53,false,true
7,113,49,false,true
24,55,57,false,true
19,1,57,false,true
16,128,36,false,true
15,57,0,true,true
25,7,6,true,true
13,85,53,false,true
Distance,Duration,Exhalation,Derived,Inferred
8,89,46,false,true
21,120,42,false,true
30,66,54,false,true
27,95,49,false,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 600  turning tracing off¶"), Diff(EQUAL,"Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50"), Diff(INSERT,"Derived,Inferred¶9,103,31,false,true¶12,42,11,false"), Diff(EQUAL,",true¶1"), Diff(DELETE,"3"), Diff(INSERT,"8"), Diff(EQUAL,",1"), Diff(INSERT,"0"), Diff(EQUAL,"5,"), Diff(DELETE,"50"), Diff(INSERT,"9"), Diff(EQUAL,",true"), Diff(DELETE,"¶13,120,10"), Diff(EQUAL,",true¶2"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL,",12"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,",3"), Diff(DELETE,"0,true¶6,15,30,true¶----------¶26,15,12,true¶26,94,0,true¶27,68,23,true¶22,89,41,true¶14,66,41,true¶22,48,41"), Diff(INSERT,"4,false,true¶27,131,24,false,true¶28,79,14,true,true¶26,143,19,false,true¶24,87,51,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"1"), Diff(EQUAL,"6,1"), Diff(DELETE,"16,32,true¶4,21,21"), Diff(INSERT,"5,23,true"), Diff(EQUAL,",true¶"), Diff(INSERT,"1"), Diff(EQUAL,"2,"), Diff(DELETE,"32,0,true¶19,116,43,true"), Diff(INSERT,"83,13,false,true¶Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶17,88,46"), Diff(INSERT,"Derived,Inferred¶18,116,26,false,true¶12,80,12,false,true¶12,18,25,false,true¶30,120,25,true,true¶25,89,48,false,true¶11,116,38,false,true¶9,139,43,false,true¶28,65,35,false,true¶1,29,22,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"1,50,26,true¶0,127,1,true¶20,41,53,true¶11,141,20,true¶14,98,53,true¶17,5,41"), Diff(INSERT,"4,45,57,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶12,39,6,false,true¶7,105,8,false,true¶1,91,29,false,true¶22,76,39,false,true¶18,143,36,false,true¶4,102,46,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"23,126,31"), Diff(INSERT,"19,142,41,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"0"), Diff(INSERT,"6"), Diff(EQUAL,",2"), Diff(DELETE,"8,55,true¶29,59,36,true¶Test execution time (ms):33"), Diff(INSERT,"1,3,true,true¶16,125,28,false,true¶9,83,29,false,true"), Diff(EQUAL,"¶Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"22,60,2,tru"), Diff(INSERT,"1,46,18,fals"), Diff(EQUAL,"e,true¶"), Diff(DELETE,"29,43,7"), Diff(INSERT,"30,78,8"), Diff(EQUAL,",true,true¶"), Diff(DELETE,"26"), Diff(INSERT,"11"), Diff(EQUAL,",13"), Diff(DELETE,"6,15"), Diff(INSERT,",53"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"8"), Diff(INSERT,"7"), Diff(EQUAL,",1"), Diff(DELETE,"27"), Diff(INSERT,"13"), Diff(EQUAL,",4"), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,",false,true¶2"), Diff(DELETE,"5,115,26,false,true¶1,42,54"), Diff(INSERT,"4,55,57,false,true¶19,1,57,false,true¶16,128,36,false,true¶15,57,0,true,true¶25,7,6,true,true¶13,85,53,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶8,89,46"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"15,132,13"), Diff(INSERT,"21,120,42"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"22,54,42"), Diff(INSERT,"30,66,54"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"19,143,13"), Diff(INSERT,"27,95,49"), Diff(EQUAL,",false,true¶")]]]></diff>
  </Command>
  <Command __id="186" _type="PauseCommand" date="Thu May 05 00:29:35 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="327512">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1344]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="185" _type="ConsoleOutput" date="Thu May 05 00:29:35 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="327511" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Distance,Duration,Exhalation,Derived,Inferred¶9,103,31,false,true¶12,42,11,false,true¶18,105,9,true,true¶28,125,34,false,true¶27,131,24,false,true¶28,79,14,true,true¶26,143,19,false,true¶24,87,51,false,true¶6,15,23,true,true¶12,83,13,false,true¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,Derived,Inferred¶18,116,26,false,true¶12,80,12,false,true¶12,18,25,false,true¶30,120,25,true,true¶25,89,48,false,true¶11,116,38,false,true¶9,139,43,false,true¶28,65,35,false,true¶1,29,22,false,true¶4,45,57,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶12,39,6,false,true¶7,105,8,false,true¶1,91,29,false,true¶22,76,39,false,true¶18,143,36,false,true¶4,102,46,false,true¶19,142,41,false,true¶6,21,3,true,true¶16,125,28,false,true¶9,83,29,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶1,46,18,false,true¶30,78,8,true,true¶11,13,53,false,true¶7,113,49,false,true¶24,55,57,false,true¶19,1,57,false,true¶16,128,36,false,true¶15,57,0,true,true¶25,7,6,true,true¶13,85,53,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶8,89,46,false,true¶21,120,42,false,true¶30,66,54,false,true¶27,95,49,false,true"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="187" _type="ConsoleOutput" date="Thu May 05 00:29:35 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="327535" type="ConsoleOutput">
    <outputString><![CDATA[
Testing BasicMainTest with the following inputs:
"10" "10" "10" "13" "30" "30" "6" "30" "10" "27" "30" "50" "6" "15" "10" "6" "16" "10" "5" "14" "9" "27" "120" "50" "-1" 


Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]
8 Not Safe!
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.BasicModel@c818063]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Duration?
21 Exhalation Level?
22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]
23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]
26 Safe.
27 Please enter data regarding your guest interaction.
28 Distance?
29 Duration?
30 Exhalation Level?
31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.BasicModel@c818063]
32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.BasicModel@c818063]
34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]
35 Safe.
36 Please enter data regarding your guest interaction.
37 Distance?
38 Duration?
39 Exhalation Level?
40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]
41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.BasicModel@c818063]
42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 600  turning tracing off"), Diff(INSERT,"¶Testing BasicMainTest with the following inputs:¶"10" "10" "10" "13" "30" "30" "6" "30" "10" "27" "30" "50" "6" "15" "10" "6" "16" "10" "5" "14" "9" "27" "120" "50" "-1" ¶¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.BasicModel@c818063]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.BasicModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.BasicModel@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶35 Safe.¶36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.BasicModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="188" _type="ConsoleOutput" date="Thu May 05 00:29:35 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="327617" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Testing BasicMainTest with the following inputs:¶"10" "10" "10" "13" "30" "30" "6" "30" "10" "27" "30" "50" "6" "15" "10" "6" "16" "10" "5" "14" "9" "27" "120" "50" "-1" ¶¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.BasicModel@c818063]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.BasicModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.BasicModel@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶35 Safe.¶36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.BasicModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]"), Diff(INSERT,"Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="190" _type="PauseCommand" date="Thu May 05 00:29:36 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="328734">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1117]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="189" _type="ConsoleOutput" date="Thu May 05 00:29:36 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="328734" type="ConsoleOutput">
    <outputString><![CDATA[
Testing InterpolatingMainTests with the following inputs:
"1" "1" "1" "13" "15" "50" "28" "119" "16" "13" "15" "31" "6" "15" "10" "6" "15" "51" "27" "15" "30" "-1" 

Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]
8 Not Safe!
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.InterpolatedModel@c818063]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Duration?
21 Exhalation Level?
22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=28; propagationId=null; source=a2.InterpolatedModel@c818063]
23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=119; propagationId=null; source=a2.InterpolatedModel@c818063]
24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=16; propagationId=null; source=a2.InterpolatedModel@c818063]
25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]
26 Safe.
27 Please enter data regarding your guest interaction.
28 Distance?
29 Duration?
30 Exhalation Level?
31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]
32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=31; propagationId=null; source=a2.InterpolatedModel@c818063]
34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]
35 Safe.
36 Please enter data regarding your guest interaction.
37 Distance?
38 Duration?
39 Exhalation Level?
40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.InterpolatedModel@c818063]
41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InterpolatedModel@c818063]
43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]
44 Not Safe!
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 600  turning tracing off"), Diff(INSERT,"¶Testing InterpolatingMainTests with the following inputs:¶"1" "1" "1" "13" "15" "50" "28" "119" "16" "13" "15" "31" "6" "15" "10" "6" "15" "51" "27" "15" "30" "-1" ¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.InterpolatedModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=28; propagationId=null; source=a2.InterpolatedModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=119; propagationId=null; source=a2.InterpolatedModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=16; propagationId=null; source=a2.InterpolatedModel@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=31; propagationId=null; source=a2.InterpolatedModel@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]¶35 Safe.¶36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.InterpolatedModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InterpolatedModel@c818063]¶43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]¶44 Not Safe!"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="191" _type="ConsoleOutput" date="Thu May 05 00:29:36 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="328810" type="ConsoleOutput">
    <outputString><![CDATA[Output line: "0" matches regex: ^[Pp]lease enter.*
Output line: "1" matches regex: ^[Dd]istance.*
Output line: "2" matches regex: ^[Dd]uration.*
Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*
Output line: "4" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=1.*
Output line: "5" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=1.*
Output line: "6" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=1.*
Output line: "8" matches regex: ^[Nn]ot [Ss]afe.*
Output line: "13" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=13.*
Output line: "14" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=15.*
Output line: "15" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=50.*
Output line: "17" matches regex: ^[Ss]afe.*
Output line: "26" matches regex: ^[Ss]afe.*
Output line: "35" matches regex: ^[Ss]afe.*
Output line: "44" matches regex: ^[Nn]ot [Ss]afe.*
Output line: "53" matches regex: ^[Nn]ot [Ss]afe.*
Output line: "62" matches regex: ^[Nn]ot [Ss]afe.*
Output line: "65" matches regex: ^[Qq]uitting.*
Test execution time (ms):1196
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Testing InterpolatingMainTests with the following inputs:¶"1" "1" "1" "13" "15""), Diff(INSERT,"Output line:"), Diff(EQUAL," ""), Diff(DELETE,"5"), Diff(EQUAL,"0" "), Diff(DELETE,""28" "119" "16" "13" "15" "31" "6" "15" "10" "6" "15" "51" "27" "15" "30" "-1" ¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]¶7 "), Diff(INSERT,"matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Output line: "2" matches regex: ^[Dd]uration.*¶Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*¶Output line: "4" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Safe; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue="), Diff(DELETE,"false; propagationId=null; source=a2.InterpolatedModel@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 "), Diff(INSERT,"1.*¶Output line: "5" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Distance; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=1"), Diff(DELETE,"3; propagationId=null; source=a2.InterpolatedModel@c818063]¶14 "), Diff(INSERT,".*¶Output line: "6" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Duration; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=1"), Diff(DELETE,"5; propagationId=null; source=a2.InterpolatedModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.InterpolatedModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]¶17 S"), Diff(INSERT,".*¶Output line: "8" matches regex: ^[Nn]ot [Ss]"), Diff(EQUAL,"afe."), Diff(INSERT,"*"), Diff(EQUAL,"¶"), Diff(DELETE,"18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=28; propagationId=null; source=a2.InterpolatedModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=119; propagationId=null; source=a2.InterpolatedModel@c818063]¶24 "), Diff(INSERT,"Output line: "13" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=13.*¶Output line: "14" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Exhalation; oldValue=null; newValue=16; propagationId=null; source=a2.InterpolatedModel@c818063]¶25 "), Diff(INSERT,".*oldValue=null; newValue=15.*¶Output line: "15" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Safe; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue="), Diff(DELETE,"true; propagationId=null; source=a2.InterpolatedModel@c818063]¶26 S"), Diff(INSERT,"50.*¶Output line: "17" matches regex: ^[Ss]"), Diff(EQUAL,"afe."), Diff(INSERT,"*"), Diff(EQUAL,"¶"), Diff(DELETE,"27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=31; propagationId=null; source=a2.InterpolatedModel@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]¶35 S"), Diff(INSERT,"Output line: "26" matches regex: ^[Ss]afe.*¶Output line: "35" matches regex: ^[Ss]afe.*¶Output line: "44" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "53" matches regex: ^[Nn]ot [Ss]"), Diff(EQUAL,"afe."), Diff(INSERT,"*"), Diff(EQUAL,"¶"), Diff(DELETE,"36 Please enter data regarding your gues"), Diff(INSERT,"Outpu"), Diff(EQUAL,"t "), Diff(INSERT,"l"), Diff(EQUAL,"in"), Diff(DELETE,"teraction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.InterpolatedModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InterpolatedModel@c818063]¶43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]¶44 Not Safe!"), Diff(INSERT,"e: "62" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "65" matches regex: ^[Qq]uitting.*¶Test execution time (ms):1196"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="193" _type="PauseCommand" date="Thu May 05 00:29:37 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="330121">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1311]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="192" _type="ConsoleOutput" date="Thu May 05 00:29:37 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="330121" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off

Testing DerivingMainTest with the following inputs:
"404" "404" "404" "13" "30" "30" "6" "15" "10" "13" "29" "29" "27" "120" "10" "6" "121" "10" "5" "15" "10" "27" "120" "50" "-1" 


Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.DerivedModel@c818063]
8 Not Safe!
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Duration?
21 Exhalation Level?
22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.DerivedModel@c818063]
23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.DerivedModel@c818063]
24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]
25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
26 Safe.
27 Please enter data regarding your guest interaction.
28 Distance?
29 Duration?
30 Exhalation Level?
31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]
32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]
33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]
34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
35 Safe.
36 Please enter data regarding your guest interaction.
37 Distance?
38 Duration?
39 Exhalation Level?
40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.DerivedModel@c818063]
41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=120; propagationId=null; source=a2.DerivedModel@c818063]
42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Output line: "0" matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Output line: "2" matches regex: ^[Dd]uration.*¶Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*¶Output line: "4" matches regex: ^"), Diff(INSERT,"Number of traces > 600  turning tracing off¶¶Testing DerivingMainTest with the following inputs:¶"404" "404" "404" "13" "30" "30" "6" "15" "10" "13" "29" "29" "27" "120" "10" "6" "121" "10" "5" "15" "10" "27" "120" "50" "-1" ¶¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]¶7 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*"), Diff(INSERT,"[propertyName=Safe; "), Diff(EQUAL,"oldValue=null; newValue="), Diff(DELETE,"1.*¶Output line: "5" matches regex: ^"), Diff(INSERT,"false; propagationId=null; source=a2.DerivedModel@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*"), Diff(INSERT,"[propertyName=Distance; "), Diff(EQUAL,"oldValue=null; newValue=1"), Diff(DELETE,".*¶Output line: "6" matches regex: ^"), Diff(INSERT,"3; propagationId=null; source=a2.DerivedModel@c818063]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]¶15 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*oldValue=null; newValue=1.*¶Output line: "8" matches regex: ^[Nn]ot [Ss]"), Diff(INSERT,"[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]¶17 S"), Diff(EQUAL,"afe."), Diff(DELETE,"*"), Diff(EQUAL,"¶"), Diff(DELETE,"Outpu"), Diff(INSERT,"18 Please enter data regarding your gues"), Diff(EQUAL,"t "), Diff(DELETE,"l"), Diff(EQUAL,"in"), Diff(DELETE,"e: "13" matches regex: ^"), Diff(INSERT,"teraction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*oldValue=null; newValue=13.*¶Output line: "14" matches regex: ^"), Diff(INSERT,"[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.DerivedModel@c818063]¶23 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*"), Diff(INSERT,"[propertyName=Duration; "), Diff(EQUAL,"oldValue=null; newValue=15"), Diff(DELETE,".*¶Output line: "15" matches regex: ^"), Diff(INSERT,"; propagationId=null; source=a2.DerivedModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]¶25 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*"), Diff(INSERT,"[propertyName=Safe; "), Diff(EQUAL,"oldValue=null; newValue="), Diff(DELETE,"50.*¶Output line: "17" matches regex: ^[Ss]"), Diff(INSERT,"true; propagationId=null; source=a2.DerivedModel@c818063]¶26 S"), Diff(EQUAL,"afe."), Diff(DELETE,"*"), Diff(EQUAL,"¶"), Diff(DELETE,"Output line: "26" matches regex: ^[Ss]afe.*¶Output line: "35" matches regex: ^[Ss]afe.*¶Output line: "44" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "53" matches regex: ^[Nn]ot [Ss]"), Diff(INSERT,"27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]¶35 S"), Diff(EQUAL,"afe."), Diff(DELETE,"*"), Diff(EQUAL,"¶"), Diff(DELETE,"Output line: "62" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "65" matches regex: ^[Qq]uitting.*¶Test execution time (ms):1196"), Diff(INSERT,"36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.DerivedModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=120; propagationId=null; source=a2.DerivedModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="194" _type="ConsoleOutput" date="Thu May 05 00:29:38 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="331112" type="ConsoleOutput">
    <outputString><![CDATA[
Testing InferringMainTest with the following inputs:
"404" "404" "404" "27" "15" "10" "-1" 

Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]
8 Safe.
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.InferredModel@4493d195]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InferredModel@4493d195]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InferredModel@4493d195]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Quitting
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 600  turning tracing off¶"), Diff(EQUAL,"¶Testing "), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"ingMainTest with the following inputs:¶"404" "404" "404" ""), Diff(DELETE,"13" "30" "30" "6" "15" "10" "13" "29" "29" "27" "120" "10" "6" "121" "10" "5" "15" "10" "27" "120" "5"), Diff(INSERT,"27" "15" "1"), Diff(EQUAL,"0" "-1" ¶¶"), Diff(DELETE,"¶"), Diff(EQUAL,"Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶8 "), Diff(DELETE,"Not "), Diff(EQUAL,"Safe"), Diff(DELETE,"!"), Diff(INSERT,"."), Diff(EQUAL,"¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"13"), Diff(INSERT,"27"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"30; propagationId=null; source=a2.DerivedModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.DerivedModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.DerivedModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶34"), Diff(INSERT,"15; propagationId=null; source=a2.InferredModel@4493d195]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InferredModel@4493d195]¶16"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶"), Diff(DELETE,"35"), Diff(INSERT,"17"), Diff(EQUAL," Safe.¶"), Diff(DELETE,"36"), Diff(INSERT,"18"), Diff(EQUAL," Please enter data regarding your guest interaction.¶"), Diff(DELETE,"37"), Diff(INSERT,"19"), Diff(EQUAL," Distance?¶"), Diff(DELETE,"38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.DerivedModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=120; propagationId=null; source=a2.DerivedModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]"), Diff(INSERT,"20 Quitting"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="195" _type="ConsoleOutput" date="Thu May 05 00:29:38 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="331162" type="ConsoleOutput">
    <outputString><![CDATA[InferringMainTest did not pass completely:View console for more detail%0.0
Output line: "0" matches regex: ^[Pp]lease enter.*
Output line: "1" matches regex: ^[Dd]istance.*
Output line: "2" matches regex: ^[Dd]uration.*
Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*
Output line: "4" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*
Output line: "5" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*
Output line: "6" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*
Regex: "^[Nn]ot [Ss]afe.*" not found, all following regexs not checked
Note: All regex's are assumed to be in sequential order

Test execution time (ms):1058
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2CommonPropertiesInherited did not pass completely:No checkstyle output, check console error messages%0.0
e=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]

Test execution time (ms):1060
Number of traces > 600  turning tracing off
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2NoHiddenFields did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Testing "), Diff(EQUAL,"InferringMainTest "), Diff(DELETE,"with the following inputs:¶"404" "404" "404" "27" "15" "10" "-1" ¶¶Collected output:¶0 Please enter data regarding your gues"), Diff(INSERT,"did not pass completely:View console for more detail%0.0¶Output line: "0" matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Outpu"), Diff(EQUAL,"t "), Diff(INSERT,"l"), Diff(EQUAL,"in"), Diff(DELETE,"t"), Diff(EQUAL,"e"), Diff(INSERT,": "2" matches regex: ^[Dd]u"), Diff(EQUAL,"ra"), Diff(DELETE,"c"), Diff(EQUAL,"tion."), Diff(INSERT,"*"), Diff(EQUAL,"¶"), Diff(DELETE,"1 Distance?¶2 Duration?¶3 E"), Diff(INSERT,"Output line: "3" matches regex: ^[Ee]"), Diff(EQUAL,"xhalation "), Diff(DELETE,"Level?¶4 "), Diff(INSERT,"[Ll]evel.*¶Output line: "4" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Distance; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=404"), Diff(DELETE,"; propagationId=null; source=a2.InferredModel@4493d195]¶5 "), Diff(INSERT,".*¶Output line: "5" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Duration; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=404"), Diff(DELETE,"; propagationId=null; source=a2.InferredModel@4493d195]¶6 "), Diff(INSERT,".*¶Output line: "6" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Exhalation; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=404"), Diff(DELETE,"; propagationId=null; source=a2.InferredModel@4493d195]¶7 java.beans.PropertyChangeEvent[propertyNam"), Diff(INSERT,".*¶Regex: "^[Nn]ot [Ss]afe.*" not found, all following regexs not checked¶Note: All regex's are assumed to be in sequential order¶¶Test execution time (ms):1058¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2CommonPropertiesInherited did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(EQUAL,"e=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]¶"), Diff(DELETE,"8 Safe.¶9 Please enter data regarding your gues"), Diff(INSERT,"¶Test execution time (ms):1060¶Number of traces > 600  turning tracing off¶Did no"), Diff(EQUAL,"t "), Diff(INSERT,"f"), Diff(EQUAL,"in"), Diff(DELETE,"teraction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.InferredModel@4493d195]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InferredModel@4493d195]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InferredModel@4493d195]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Quitting"), Diff(INSERT,"d file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2NoHiddenFields did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="196" _type="ConsoleOutput" date="Thu May 05 00:29:38 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="331181" type="ConsoleOutput">
    <outputString><![CDATA[Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2NonPublicAccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2NoStarImports did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2PackageDeclarations did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
F21A2NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"InferringMainTest did not pass completely:View console for more detail%0.0¶Output line: "0" matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Output line: "2" matches regex: ^[Dd]uration.*¶Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*¶Output line: "4" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*¶Output line: "5" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*¶Output line: "6" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*¶Regex: "^[Nn]ot [Ss]afe.*" not found, all following regexs not checked¶Note: All regex's are assumed to be in sequential order¶¶Test execution time (ms):1058¶"), Diff(EQUAL,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2"), Diff(DELETE,"CommonPropertiesInherit"), Diff(INSERT,"NonPublicAccessModifiersMatch"), Diff(EQUAL,"ed did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(DELETE,"e=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]¶¶Test execution time (ms):1060¶Number of traces > 600  turning tracing off"), Diff(INSERT,"¶Test execution time (ms):1"), Diff(EQUAL,"¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2"), Diff(DELETE,"CommonSignaturesAreInherited"), Diff(INSERT,"PublicMethodsOverride"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2"), Diff(DELETE,"Encapsulation"), Diff(INSERT,"NoStarImports"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2"), Diff(DELETE,"InterfaceAsType"), Diff(INSERT,"PackageDeclarations"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶"), Diff(INSERT,"F21"), Diff(EQUAL,"A2No"), Diff(DELETE,"HiddenField"), Diff(INSERT,"CheckstyleWarning"), Diff(EQUAL,"s did not pass completely:"), Diff(DELETE,"No checkstyle output, check console error messages"), Diff(INSERT,"Could not run checkstyle"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="198" _type="PauseCommand" date="Thu May 05 00:29:41 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="334315">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3134]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="197" _type="ConsoleOutput" date="Thu May 05 00:29:41 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="334315" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
Test execution time (ms):1
Test execution time (ms):2
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2NonPublicAccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2NoStarImports did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2PackageDeclarations did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶F21A2NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0¶¶Test execution time (ms):0"), Diff(INSERT,"Test execution time (ms):3¶Test execution time (ms):1¶Test execution time (ms):2¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="200" _type="PauseCommand" date="Thu May 05 00:29:45 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="338147">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3832]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="199" _type="ConsoleOutput" date="Thu May 05 00:29:45 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="338147" type="ConsoleOutput">
    <outputString><![CDATA[Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks

Test execution time (ms):0
SocialDistanceMainSetsModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceMainFetchesViewSingleton did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceMainCallsControllerMethod did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceControllerFetchesModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceControllerWritesModel did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceViewISAPropertyListener did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
BasicModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
DerivingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks

InterpolatingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0
Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
InferringModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):3¶Test execution time (ms):1¶Test execution time (ms):2¶Test execution time (ms):1"), Diff(INSERT,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶Test execution time (ms):0¶SocialDistanceMainSetsModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainFetchesViewSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainCallsControllerMethod did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceControllerFetchesModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceControllerWritesModel did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceViewISAPropertyListener did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶BasicModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶InterpolatingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferringModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="202" _type="PauseCommand" date="Thu May 05 00:29:47 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="339986">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1839]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="201" _type="ConsoleOutput" date="Thu May 05 00:29:47 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="339986" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶Test execution time (ms):0¶SocialDistanceMainSetsModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainFetchesViewSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainCallsControllerMethod did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceControllerFetchesModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceControllerWritesModel did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceViewISAPropertyListener did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶BasicModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶InterpolatingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferringModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="204" _type="PauseCommand" date="Thu May 05 00:29:50 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="342560">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2574]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="203" _type="ConsoleOutput" date="Thu May 05 00:29:50 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="342560" type="ConsoleOutput">
    <outputString><![CDATA[Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks

Test execution time (ms):1
DerivedAndInferredPrintCallSharedProcedure did not pass completely:No checkstyle output, check console error messages%0.0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
DerivedPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
InferredPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1"), Diff(INSERT,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶Test execution time (ms):1¶DerivedAndInferredPrintCallSharedProcedure did not pass completely:No checkstyle output, check console error messages%0.0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferredPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="206" _type="PauseCommand" date="Thu May 05 00:29:55 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="348039">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5479]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="205" _type="ConsoleOutput" date="Thu May 05 00:29:55 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="348039" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedPrintIsNotDirect@1f22f997 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶Test execution time (ms):1¶DerivedAndInferredPrintCallSharedProcedure did not pass completely:No checkstyle output, check console error messages%0.0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferredPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Test execution time (ms):0"), Diff(INSERT,"Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedPrintIsNotDirect@1f22f997 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="208" _type="PauseCommand" date="Thu May 05 00:29:57 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="350303">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2264]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="207" _type="ConsoleOutput" date="Thu May 05 00:29:57 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="350303" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedPrintIsNotDirect@1f22f997 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedPrintIsNotDirect@1f22f997 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="210" _type="PauseCommand" date="Thu May 05 00:30:30 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="383270">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[32967]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="209" _type="ConsoleOutput" date="Thu May 05 00:30:30 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="383270" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedAndInferredPrintCallSharedProcedure@7b7d04b6 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment2.modularity.Derived"), Diff(DELETE,"PrintIsNotDirect@1f22f997"), Diff(INSERT,"AndInferredPrintCallSharedProcedure@7b7d04b6"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="212" _type="PauseCommand" date="Thu May 05 00:30:32 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="385462">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2192]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="211" _type="ConsoleOutput" date="Thu May 05 00:30:32 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="385462" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedAndInferredPrintCallSharedProcedure@7b7d04b6 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedAndInferredPrintCallSharedProcedure@7b7d04b6 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="214" _type="PauseCommand" date="Thu May 05 00:30:37 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="389699">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4237]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="213" _type="ShellCommand" date="Thu May 05 00:30:37 EDT 2022" starttimestamp="1651724647535" timestamp="389699" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="216" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:30:37 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="390001" />
  <Command __id="217" _type="ShellCommand" date="Thu May 05 00:30:38 EDT 2022" starttimestamp="1651724647535" timestamp="390871" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="219" _type="PauseCommand" date="Thu May 05 00:31:25 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="437764">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[46893]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="218" _type="ShellCommand" date="Thu May 05 00:31:25 EDT 2022" starttimestamp="1651724647535" timestamp="437764" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="220" _type="MoveCaretCommand" caretOffset="4140" date="Thu May 05 00:31:25 EDT 2022" docOffset="4248" starttimestamp="1651724647535" timestamp="437848" />
  <Command __id="221" _type="MoveCaretCommand" caretOffset="4140" date="Thu May 05 00:31:25 EDT 2022" docOffset="4248" starttimestamp="1651724647535" timestamp="437848" />
  <DocumentChange __id="140" _type="Delete" date="Thu May 05 00:28:51 EDT 2022" docASTNodeCount="242" docActiveCodeLength="1878" docExpressionCount="108" docLength="2422" endLine="8" length="3" offset="280" repeat="3" startLine="8" starttimestamp="1651724647535" timestamp="284386" timestamp2="285209">
    <text><![CDATA[a1.]]></text>
  </DocumentChange>
  <DocumentChange __id="150" _type="Insert" date="Thu May 05 00:28:57 EDT 2022" docASTNodeCount="246" docActiveCodeLength="1907" docExpressionCount="111" docLength="2451" length="29" offset="13" repeat="2" starttimestamp="1651724647535" timestamp="290265" timestamp2="290267">
    <text><![CDATA[import a1.SocialDistancing;
]]></text>
  </DocumentChange>
  <DocumentChange __id="157" _type="Delete" date="Thu May 05 00:29:07 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1904" docExpressionCount="109" docLength="2448" endLine="87" length="3" offset="2152" repeat="3" startLine="87" starttimestamp="1651724647535" timestamp="299556" timestamp2="299892">
    <text><![CDATA[a1.]]></text>
  </DocumentChange>
  <DocumentChange __id="166" _type="Insert" date="Thu May 05 00:29:11 EDT 2022" docASTNodeCount="248" docActiveCodeLength="1934" docExpressionCount="112" docLength="2478" length="30" offset="40" repeat="2" starttimestamp="1651724647535" timestamp="303918" timestamp2="303919">
    <text><![CDATA[
import a1.UtilityTesterMain;]]></text>
  </DocumentChange>
  <Command __id="215" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:30:37 EDT 2022" docASTNodeCount="1360" docActiveCodeLength="9302" docExpressionCount="849" docLength="11369" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="389857">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶import java.util.ArrayList;¶import java.util.List;¶import a2.ClassifierFactory;¶import gradingTools.comp524f20.assignment1.WekaUtil;¶¶¶¶public class SocialDistancing {¶	/*	public static void main(String[] args) {¶		System.out.println("Yo");¶	}¶	 */	¶	static final int smallDistance = 6;¶	static final int mediumDistance = 13;¶	static final int largeDistance = 27;¶	¶	static final int smallDuration = 15;¶	static final int mediumDuration = 30;¶	static final int largeDuration = 120;¶	¶	static final int smallExhale = 10;¶	static final int mediumExhale = 30;¶	static final int largeExhale = 50;¶	¶	static int tenRepetitions = 10;¶	/**¶	If the combination of the method parameters is safe, based on the given data, the function¶	returns true. Otherwise, it returns false.¶	*/	¶	public static boolean isGivenSafe(int distance, int duration, int exhale) {¶		if(distance == smallDistance) { 					//small distance¶			if(duration == mediumDuration) {							//med duration¶				if(exhale == smallExhale) {					//small exhale¶					return true;¶				}¶			} else if (duration == smallDuration) {					//small duration¶				if(exhale == mediumExhale) {					//med exhale¶					return true;¶				}¶			}	¶		}else if(distance == mediumDistance) {							//med distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			} else if(duration == smallDuration) {						//small duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			}else if(duration == largeDuration) {						//large duration¶				if(exhale == smallExhale) {						//small exhale¶					return true;¶				}¶			}¶		}else if(distance == largeDistance) {							//large distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			} else if (duration == largeDuration) {					//large duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			}¶		}¶		return false;¶	}¶	/* 	higher distance are safe, so interpolate low (can have 0)¶		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE¶	*/¶	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {¶		¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);¶		¶	}¶	public static boolean isInterpolatedSafe(int distance, int duration) {¶		//exhalation level set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);¶	}¶	public static boolean isInterpolatedSafe(int distance) {¶		//duration and exhalation levels set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		return isInterpolatedSafe(interpolatedDistance, mediumDuration);¶	}¶	public static boolean isDerivedSafe (int distance, int duration, int exhale) {¶		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx¶			return true;¶		}¶		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx¶			return true;¶		}¶		return false;¶	}¶	public static void printGeneratedCombinationDerivedSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);¶	}¶	public static void printGivenAndGeneratedCombinationsDerivedSafety() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationDerivedSafety();¶		}¶	}¶	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		List<Integer[]> list = new ArrayList<Integer[]>();¶		if (interpolatedExhale < 0) {return list;}¶		if (interpolatedExhale == smallExhale) { 								//small exhale¶			 Integer[] a1 = {6,30};¶			 Integer[] a2 = {13,120};¶			list.add(a1);¶			list.add(a2);¶			return list;¶		} else if (interpolatedExhale == mediumExhale) {			//med exhale¶			 Integer[] a1 = {13,30};¶			 Integer[] a2 = {27,120};¶			 Integer[] a3 = {6,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			list.add(2, a3);¶			return list;¶		} else if (interpolatedExhale == largeExhale) {						//large exhale¶			 Integer[] a1 = {27,30};¶			 Integer[] a2 = {13,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			return list;¶		};¶		return list;¶	}¶	public static void printSafeDistancesAndDurations(int exhale) {¶		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);¶		System.out.print(exhale + ",[");¶		for (int i = 0; i < generatedList.size(); i++) {¶			System.out.print("{");¶			for (int jay = 0; jay < generatedList.get(i).length; jay++) {¶				System.out.print(generatedList.get(i)[jay]);¶				if (jay != generatedList.get(i).length - 1) {¶					System.out.print(",");¶				}¶			}¶			System.out.print("}");¶		}¶		System.out.print("]");¶		System.out.print("\n");¶	}¶	/**¶	  low interpolation to a sequence of values is either an element of the sequence or zero.¶	  If higher values of the parameter are safer, then it is interpolated low. ¶	 */¶	public static int distanceLowInterpolation(int distance) {¶		//low interpolation to a sequence of values is either an element of the sequence or zero¶		//If higher values of the parameter are safer, then it is interpolated low¶		int interpolatedDistance;¶		if (distance < smallDistance) {					//distance interpolation¶			interpolatedDistance = 0;¶		} else if(distance < mediumDistance) {¶			interpolatedDistance = smallDistance;¶		} else if(distance < largeDistance) {¶			interpolatedDistance = mediumDistance;¶		} else {¶			interpolatedDistance = largeDistance;¶		}¶		return interpolatedDistance;¶	}¶	/**¶	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	¶	public static int durationHighInterpolation(int duration) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedDuration;¶		if (duration > largeDuration) {					//duration interpolation¶			interpolatedDuration = Integer.MAX_VALUE;¶		} else if(duration > mediumDuration) {¶			interpolatedDuration = largeDuration;¶		} else if(duration > smallDuration) {¶			interpolatedDuration = mediumDuration;¶		} else {¶			interpolatedDuration = smallDuration;¶		}¶		return interpolatedDuration;¶	}	¶	/**¶	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels¶	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	public static int exhaleHighInterpolation(int exhalation) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedExhalation;¶		if (exhalation > largeExhale) {						//exhale interpolation¶			interpolatedExhalation = Integer.MAX_VALUE;¶		} else if(exhalation > mediumExhale) {¶			interpolatedExhalation = largeExhale;¶		} else if(exhalation > smallExhale) {¶			interpolatedExhalation = mediumExhale;¶		} else {¶			interpolatedExhalation = smallExhale;¶		}¶		return interpolatedExhalation;¶	}¶	¶	public static boolean isInferredSafe(int distance, int duration, int exhalation) {¶		 String TRUE = "true";¶		 String FALSE = "false";¶		 String resultAttributeName = "safe";¶		 String[] resultValueNames = {TRUE, FALSE};¶		 String[] featureNames = {"distance", "duration", "exhalation"};¶		¶		double[] anInputFeatureValues = {distance, duration, exhalation};¶		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);¶		return TRUE.equals(aResultString) ?true:false;¶	}¶	¶	public static int compareSafetyComputations() {¶		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");¶		int correctInferrences = 0;¶		for(int i = 0; i < tenRepetitions; i++) {¶			int distance = (int)(Math.random()*32);¶			int duration = (int)(Math.random()*144);¶			int exhale = (int)(Math.random()*60);¶			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);¶			boolean combinationInferred = isInferredSafe(distance, duration, exhale);¶			if(combinationDerived == combinationInferred) {¶				correctInferrences++;¶			}¶			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);¶		}¶		return correctInferrences;¶	}¶	¶	public static void printGeneratedCombinationInferredSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean inferredResult = isInferredSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);¶	}¶	public static void printGivenAndGeneratedCombinationsInferredSafety() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationInferredSafety();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="223" _type="PauseCommand" date="Thu May 05 00:31:26 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="438873">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1025]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="224" _type="InsertStringCommand" date="Thu May 05 00:31:26 EDT 2022" starttimestamp="1651724647535" timestamp="438944" timestamp2="438944">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="225" _type="InsertStringCommand" date="Thu May 05 00:31:26 EDT 2022" starttimestamp="1651724647535" timestamp="438944" timestamp2="438944">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="227" _type="InsertStringCommand" date="Thu May 05 00:31:26 EDT 2022" starttimestamp="1651724647535" timestamp="439072" timestamp2="439072">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="228" _type="InsertStringCommand" date="Thu May 05 00:31:26 EDT 2022" starttimestamp="1651724647535" timestamp="439072" timestamp2="439072">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="222" _type="Insert" date="Thu May 05 00:31:26 EDT 2022" docASTNodeCount="1360" docActiveCodeLength="9308" docExpressionCount="849" docLength="11375" length="6" offset="4248" repeat="2" starttimestamp="1651724647535" timestamp="438873" timestamp2="439018">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <Command __id="230" _type="PauseCommand" date="Thu May 05 00:31:29 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="442408">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3336]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="231" _type="InsertStringCommand" date="Thu May 05 00:31:29 EDT 2022" starttimestamp="1651724647535" timestamp="442461" timestamp2="442461">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="232" _type="InsertStringCommand" date="Thu May 05 00:31:29 EDT 2022" starttimestamp="1651724647535" timestamp="442461" timestamp2="442461">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="234" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="442616" timestamp2="442616">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="235" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="442616" timestamp2="442616">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="237" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="442757" timestamp2="442757">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="238" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="442757" timestamp2="442757">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="240" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="442853" timestamp2="442853">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="241" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="442853" timestamp2="442853">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="243" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="442940" timestamp2="442940">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="244" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="442940" timestamp2="442940">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="246" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="443126" timestamp2="443126">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="247" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="443126" timestamp2="443126">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="249" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="443205" timestamp2="443205">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="250" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="443205" timestamp2="443205">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="252" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="443351" timestamp2="443351">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="253" _type="InsertStringCommand" date="Thu May 05 00:31:30 EDT 2022" starttimestamp="1651724647535" timestamp="443351" timestamp2="443351">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="255" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="443581" timestamp2="443581">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="256" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="443581" timestamp2="443581">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="258" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="443735" timestamp2="443735">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="259" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="443736" timestamp2="443736">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="261" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="443812" timestamp2="443812">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="262" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="443812" timestamp2="443812">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="264" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="444184" timestamp2="444184">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="265" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="444184" timestamp2="444184">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="267" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="444330" timestamp2="444330">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="268" _type="InsertStringCommand" date="Thu May 05 00:31:31 EDT 2022" starttimestamp="1651724647535" timestamp="444330" timestamp2="444330">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="270" _type="InsertStringCommand" date="Thu May 05 00:31:32 EDT 2022" starttimestamp="1651724647535" timestamp="444912" timestamp2="444912">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="271" _type="InsertStringCommand" date="Thu May 05 00:31:32 EDT 2022" starttimestamp="1651724647535" timestamp="444912" timestamp2="444912">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="229" _type="Insert" date="Thu May 05 00:31:29 EDT 2022" docASTNodeCount="1362" docActiveCodeLength="9322" docExpressionCount="849" docLength="11389" length="14" offset="4254" repeat="14" starttimestamp="1651724647535" timestamp="442408" timestamp2="444867">
    <text><![CDATA[public static ]]></text>
  </DocumentChange>
  <Command __id="273" _type="PauseCommand" date="Thu May 05 00:31:36 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="449113">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4201]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="272" _type="Insert" date="Thu May 05 00:31:36 EDT 2022" docASTNodeCount="1362" docActiveCodeLength="9325" docExpressionCount="849" docLength="11392" length="3" offset="4268" repeat="3" starttimestamp="1651724647535" timestamp="449113" timestamp2="449498">
    <text><![CDATA[Giv]]></text>
  </DocumentChange>
  <Command __id="274" _type="InsertStringCommand" date="Thu May 05 00:31:36 EDT 2022" starttimestamp="1651724647535" timestamp="449178" timestamp2="449178">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="275" _type="InsertStringCommand" date="Thu May 05 00:31:36 EDT 2022" starttimestamp="1651724647535" timestamp="449178" timestamp2="449178">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="277" _type="InsertStringCommand" date="Thu May 05 00:31:36 EDT 2022" starttimestamp="1651724647535" timestamp="449394" timestamp2="449394">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="278" _type="InsertStringCommand" date="Thu May 05 00:31:36 EDT 2022" starttimestamp="1651724647535" timestamp="449394" timestamp2="449394">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="280" _type="InsertStringCommand" date="Thu May 05 00:31:37 EDT 2022" starttimestamp="1651724647535" timestamp="449551" timestamp2="449551">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="281" _type="InsertStringCommand" date="Thu May 05 00:31:37 EDT 2022" starttimestamp="1651724647535" timestamp="449552" timestamp2="449552">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="283" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:31:37 EDT 2022" starttimestamp="1651724647535" timestamp="450125" />
  <Command __id="284" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:31:37 EDT 2022" starttimestamp="1651724647535" timestamp="450125" />
  <Command __id="286" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:31:37 EDT 2022" starttimestamp="1651724647535" timestamp="450302" />
  <Command __id="287" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:31:37 EDT 2022" starttimestamp="1651724647535" timestamp="450302" />
  <Command __id="289" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:31:38 EDT 2022" starttimestamp="1651724647535" timestamp="450473" />
  <Command __id="290" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:31:38 EDT 2022" starttimestamp="1651724647535" timestamp="450473" />
  <DocumentChange __id="282" _type="Delete" date="Thu May 05 00:31:37 EDT 2022" docASTNodeCount="1362" docActiveCodeLength="9322" docExpressionCount="849" docLength="11389" endLine="116" length="3" offset="4268" repeat="3" startLine="116" starttimestamp="1651724647535" timestamp="450069" timestamp2="450433">
    <text><![CDATA[Giv]]></text>
  </DocumentChange>
  <Command __id="292" _type="PauseCommand" date="Thu May 05 00:31:40 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="452993">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2520]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="291" _type="Insert" date="Thu May 05 00:31:40 EDT 2022" docASTNodeCount="1362" docActiveCodeLength="9333" docExpressionCount="849" docLength="11400" length="11" offset="4268" repeat="11" starttimestamp="1651724647535" timestamp="452993" timestamp2="456648">
    <text><![CDATA[printGiven ]]></text>
  </DocumentChange>
  <Command __id="293" _type="InsertStringCommand" date="Thu May 05 00:31:40 EDT 2022" starttimestamp="1651724647535" timestamp="453050" timestamp2="453050">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="294" _type="InsertStringCommand" date="Thu May 05 00:31:40 EDT 2022" starttimestamp="1651724647535" timestamp="453050" timestamp2="453050">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="296" _type="InsertStringCommand" date="Thu May 05 00:31:41 EDT 2022" starttimestamp="1651724647535" timestamp="454045" timestamp2="454045">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="297" _type="InsertStringCommand" date="Thu May 05 00:31:41 EDT 2022" starttimestamp="1651724647535" timestamp="454045" timestamp2="454045">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="299" _type="InsertStringCommand" date="Thu May 05 00:31:41 EDT 2022" starttimestamp="1651724647535" timestamp="454141" timestamp2="454141">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="300" _type="InsertStringCommand" date="Thu May 05 00:31:41 EDT 2022" starttimestamp="1651724647535" timestamp="454141" timestamp2="454141">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="302" _type="InsertStringCommand" date="Thu May 05 00:31:41 EDT 2022" starttimestamp="1651724647535" timestamp="454235" timestamp2="454235">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="303" _type="InsertStringCommand" date="Thu May 05 00:31:41 EDT 2022" starttimestamp="1651724647535" timestamp="454235" timestamp2="454235">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="305" _type="InsertStringCommand" date="Thu May 05 00:31:41 EDT 2022" starttimestamp="1651724647535" timestamp="454346" timestamp2="454346">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="306" _type="InsertStringCommand" date="Thu May 05 00:31:41 EDT 2022" starttimestamp="1651724647535" timestamp="454346" timestamp2="454346">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="308" _type="InsertStringCommand" date="Thu May 05 00:31:42 EDT 2022" starttimestamp="1651724647535" timestamp="454968" timestamp2="454968">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="309" _type="InsertStringCommand" date="Thu May 05 00:31:42 EDT 2022" starttimestamp="1651724647535" timestamp="454968" timestamp2="454968">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="311" _type="InsertStringCommand" date="Thu May 05 00:31:42 EDT 2022" starttimestamp="1651724647535" timestamp="455150" timestamp2="455150">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="312" _type="InsertStringCommand" date="Thu May 05 00:31:42 EDT 2022" starttimestamp="1651724647535" timestamp="455150" timestamp2="455150">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="314" _type="InsertStringCommand" date="Thu May 05 00:31:42 EDT 2022" starttimestamp="1651724647535" timestamp="455336" timestamp2="455336">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="315" _type="InsertStringCommand" date="Thu May 05 00:31:42 EDT 2022" starttimestamp="1651724647535" timestamp="455336" timestamp2="455336">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="317" _type="InsertStringCommand" date="Thu May 05 00:31:42 EDT 2022" starttimestamp="1651724647535" timestamp="455412" timestamp2="455412">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="318" _type="InsertStringCommand" date="Thu May 05 00:31:42 EDT 2022" starttimestamp="1651724647535" timestamp="455412" timestamp2="455412">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="320" _type="InsertStringCommand" date="Thu May 05 00:31:43 EDT 2022" starttimestamp="1651724647535" timestamp="455584" timestamp2="455584">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="321" _type="InsertStringCommand" date="Thu May 05 00:31:43 EDT 2022" starttimestamp="1651724647535" timestamp="455585" timestamp2="455585">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="324" _type="PauseCommand" date="Thu May 05 00:31:44 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="456696">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1111]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="323" _type="InsertStringCommand" date="Thu May 05 00:31:44 EDT 2022" starttimestamp="1651724647535" timestamp="456696" timestamp2="456696">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="325" _type="InsertStringCommand" date="Thu May 05 00:31:44 EDT 2022" starttimestamp="1651724647535" timestamp="456696" timestamp2="456696">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="327" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:31:44 EDT 2022" starttimestamp="1651724647535" timestamp="457184" />
  <Command __id="328" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:31:44 EDT 2022" starttimestamp="1651724647535" timestamp="457186" />
  <DocumentChange __id="326" _type="Delete" date="Thu May 05 00:31:44 EDT 2022" docASTNodeCount="1362" docActiveCodeLength="9332" docExpressionCount="849" docLength="11399" endLine="116" length="1" offset="4278" startLine="116" starttimestamp="1651724647535" timestamp="457131">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="330" _type="PauseCommand" date="Thu May 05 00:31:55 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="468256">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11070]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="331" _type="InsertStringCommand" date="Thu May 05 00:31:55 EDT 2022" starttimestamp="1651724647535" timestamp="468307" timestamp2="468307">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="332" _type="InsertStringCommand" date="Thu May 05 00:31:55 EDT 2022" starttimestamp="1651724647535" timestamp="468307" timestamp2="468307">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="334" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="468483" timestamp2="468483">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="335" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="468484" timestamp2="468484">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="337" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="468616" timestamp2="468616">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="338" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="468616" timestamp2="468616">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="340" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="468914" timestamp2="468914">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="341" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="468914" timestamp2="468914">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="343" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="469023" timestamp2="469023">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="344" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="469023" timestamp2="469023">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="346" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="469136" timestamp2="469136">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="347" _type="InsertStringCommand" date="Thu May 05 00:31:56 EDT 2022" starttimestamp="1651724647535" timestamp="469136" timestamp2="469136">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="349" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469469" timestamp2="469469">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="350" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469469" timestamp2="469469">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="352" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469688" timestamp2="469688">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="353" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469689" timestamp2="469689">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="355" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469798" timestamp2="469798">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="356" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469798" timestamp2="469798">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="358" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469910" timestamp2="469910">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="359" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469911" timestamp2="469911">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="361" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469972" timestamp2="469972">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="362" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="469973" timestamp2="469973">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="364" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="470047" timestamp2="470047">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="365" _type="InsertStringCommand" date="Thu May 05 00:31:57 EDT 2022" starttimestamp="1651724647535" timestamp="470047" timestamp2="470047">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="368" _type="PauseCommand" date="Thu May 05 00:31:59 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="471765">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1718]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="367" _type="InsertStringCommand" date="Thu May 05 00:31:59 EDT 2022" starttimestamp="1651724647535" timestamp="471765" timestamp2="471765">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="369" _type="InsertStringCommand" date="Thu May 05 00:31:59 EDT 2022" starttimestamp="1651724647535" timestamp="471766" timestamp2="471766">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="370" _type="InsertStringCommand" date="Thu May 05 00:31:59 EDT 2022" starttimestamp="1651724647535" timestamp="472005" timestamp2="472005">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="371" _type="InsertStringCommand" date="Thu May 05 00:31:59 EDT 2022" starttimestamp="1651724647535" timestamp="472005" timestamp2="472005">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="373" _type="InsertStringCommand" date="Thu May 05 00:32:00 EDT 2022" starttimestamp="1651724647535" timestamp="472554" timestamp2="472554">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="374" _type="InsertStringCommand" date="Thu May 05 00:32:00 EDT 2022" starttimestamp="1651724647535" timestamp="472554" timestamp2="472554">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="376" _type="InsertStringCommand" date="Thu May 05 00:32:00 EDT 2022" starttimestamp="1651724647535" timestamp="472830" timestamp2="472830">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="377" _type="InsertStringCommand" date="Thu May 05 00:32:00 EDT 2022" starttimestamp="1651724647535" timestamp="472830" timestamp2="472830">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="379" _type="PauseCommand" date="Thu May 05 00:32:04 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="477050">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4220]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="378" _type="MoveCaretCommand" caretOffset="4159" date="Thu May 05 00:32:04 EDT 2022" docOffset="4267" starttimestamp="1651724647535" timestamp="477050" />
  <Command __id="380" _type="MoveCaretCommand" caretOffset="4159" date="Thu May 05 00:32:04 EDT 2022" docOffset="4267" starttimestamp="1651724647535" timestamp="477050" />
  <Command __id="382" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="477679" timestamp2="477679">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="383" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="477679" timestamp2="477679">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="385" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="477857" timestamp2="477857">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="386" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="477857" timestamp2="477857">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="388" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="477946" timestamp2="477946">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="389" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="477946" timestamp2="477946">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="391" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="478064" timestamp2="478064">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="392" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="478064" timestamp2="478064">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="394" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="478233" timestamp2="478233">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="395" _type="InsertStringCommand" date="Thu May 05 00:32:05 EDT 2022" starttimestamp="1651724647535" timestamp="478234" timestamp2="478234">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="397" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:32:06 EDT 2022" starttimestamp="1651724647535" timestamp="479038" />
  <Command __id="398" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:32:06 EDT 2022" starttimestamp="1651724647535" timestamp="479038" />
  <Command __id="399" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:06 EDT 2022" starttimestamp="1651724647535" timestamp="479436" />
  <Command __id="400" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:06 EDT 2022" starttimestamp="1651724647535" timestamp="479436" />
  <Command __id="401" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:07 EDT 2022" starttimestamp="1651724647535" timestamp="479649" />
  <Command __id="402" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:07 EDT 2022" starttimestamp="1651724647535" timestamp="479649" />
  <Command __id="403" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:07 EDT 2022" starttimestamp="1651724647535" timestamp="479797" />
  <Command __id="404" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:07 EDT 2022" starttimestamp="1651724647535" timestamp="479797" />
  <Command __id="405" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:07 EDT 2022" starttimestamp="1651724647535" timestamp="480455" />
  <Command __id="406" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:07 EDT 2022" starttimestamp="1651724647535" timestamp="480455" />
  <Command __id="407" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:08 EDT 2022" starttimestamp="1651724647535" timestamp="481108" />
  <Command __id="408" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:08 EDT 2022" starttimestamp="1651724647535" timestamp="481108" />
  <Command __id="409" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:09 EDT 2022" starttimestamp="1651724647535" timestamp="481677" />
  <Command __id="410" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu May 05 00:32:09 EDT 2022" starttimestamp="1651724647535" timestamp="481678" />
  <Command __id="412" _type="InsertStringCommand" date="Thu May 05 00:32:09 EDT 2022" starttimestamp="1651724647535" timestamp="481904" timestamp2="481904">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="413" _type="InsertStringCommand" date="Thu May 05 00:32:09 EDT 2022" starttimestamp="1651724647535" timestamp="481904" timestamp2="481904">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="414" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:09 EDT 2022" starttimestamp="1651724647535" timestamp="482360" />
  <Command __id="415" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:09 EDT 2022" starttimestamp="1651724647535" timestamp="482360" />
  <Command __id="416" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482858" />
  <Command __id="417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482858" />
  <Command __id="418" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482894" />
  <Command __id="419" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482894" />
  <Command __id="420" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482928" />
  <Command __id="421" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482928" />
  <Command __id="422" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482959" />
  <Command __id="423" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482959" />
  <Command __id="424" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482991" />
  <Command __id="425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="482991" />
  <Command __id="426" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="483023" />
  <Command __id="427" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="483023" />
  <Command __id="428" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="483059" />
  <Command __id="429" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu May 05 00:32:10 EDT 2022" starttimestamp="1651724647535" timestamp="483060" />
  <Command __id="431" _type="PauseCommand" date="Thu May 05 00:32:17 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="489470">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6410]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="430" _type="SelectTextCommand" caretOffset="5010" date="Thu May 05 00:32:17 EDT 2022" end="5010" start="4635" starttimestamp="1651724647535" timestamp="489470" />
  <Command __id="432" _type="SelectTextCommand" caretOffset="5010" date="Thu May 05 00:32:17 EDT 2022" end="5010" start="4635" starttimestamp="1651724647535" timestamp="489473" />
  <Command __id="434" _type="CutCommand" date="Thu May 05 00:32:18 EDT 2022" starttimestamp="1651724647535" timestamp="490488" />
  <Command __id="436" _type="PauseCommand" date="Thu May 05 00:32:20 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="492767">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[2279]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="435" _type="MoveCaretCommand" caretOffset="4195" date="Thu May 05 00:32:20 EDT 2022" docOffset="4303" starttimestamp="1651724647535" timestamp="492767" />
  <Command __id="437" _type="MoveCaretCommand" caretOffset="4195" date="Thu May 05 00:32:20 EDT 2022" docOffset="4303" starttimestamp="1651724647535" timestamp="492767" />
  <Command __id="439" _type="PasteCommand" date="Thu May 05 00:32:20 EDT 2022" starttimestamp="1651724647535" timestamp="493193" />
  <Command __id="441" _type="PauseCommand" date="Thu May 05 00:32:28 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="500569">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[7376]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="440" _type="MoveCaretCommand" caretOffset="5010" date="Thu May 05 00:32:28 EDT 2022" docOffset="5118" starttimestamp="1651724647535" timestamp="500569" />
  <Command __id="442" _type="MoveCaretCommand" caretOffset="5010" date="Thu May 05 00:32:28 EDT 2022" docOffset="5118" starttimestamp="1651724647535" timestamp="500570" />
  <Command __id="444" _type="PauseCommand" date="Thu May 05 00:32:31 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="504130">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3560]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="443" _type="SelectTextCommand" caretOffset="4189" date="Thu May 05 00:32:31 EDT 2022" end="4189" start="4165" starttimestamp="1651724647535" timestamp="504130" />
  <Command __id="445" _type="SelectTextCommand" caretOffset="4189" date="Thu May 05 00:32:31 EDT 2022" end="4189" start="4165" starttimestamp="1651724647535" timestamp="504131" />
  <Command __id="446" _type="CopyCommand" date="Thu May 05 00:32:32 EDT 2022" starttimestamp="1651724647535" timestamp="504641" />
  <Command __id="447" _type="MoveCaretCommand" caretOffset="5010" date="Thu May 05 00:32:33 EDT 2022" docOffset="5118" starttimestamp="1651724647535" timestamp="505596" />
  <Command __id="448" _type="MoveCaretCommand" caretOffset="5010" date="Thu May 05 00:32:33 EDT 2022" docOffset="5118" starttimestamp="1651724647535" timestamp="505596" />
  <Command __id="450" _type="PasteCommand" date="Thu May 05 00:32:33 EDT 2022" starttimestamp="1651724647535" timestamp="506058" />
  <Command __id="452" _type="InsertStringCommand" date="Thu May 05 00:32:33 EDT 2022" starttimestamp="1651724647535" timestamp="506329" timestamp2="506329">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="453" _type="InsertStringCommand" date="Thu May 05 00:32:33 EDT 2022" starttimestamp="1651724647535" timestamp="506329" timestamp2="506329">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="455" _type="PauseCommand" date="Thu May 05 00:32:41 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="514019">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[7690]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="454" _type="SelectTextCommand" caretOffset="10864" date="Thu May 05 00:32:41 EDT 2022" end="11239" start="10864" starttimestamp="1651724647535" timestamp="514019" />
  <Command __id="456" _type="SelectTextCommand" caretOffset="10864" date="Thu May 05 00:32:41 EDT 2022" end="11239" start="10864" starttimestamp="1651724647535" timestamp="514019" />
  <Command __id="458" _type="PasteCommand" date="Thu May 05 00:32:41 EDT 2022" starttimestamp="1651724647535" timestamp="514245" />
  <DocumentChange __id="329" _type="Insert" date="Thu May 05 00:31:55 EDT 2022" docASTNodeCount="1365" docActiveCodeLength="9356" docExpressionCount="850" docLength="11423" length="24" offset="4278" repeat="15" starttimestamp="1651724647535" timestamp="468256" timestamp2="472787">
    <text><![CDATA[Combinations() {
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="381" _type="Insert" date="Thu May 05 00:32:05 EDT 2022" docASTNodeCount="1366" docActiveCodeLength="9361" docExpressionCount="851" docLength="11428" length="5" offset="4267" repeat="5" starttimestamp="1651724647535" timestamp="477632" timestamp2="478183">
    <text><![CDATA[void ]]></text>
  </DocumentChange>
  <DocumentChange __id="396" _type="Delete" date="Thu May 05 00:32:06 EDT 2022" docASTNodeCount="1366" docActiveCodeLength="9360" docExpressionCount="851" docLength="11427" endLine="116" length="1" offset="4271" startLine="116" starttimestamp="1651724647535" timestamp="478999">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="411" _type="Insert" date="Thu May 05 00:32:09 EDT 2022" docASTNodeCount="1366" docActiveCodeLength="9361" docExpressionCount="850" docLength="11428" length="1" offset="4267" starttimestamp="1651724647535" timestamp="481850">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="433" _type="Delete" date="Thu May 05 00:32:17 EDT 2022" docASTNodeCount="1303" docActiveCodeLength="8986" docExpressionCount="796" docLength="11053" endLine="136" length="375" offset="4743" startLine="128" starttimestamp="1651724647535" timestamp="490376">
    <text><![CDATA[System.out.println("Distance,Duration,Exhalation,IsSafe");
		System.out.println("13,30,30,true");
		System.out.println("6,30,10,true");
		System.out.println("27,30,50,true");
		System.out.println("13,15,50,true");
		System.out.println("13,120,10,true");
		System.out.println("27,120,30,true");
		System.out.println("6,15,30,true");
		System.out.println("----------");]]></text>
  </DocumentChange>
  <DocumentChange __id="438" _type="Replace" date="Thu May 05 00:32:20 EDT 2022" docASTNodeCount="1366" docActiveCodeLength="9361" docExpressionCount="850" docLength="11428" endLine="117" insertionLength="377" int_docASTNodeCount="1303" int_docActiveCodeLength="8984" int_docExpressionCount="796" int_docLength="11051" length="2" offset="4301" startLine="117" starttimestamp="1651724647535" timestamp="493124">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("Distance,Duration,Exhalation,IsSafe");
		System.out.println("13,30,30,true");
		System.out.println("6,30,10,true");
		System.out.println("27,30,50,true");
		System.out.println("13,15,50,true");
		System.out.println("13,120,10,true");
		System.out.println("27,120,30,true");
		System.out.println("6,15,30,true");
		System.out.println("----------");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="449" _type="Replace" date="Thu May 05 00:32:33 EDT 2022" docASTNodeCount="1369" docActiveCodeLength="9385" docExpressionCount="852" docLength="11452" endLine="136" insertionLength="26" int_docASTNodeCount="1366" int_docActiveCodeLength="9359" int_docExpressionCount="850" int_docLength="11426" length="2" offset="5116" startLine="136" starttimestamp="1651724647535" timestamp="505999">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		printGivenCombinations()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="451" _type="Insert" date="Thu May 05 00:32:33 EDT 2022" docASTNodeCount="1369" docActiveCodeLength="9386" docExpressionCount="852" docLength="11453" length="1" offset="5142" starttimestamp="1651724647535" timestamp="506255">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="457" _type="Replace" date="Thu May 05 00:32:41 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9035" docExpressionCount="800" docLength="11102" endLine="288" insertionLength="26" int_docASTNodeCount="1306" int_docActiveCodeLength="9009" int_docExpressionCount="798" int_docLength="11076" length="377" offset="10970" startLine="280" starttimestamp="1651724647535" timestamp="514185">
    <deletedText><![CDATA[		System.out.println("Distance,Duration,Exhalation,IsSafe");
		System.out.println("13,30,30,true");
		System.out.println("6,30,10,true");
		System.out.println("27,30,50,true");
		System.out.println("13,15,50,true");
		System.out.println("13,120,10,true");
		System.out.println("27,120,30,true");
		System.out.println("6,15,30,true");
		System.out.println("----------");]]></deletedText>
    <insertedText><![CDATA[		printGivenCombinations()]]></insertedText>
  </DocumentChange>
  <Command __id="460" _type="PauseCommand" date="Thu May 05 00:32:43 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="516183">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1938]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="459" _type="Insert" date="Thu May 05 00:32:43 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9036" docExpressionCount="800" docLength="11103" length="1" offset="10996" starttimestamp="1651724647535" timestamp="516183">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="461" _type="InsertStringCommand" date="Thu May 05 00:32:43 EDT 2022" starttimestamp="1651724647535" timestamp="516242" timestamp2="516242">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="462" _type="InsertStringCommand" date="Thu May 05 00:32:43 EDT 2022" starttimestamp="1651724647535" timestamp="516242" timestamp2="516242">
    <data><![CDATA[l]]></data>
  </Command>
  <DocumentChange __id="463" _type="Delete" date="Thu May 05 00:32:44 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9035" docExpressionCount="800" docLength="11102" endLine="280" length="1" offset="10996" startLine="280" starttimestamp="1651724647535" timestamp="516900">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="464" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:32:44 EDT 2022" starttimestamp="1651724647535" timestamp="516936" />
  <Command __id="465" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu May 05 00:32:44 EDT 2022" starttimestamp="1651724647535" timestamp="516937" />
  <Command __id="467" _type="InsertStringCommand" date="Thu May 05 00:32:44 EDT 2022" starttimestamp="1651724647535" timestamp="517167" timestamp2="517167">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="468" _type="InsertStringCommand" date="Thu May 05 00:32:44 EDT 2022" starttimestamp="1651724647535" timestamp="517167" timestamp2="517167">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="470" _type="PauseCommand" date="Thu May 05 00:32:45 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="518426">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1259]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="469" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu May 05 00:32:45 EDT 2022" starttimestamp="1651724647535" timestamp="518426" />
  <Command __id="471" _type="EclipseCommand" commandID="" date="Thu May 05 00:32:46 EDT 2022" starttimestamp="1651724647535" timestamp="518542" />
  <Command __id="472" _type="EclipseCommand" commandID="" date="Thu May 05 00:32:46 EDT 2022" starttimestamp="1651724647535" timestamp="518618" />
  <Command __id="474" _type="PauseCommand" date="Thu May 05 00:32:48 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="520797">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2179]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="473" _type="ShellCommand" date="Thu May 05 00:32:48 EDT 2022" starttimestamp="1651724647535" timestamp="520797" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="475" _type="ShellCommand" date="Thu May 05 00:32:48 EDT 2022" starttimestamp="1651724647535" timestamp="520888" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="476" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:32:49 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="521555" type="Run" />
  <Command __id="477" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:32:49 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="521555" type="Run" />
  <Command __id="479" _type="PauseCommand" date="Thu May 05 00:32:56 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="528927">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7372]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="478" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Thu May 05 00:32:56 EDT 2022" starttimestamp="1651724647535" timestamp="528927" />
  <Command __id="480" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:32:56 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="529274" type="Run" />
  <Command __id="481" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:32:56 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="529275" type="Run" />
  <Command __id="483" _type="PauseCommand" date="Thu May 05 00:33:00 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="532995">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3720]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="482" _type="ShellCommand" date="Thu May 05 00:33:00 EDT 2022" starttimestamp="1651724647535" timestamp="532995" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="485" _type="PauseCommand" date="Thu May 05 00:33:03 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="535676">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2681]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="484" _type="ConsoleOutput" date="Thu May 05 00:33:03 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="535676" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
DerivedAndInferredPrintCallSharedProcedure did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):23
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
DerivedPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
InferredPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedAndInferredPrintCallSharedProcedure@7b7d04b6 . Results may change."), Diff(INSERT,"Test execution time (ms):13¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedAndInferredPrintCallSharedProcedure did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):23¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferredPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="487" _type="PauseCommand" date="Thu May 05 00:33:05 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="537471">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1795]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="486" _type="ConsoleOutput" date="Thu May 05 00:33:05 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="537471" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedAndInferredPrintCallSharedProcedure@6058d7aa . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedAndInferredPrintCallSharedProcedure did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):23¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivedPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferredPrintIsNotDirect did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Test execution time (ms):1"), Diff(INSERT,"Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedAndInferredPrintCallSharedProcedure@6058d7aa . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="489" _type="PauseCommand" date="Thu May 05 00:33:08 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="540902">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3431]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="488" _type="ConsoleOutput" date="Thu May 05 00:33:08 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="540902" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment2.modularity.DerivedAndInferredPrintCallSharedProcedure@6058d7aa . Results may change."), Diff(INSERT,"Test execution time (ms):8¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="491" _type="PauseCommand" date="Thu May 05 00:33:12 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="545325">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4423]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="490" _type="ConsoleOutput" date="Thu May 05 00:33:12 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="545325" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"8¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="492" _type="ConsoleOutput" date="Thu May 05 00:33:12 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="545427" type="ConsoleOutput">
    <outputString><![CDATA[1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.375 the minimum required accuracy threshold should be 0.8
0.375
F21A2IsInferredSafeTest did not pass completely:view console output%0.8090452921395543

Number of traces > 600  turning tracing off
Test execution time (ms):80
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
3,7,42,true
9,66,20,true
14,131,24,true
28,33,10,true
28,37,23,true
31,43,34,true
6,18,15,true
24,92,37,true
26,66,42,true
16,3,17,true
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
8,124,23,true
14,88,14,true
24,101,39,true
3,1,35,true
10,24,22,true
29,18,22,true
31,112,49,true
5,107,29,true
16,5,39,true
26,89,0,true
Test execution time (ms):31
Distance,Duration,Exhalation,Derived,Inferred
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13"), Diff(INSERT,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.375 the minimum required accuracy threshold should be 0.8¶0.375¶F21A2IsInferredSafeTest did not pass completely:view console output%0.8090452921395543¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):80¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶3,7,42,true¶9,66,20,true¶14,131,24,true¶28,33,10,true¶28,37,23,true¶31,43,34,true¶6,18,15,true¶24,92,37,true¶26,66,42,true¶16,3,17,true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶8,124,23,true¶14,88,14,true¶24,101,39,true¶3,1,35,true¶10,24,22,true¶29,18,22,true¶31,112,49,true¶5,107,29,true¶16,5,39,true¶26,89,0,true¶Test execution time (ms):31¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="493" _type="ConsoleOutput" date="Thu May 05 00:33:13 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="545544" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
4,79,35,false,true
26,31,2,true,true
7,79,8,false,true
21,106,54,false,true
7,30,48,false,true
16,7,6,true,true
27,126,9,false,true
18,84,25,false,true
22,137,22,false,true
11,66,41,false,true
Distance,Duration,Exhalation,Derived,Inferred
18,24,27,true,true
23,135,24,false,true
3,80,31,false,true
9,88,54,false,true
26,84,14,false,true
29,26,5,true,true
25,123,57,false,true
11,71,54,false,true
2,20,34,false,true
7,82,44,false,true
Distance,Duration,Exhalation,Derived,Inferred
18,84,14,false,true
14,87,33,false,true
6,64,13,false,true
25,60,9,true,true
24,81,11,false,true
12,72,26,false,true
13,68,30,false,true
16,30,37,false,true
8,12,45,false,true
11,123,25,false,true
Distance,Duration,Exhalation,Derived,Inferred
11,12,6,true,true
15,117,4,true,true
6,0,44,false,true
19,26,34,false,true
4,83,52,false,true
31,123,11,false,true
24,79,27,false,true
12,84,45,false,true
30,45,11,true,true
25,114,27,false,true
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
27,78,16,true,true
31,0,13,true,true
18,35,45,false,true
28,109,39,false,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.375 the minimum required accuracy threshold should be 0.8¶0.375¶F21A2IsInferredSafeTest did not pass completely:view console output%0.8090452921395543¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):80¶Number of traces > 600  turning tracing off"), Diff(INSERT,"Distance,Duration,Exhalation,Derived,Inferred¶4,79,35,false,true¶26,31,2,true,true¶7,79,8,false,true¶21,106,54,false,true¶7,30,48,false,true¶16,7,6,true,true¶27,126,9,false,true¶18,84,25,false,true¶22,137,22,false,true¶11,66,41,false,true"), Diff(EQUAL,"¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50"), Diff(INSERT,"Derived,Inferred¶18,24,27,true,true¶23,135,24,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"1"), Diff(EQUAL,"3,"), Diff(DELETE,"120,10,true¶27,120,30,true¶6,15,30,true¶----------¶3,7,42"), Diff(INSERT,"80,31,false,true¶9,88,54,false,true¶26,84,14,false"), Diff(EQUAL,",true¶"), Diff(INSERT,"2"), Diff(EQUAL,"9,"), Diff(DELETE,"6"), Diff(INSERT,"2"), Diff(EQUAL,"6,"), Diff(DELETE,"20"), Diff(INSERT,"5"), Diff(EQUAL,",true"), Diff(DELETE,"¶14,131,24,true¶28,33,10,true¶28,37,23"), Diff(INSERT,",true¶25,123,57,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"1,"), Diff(DELETE,"43,34,true¶6,18,15,true¶24,92,37"), Diff(INSERT,"71,54,false,true¶2,20,34,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"26,66,42,true¶16,3,17"), Diff(INSERT,"7,82,44,false"), Diff(EQUAL,",true¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50"), Diff(INSERT,"Derived,Inferred¶18,84,14,false,true¶14,87,33,false,true¶6,64,13,false,true¶25,60,9,true"), Diff(EQUAL,",true¶"), Diff(DELETE,"13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶8,124,23,true¶14,88,14"), Diff(INSERT,"24,81,11,false,true¶12,72,26,false,true¶13,68,30,false,true¶16,30,37,false,true¶8,12,45,false,true¶11,123,25,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶11,12,6,true"), Diff(EQUAL,",true¶"), Diff(DELETE,"24,101,39,true¶3,1,35"), Diff(INSERT,"15,117,4,true,true¶6,0,44,false"), Diff(EQUAL,",true¶1"), Diff(DELETE,"0"), Diff(INSERT,"9"), Diff(EQUAL,",2"), Diff(DELETE,"4,22,true¶29,18,22,true¶31,112,49,true¶5,107,29,true¶16,5,39,true¶26,89,0,true¶Test execution time (ms):31¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(INSERT,"6,34,false,true¶4,83,52,false,true¶31,123,11,false,true¶24,79,27,false,true¶12,84,45,false,true¶30,45,11,true,true¶25,114,27,false,true¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,Derived,Inferred¶27,78,16,true,true¶31,0,13,true,true¶18,35,45,false,true¶28,109,39,false,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="494" _type="ConsoleOutput" date="Thu May 05 00:33:13 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="545597" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):121
Number of traces > 600  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Distance,Duration,Exhalation,Derived,Inferred¶4,79,35,false,true¶26,31,2,true,true¶7,79,8,false,true¶21,106,54,false,true¶7,30,48,false,true¶16,7,6,true,true¶27,126,9,false,true¶18,84,25,false,true¶22,137,22,false,true¶11,66,41,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶18,24,27,true,true¶23,135,24,false,true¶3,80,31,false,true¶9,88,54,false,true¶26,84,14,false,true¶29,26,5,true,true¶25,123,57,false,true¶11,71,54,false,true¶2,20,34,false,true¶7,82,44,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶18,84,14,false,true¶14,87,33,false,true¶6,64,13,false,true¶25,60,9,true,true¶24,81,11,false,true¶12,72,26,false,true¶13,68,30,false,true¶16,30,37,false,true¶8,12,45,false,true¶11,123,25,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶11,12,6,true,true¶15,117,4,true,true¶6,0,44,false,true¶19,26,34,false,true¶4,83,52,false,true¶31,123,11,false,true¶24,79,27,false,true¶12,84,45,false,true¶30,45,11,true,true¶25,114,27,false,true¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,Derived,Inferred¶27,78,16,true,true¶31,0,13,true,true¶18,35,45,false,true¶28,109,39,false,true"), Diff(INSERT,"Test execution time (ms):121¶Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="496" _type="PauseCommand" date="Thu May 05 00:33:14 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="546917">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1320]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="495" _type="ConsoleOutput" date="Thu May 05 00:33:14 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="546917" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off

Testing BasicMainTest with the following inputs:
"10" "10" "10" "13" "30" "30" "6" "30" "10" "27" "30" "50" "6" "15" "10" "6" "16" "10" "5" "14" "9" "27" "120" "50" "-1" 


Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]
8 Not Safe!
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.BasicModel@c818063]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Duration?
21 Exhalation Level?
22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]
23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]
26 Safe.
27 Please enter data regarding your guest interaction.
28 Distance?
29 Duration?
30 Exhalation Level?
31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.BasicModel@c818063]
32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.BasicModel@c818063]
34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]
35 Safe.
36 Please enter data regarding your guest interaction.
37 Distance?
38 Duration?
39 Exhalation Level?
40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]
41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.BasicModel@c818063]
42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):121¶"), Diff(EQUAL,"Number of traces > 600  turning tracing off"), Diff(INSERT,"¶¶Testing BasicMainTest with the following inputs:¶"10" "10" "10" "13" "30" "30" "6" "30" "10" "27" "30" "50" "6" "15" "10" "6" "16" "10" "5" "14" "9" "27" "120" "50" "-1" ¶¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.BasicModel@c818063]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.BasicModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.BasicModel@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶35 Safe.¶36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.BasicModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="498" _type="PauseCommand" date="Thu May 05 00:33:15 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="548093">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1176]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="497" _type="ConsoleOutput" date="Thu May 05 00:33:15 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="548093" type="ConsoleOutput">
    <outputString><![CDATA[
Testing InterpolatingMainTests with the following inputs:
"1" "1" "1" "13" "15" "50" "28" "119" "16" "13" "15" "31" "6" "15" "10" "6" "15" "51" "27" "15" "30" "-1" 

Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]
8 Not Safe!
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.InterpolatedModel@c818063]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Duration?
21 Exhalation Level?
22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=28; propagationId=null; source=a2.InterpolatedModel@c818063]
23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=119; propagationId=null; source=a2.InterpolatedModel@c818063]
24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=16; propagationId=null; source=a2.InterpolatedModel@c818063]
25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]
26 Safe.
27 Please enter data regarding your guest interaction.
28 Distance?
29 Duration?
30 Exhalation Level?
31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]
32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=31; propagationId=null; source=a2.InterpolatedModel@c818063]
34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]
35 Safe.
36 Please enter data regarding your guest interaction.
37 Distance?
38 Duration?
39 Exhalation Level?
40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.InterpolatedModel@c818063]
41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 600  turning tracing off¶¶Testing Basic"), Diff(INSERT,"¶Testing Interpolating"), Diff(EQUAL,"MainTest"), Diff(INSERT,"s"), Diff(EQUAL," with the following inputs:¶"1"), Diff(DELETE,"0"), Diff(EQUAL,"" "1"), Diff(DELETE,"0"), Diff(EQUAL,"" "1"), Diff(DELETE,"0"), Diff(EQUAL,"" "13" ""), Diff(DELETE,"30"), Diff(INSERT,"15"), Diff(EQUAL,"" ""), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,"0" ""), Diff(DELETE,"6"), Diff(INSERT,"28"), Diff(EQUAL,"" ""), Diff(DELETE,"30"), Diff(INSERT,"119"), Diff(EQUAL,"" "1"), Diff(DELETE,"0"), Diff(INSERT,"6"), Diff(EQUAL,"" ""), Diff(DELETE,"27" "30" "50"), Diff(INSERT,"13" "15" "31"), Diff(EQUAL,"" "6" "15" "10" "6" "1"), Diff(DELETE,"6" "10" "5" "14" "9"), Diff(INSERT,"5" "51"), Diff(EQUAL,"" "27" "1"), Diff(DELETE,"20"), Diff(INSERT,"5"), Diff(EQUAL,"" ""), Diff(DELETE,"5"), Diff(INSERT,"3"), Diff(EQUAL,"0" "-1" ¶¶"), Diff(DELETE,"¶"), Diff(EQUAL,"Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=1"), Diff(DELETE,"0"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1"), Diff(DELETE,"0"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1"), Diff(DELETE,"0"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"30"), Diff(INSERT,"15"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,"0; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"6"), Diff(INSERT,"28"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"30"), Diff(INSERT,"119"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1"), Diff(DELETE,"0"), Diff(INSERT,"6"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"27"), Diff(INSERT,"13"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"30"), Diff(INSERT,"15"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"50"), Diff(INSERT,"31"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶35 Safe.¶36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2."), Diff(DELETE,"BasicModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶")]]]></diff>
  </Command>
  <Command __id="499" _type="ConsoleOutput" date="Thu May 05 00:33:15 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="548130" type="ConsoleOutput">
    <outputString><![CDATA[42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InterpolatedModel@c818063]
43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]
44 Not Safe!
45 Please enter data regarding your guest interaction.
46 Distance?
47 Duration?
48 Exhalation Level?
49 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.InterpolatedModel@c818063]
50 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
51 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=51; propagationId=null; source=a2.InterpolatedModel@c818063]
52 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]
53 Not Safe!
54 Please enter data regarding your guest interaction.
55 Distance?
56 Duration?
57 Exhalation Level?
58 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.InterpolatedModel@c818063]
59 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
60 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.InterpolatedModel@c818063]
61 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]
62 Not Safe!
63 Please enter data regarding your guest interaction.
64 Distance?
65 Quitting

Output line: "0" matches regex: ^[Pp]lease enter.*
Output line: "1" matches regex: ^[Dd]istance.*
Output line: "2" matches regex: ^[Dd]uration.*
Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*
Output line: "4" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=1.*
Output line: "5" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=1.*
Output line: "6" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=1.*
Output line: "8" matches regex: ^[Nn]ot [Ss]afe.*
Output line: "13" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=13.*
Output line: "14" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=15.*
Output line: "15" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=50.*
Output line: "17" matches regex: ^[Ss]afe.*
Output line: "26" matches regex: ^[Ss]afe.*
Output line: "35" matches regex: ^[Ss]afe.*
Output line: "44" matches regex: ^[Nn]ot [Ss]afe.*
Output line: "53" matches regex: ^[Nn]ot [Ss]afe.*
Output line: "62" matches regex: ^[Nn]ot [Ss]afe.*
Output line: "65" matches regex: ^[Qq]uitting.*
Test execution time (ms):1201
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Testing InterpolatingMainTests with the following inputs:¶"1" "1" "1" "13" "15" "50" "28" "119" "16" "13" "15" "31" "6" "15" "10" "6" "15" "51" "27" "15" "30" "-1" ¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]¶6"), Diff(INSERT,"42"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1"), Diff(INSERT,"0"), Diff(EQUAL,"; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"7"), Diff(INSERT,"43"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"8"), Diff(INSERT,"44"), Diff(EQUAL," Not Safe!¶"), Diff(DELETE,"9"), Diff(INSERT,"45"), Diff(EQUAL," Please enter data regarding your guest interaction.¶"), Diff(DELETE,"10"), Diff(INSERT,"46"), Diff(EQUAL," Distance?¶"), Diff(DELETE,"11"), Diff(INSERT,"47"), Diff(EQUAL," Duration?¶"), Diff(DELETE,"12"), Diff(INSERT,"48"), Diff(EQUAL," Exhalation Level?¶"), Diff(DELETE,"13"), Diff(INSERT,"49"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"13"), Diff(INSERT,"6"), Diff(EQUAL,"; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"14"), Diff(INSERT,"50"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"1"), Diff(EQUAL,"5"), Diff(INSERT,"1"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=5"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"16"), Diff(INSERT,"52"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"17"), Diff(INSERT,"53 Not"), Diff(EQUAL," Safe"), Diff(DELETE,"."), Diff(INSERT,"!"), Diff(EQUAL,"¶"), Diff(DELETE,"18"), Diff(INSERT,"54"), Diff(EQUAL," Please enter data regarding your guest interaction.¶"), Diff(DELETE,"19"), Diff(INSERT,"55"), Diff(EQUAL," Distance?¶"), Diff(DELETE,"20"), Diff(INSERT,"56"), Diff(EQUAL," Duration?¶"), Diff(DELETE,"21"), Diff(INSERT,"57"), Diff(EQUAL," Exhalation Level?¶"), Diff(DELETE,"22"), Diff(INSERT,"58"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=2"), Diff(DELETE,"8"), Diff(INSERT,"7"), Diff(EQUAL,"; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"23"), Diff(INSERT,"59"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1"), Diff(DELETE,"19"), Diff(INSERT,"5"), Diff(EQUAL,"; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"24"), Diff(INSERT,"60"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"16"), Diff(INSERT,"30"), Diff(EQUAL,"; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"25"), Diff(INSERT,"61"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue="), Diff(DELETE,"tru"), Diff(INSERT,"fals"), Diff(EQUAL,"e; propagationId=null; source=a2.InterpolatedModel@c818063]¶"), Diff(DELETE,"2"), Diff(EQUAL,"6"), Diff(INSERT,"2 Not"), Diff(EQUAL," Safe"), Diff(DELETE,"."), Diff(INSERT,"!"), Diff(EQUAL,"¶"), Diff(DELETE,"27"), Diff(INSERT,"63"), Diff(EQUAL," Please enter data regarding your guest interaction.¶"), Diff(DELETE,"28"), Diff(INSERT,"64"), Diff(EQUAL," Distance?¶"), Diff(DELETE,"29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]¶32 "), Diff(INSERT,"65 Quitting¶¶Output line: "0" matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Output line: "2" matches regex: ^[Dd]uration.*¶Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*¶Output line: "4" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Duration; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=1"), Diff(DELETE,"5; propagationId=null; source=a2.InterpolatedModel@c818063]¶33 "), Diff(INSERT,".*¶Output line: "5" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Exhalation; oldValue=null; newValue=31; propagationId=null; source=a2.InterpolatedModel@c818063]¶34 "), Diff(INSERT,".*oldValue=null; newValue=1.*¶Output line: "6" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Safe; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue="), Diff(DELETE,"true; propagationId=null; source=a2.InterpolatedModel@c818063]¶35 S"), Diff(INSERT,"1.*¶Output line: "8" matches regex: ^[Nn]ot [Ss]"), Diff(EQUAL,"afe."), Diff(INSERT,"*"), Diff(EQUAL,"¶"), Diff(DELETE,"36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 "), Diff(INSERT,"Output line: "13" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=13.*¶Output line: "14" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.InterpolatedModel@c818063]¶41 "), Diff(INSERT,".*oldValue=null; newValue=15.*¶Output line: "15" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]"), Diff(INSERT,".*oldValue=null; newValue=50.*¶Output line: "17" matches regex: ^[Ss]afe.*¶Output line: "26" matches regex: ^[Ss]afe.*¶Output line: "35" matches regex: ^[Ss]afe.*¶Output line: "44" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "53" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "62" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "65" matches regex: ^[Qq]uitting.*¶Test execution time (ms):1201"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="501" _type="PauseCommand" date="Thu May 05 00:33:16 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="549461">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1331]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="500" _type="ConsoleOutput" date="Thu May 05 00:33:16 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="549461" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 600  turning tracing off

Testing DerivingMainTest with the following inputs:
"404" "404" "404" "13" "30" "30" "6" "15" "10" "13" "29" "29" "27" "120" "10" "6" "121" "10" "5" "15" "10" "27" "120" "50" "-1" 


Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.DerivedModel@c818063]
8 Not Safe!
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Duration?
21 Exhalation Level?
22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.DerivedModel@c818063]
23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.DerivedModel@c818063]
24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]
25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
26 Safe.
27 Please enter data regarding your guest interaction.
28 Distance?
29 Duration?
30 Exhalation Level?
31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]
32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]
33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]
34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
35 Safe.
36 Please enter data regarding your guest interaction.
37 Distance?
38 Duration?
39 Exhalation Level?
40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.DerivedModel@c818063]
41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=120; propagationId=null; source=a2.DerivedModel@c818063]
42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"42 java.beans.PropertyChangeEvent[propertyName=Exhal"), Diff(INSERT,"Number of traces > 600  turning tracing off¶¶Testing DerivingMainTest with the following inputs:¶"404" "404" "404" "13" "30" "30" "6" "15" "10" "13" "29" "29" "27" "120" "10" "6" "121" "10" "5" "15" "10" "27" "120" "50" "-1" ¶¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Dur"), Diff(EQUAL,"ation; oldValue=null; newValue="), Diff(DELETE,"10"), Diff(INSERT,"404"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"DerivedModel@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2.Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"43"), Diff(INSERT,"7"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"44"), Diff(INSERT,"8"), Diff(EQUAL," Not Safe!¶"), Diff(DELETE,"45"), Diff(INSERT,"9"), Diff(EQUAL," Please enter data regarding your guest interaction.¶"), Diff(DELETE,"46"), Diff(INSERT,"10"), Diff(EQUAL," Distance?¶"), Diff(DELETE,"47"), Diff(INSERT,"11"), Diff(EQUAL," Duration?¶"), Diff(DELETE,"48"), Diff(INSERT,"12"), Diff(EQUAL," Exhalation Level?¶"), Diff(DELETE,"49"), Diff(INSERT,"13"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"6"), Diff(INSERT,"13"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"50"), Diff(INSERT,"14"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"15"), Diff(INSERT,"30"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"5"), Diff(EQUAL,"1"), Diff(INSERT,"5"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"51"), Diff(INSERT,"30"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"52"), Diff(INSERT,"16"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"53 Not"), Diff(INSERT,"17"), Diff(EQUAL," Safe"), Diff(DELETE,"!"), Diff(INSERT,"."), Diff(EQUAL,"¶"), Diff(DELETE,"54"), Diff(INSERT,"18"), Diff(EQUAL," Please enter data regarding your guest interaction.¶"), Diff(DELETE,"55"), Diff(INSERT,"19"), Diff(EQUAL," Distance?¶"), Diff(DELETE,"56"), Diff(INSERT,"20"), Diff(EQUAL," Duration?¶"), Diff(DELETE,"57"), Diff(INSERT,"21"), Diff(EQUAL," Exhalation Level?¶"), Diff(DELETE,"58"), Diff(INSERT,"22"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"27"), Diff(INSERT,"6"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"59"), Diff(INSERT,"23"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"60"), Diff(INSERT,"24"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"61"), Diff(INSERT,"25"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(INSERT,"2"), Diff(EQUAL,"6"), Diff(DELETE,"2 Not"), Diff(EQUAL," Safe"), Diff(DELETE,"!"), Diff(INSERT,"."), Diff(EQUAL,"¶"), Diff(DELETE,"63"), Diff(INSERT,"27"), Diff(EQUAL," Please enter data regarding your guest interaction.¶"), Diff(DELETE,"64"), Diff(INSERT,"28"), Diff(EQUAL," Distance?¶"), Diff(DELETE,"65 Quitting¶¶Output line: "0" matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Output line: "2" matches regex: ^[Dd]uration.*¶Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*¶Output line: "4" matches regex: ^"), Diff(INSERT,"29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]¶32 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*oldValue=null; newValue=1.*¶Output line: "5" matches regex: ^"), Diff(INSERT,"[propertyName=Duration; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶33 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*oldValue=null; newValue=1.*¶Output line: "6" matches regex: ^"), Diff(INSERT,"[propertyName=Exhalation; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶34 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*"), Diff(INSERT,"[propertyName=Safe; "), Diff(EQUAL,"oldValue=null; newValue="), Diff(DELETE,"1.*¶Output line: "8" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "13" matches regex: ^"), Diff(INSERT,"true; propagationId=null; source=a2.DerivedModel@c818063]¶35 Safe.¶36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*oldValue=null; newValue=13.*¶Output line: "14" matches regex: ^"), Diff(INSERT,"[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.DerivedModel@c818063]¶41 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*"), Diff(INSERT,"[propertyName=Duration; "), Diff(EQUAL,"oldValue=null; newValue=1"), Diff(DELETE,"5.*¶Output line: "15" matches regex: ^"), Diff(INSERT,"20; propagationId=null; source=a2.DerivedModel@c818063]¶42 "), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,".*oldValue=null; newValue=50.*¶Output line: "17" matches regex: ^[Ss]afe.*¶Output line: "26" matches regex: ^[Ss]afe.*¶Output line: "35" matches regex: ^[Ss]afe.*¶Output line: "44" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "53" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "62" matches regex: ^[Nn]ot [Ss]afe.*¶Output line: "65" matches regex: ^[Qq]uitting.*¶Test execution time (ms):1201"), Diff(INSERT,"[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="502" _type="ConsoleOutput" date="Thu May 05 00:33:17 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="550431" type="ConsoleOutput">
    <outputString><![CDATA[
Testing InferringMainTest with the following inputs:
"404" "404" "404" "27" "15" "10" "-1" 

Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]
8 Safe.
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.InferredModel@4493d195]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InferredModel@4493d195]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InferredModel@4493d195]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Quitting
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 600  turning tracing off¶"), Diff(EQUAL,"¶Testing "), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"ingMainTest with the following inputs:¶"404" "404" "404" ""), Diff(DELETE,"13" "30" "30" "6" "15" "10" "13" "29" "29" "27" "120" "10" "6" "121" "10" "5" "15" "10" "27" "120" "5"), Diff(INSERT,"27" "15" "1"), Diff(EQUAL,"0" "-1" ¶¶"), Diff(DELETE,"¶"), Diff(EQUAL,"Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶8 "), Diff(DELETE,"Not "), Diff(EQUAL,"Safe"), Diff(DELETE,"!"), Diff(INSERT,"."), Diff(EQUAL,"¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"13"), Diff(INSERT,"27"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"30; propagationId=null; source=a2.DerivedModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.DerivedModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.DerivedModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶34"), Diff(INSERT,"15; propagationId=null; source=a2.InferredModel@4493d195]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InferredModel@4493d195]¶16"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶"), Diff(DELETE,"35"), Diff(INSERT,"17"), Diff(EQUAL," Safe.¶"), Diff(DELETE,"36"), Diff(INSERT,"18"), Diff(EQUAL," Please enter data regarding your guest interaction.¶"), Diff(DELETE,"37"), Diff(INSERT,"19"), Diff(EQUAL," Distance?¶"), Diff(DELETE,"38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.DerivedModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=120; propagationId=null; source=a2.DerivedModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]"), Diff(INSERT,"20 Quitting"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="503" _type="ConsoleOutput" date="Thu May 05 00:33:18 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="550484" type="ConsoleOutput">
    <outputString><![CDATA[InferringMainTest did not pass completely:View console for more detail%0.0
Output line: "0" matches regex: ^[Pp]lease enter.*
Output line: "1" matches regex: ^[Dd]istance.*
Output line: "2" matches regex: ^[Dd]uration.*
Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*
Output line: "4" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*
Output line: "5" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*
Output line: "6" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*
Regex: "^[Nn]ot [Ss]afe.*" not found, all following regexs not checked
Note: All regex's are assumed to be in sequential order

Test execution time (ms):1011
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2CommonPropertiesInherited did not pass completely:No checkstyle output, check console error messages%0.0
e=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]

Test execution time (ms):1013
Number of traces > 600  turning tracing off
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2NoHiddenFields did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2NonPublicAccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Testing "), Diff(EQUAL,"InferringMainTest "), Diff(DELETE,"with the following inputs:¶"404" "404" "404" "27" "15" "10" "-1" ¶¶Collected output:¶0 Please enter data regarding your gues"), Diff(INSERT,"did not pass completely:View console for more detail%0.0¶Output line: "0" matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Outpu"), Diff(EQUAL,"t "), Diff(INSERT,"l"), Diff(EQUAL,"in"), Diff(DELETE,"t"), Diff(EQUAL,"e"), Diff(INSERT,": "2" matches regex: ^[Dd]u"), Diff(EQUAL,"ra"), Diff(DELETE,"c"), Diff(EQUAL,"tion."), Diff(INSERT,"*"), Diff(EQUAL,"¶"), Diff(DELETE,"1 Distance?¶2 Duration?¶3 E"), Diff(INSERT,"Output line: "3" matches regex: ^[Ee]"), Diff(EQUAL,"xhalation "), Diff(DELETE,"Level?¶4 "), Diff(INSERT,"[Ll]evel.*¶Output line: "4" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Distance; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=404"), Diff(DELETE,"; propagationId=null; source=a2.InferredModel@4493d195]¶5 "), Diff(INSERT,".*¶Output line: "5" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Duration; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=404"), Diff(DELETE,"; propagationId=null; source=a2.InferredModel@4493d195]¶6 "), Diff(INSERT,".*¶Output line: "6" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Exhalation; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=404"), Diff(DELETE,"; propagationId=null; source=a2.InferredModel@4493d195]¶7 java.beans.PropertyChangeEvent[propertyNam"), Diff(INSERT,".*¶Regex: "^[Nn]ot [Ss]afe.*" not found, all following regexs not checked¶Note: All regex's are assumed to be in sequential order¶¶Test execution time (ms):1011¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2CommonPropertiesInherited did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(EQUAL,"e=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]¶"), Diff(DELETE,"8 Safe.¶9 Please enter data regarding your gues"), Diff(INSERT,"¶Test execution time (ms):1013¶Number of traces > 600  turning tracing off¶Did no"), Diff(EQUAL,"t "), Diff(INSERT,"f"), Diff(EQUAL,"in"), Diff(DELETE,"teraction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.InferredModel@4493d195]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InferredModel@4493d195]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InferredModel@4493d195]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Quitting"), Diff(INSERT,"d file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2NoHiddenFields did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2NonPublicAccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="504" _type="ConsoleOutput" date="Thu May 05 00:33:18 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="550502" type="ConsoleOutput">
    <outputString><![CDATA[Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2NoStarImports did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
A2PackageDeclarations did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
F21A2NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"InferringMainTest did not pass completely:View console for more detail%0.0¶Output line: "0" matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Output line: "2" matches regex: ^[Dd]uration.*¶Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*¶Output line: "4" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*¶Output line: "5" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*¶Output line: "6" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*¶Regex: "^[Nn]ot [Ss]afe.*" not found, all following regexs not checked¶Note: All regex's are assumed to be in sequential order¶¶Test execution time (ms):1011¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2CommonPropertiesInherited did not pass completely:No checkstyle output, check console error messages%0.0¶e=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]¶¶Test execution time (ms):1013¶Number of traces > 600  turning tracing off¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2InterfaceAsType"), Diff(INSERT,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2NoStarImports"), Diff(EQUAL," did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2"), Diff(DELETE,"NoHiddenField"), Diff(INSERT,"PackageDeclaration"), Diff(EQUAL,"s did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶"), Diff(INSERT,"F21"), Diff(EQUAL,"A2No"), Diff(DELETE,"nPublicAccessModifiersMatched"), Diff(INSERT,"CheckstyleWarnings"), Diff(EQUAL," did not pass completely:"), Diff(DELETE,"No checkstyle output, check console error messages"), Diff(INSERT,"Could not run checkstyle"), Diff(EQUAL,"%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="506" _type="PauseCommand" date="Thu May 05 00:33:20 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="553171">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2669]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="505" _type="ConsoleOutput" date="Thu May 05 00:33:20 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="553171" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
Test execution time (ms):1
Test execution time (ms):2
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2NoStarImports did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶A2PackageDeclarations did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶F21A2NoCheckstyleWarnings did not pass completely:Could not run checkstyle%0.0¶"), Diff(INSERT,"Test execution time (ms):3¶Test execution time (ms):1¶Test execution time (ms):2"), Diff(EQUAL,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="508" _type="PauseCommand" date="Thu May 05 00:33:25 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="558106">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4935]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="507" _type="ConsoleOutput" date="Thu May 05 00:33:25 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="558106" type="ConsoleOutput">
    <outputString><![CDATA[Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks

Test execution time (ms):2
SocialDistanceMainSetsModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceMainFetchesViewSingleton did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceMainCallsControllerMethod did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceControllerFetchesModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):2
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceControllerWritesModel did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
SocialDistanceViewISAPropertyListener did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
BasicModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
DerivingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
InterpolatingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml
Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks
InferringModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):3¶Test execution time (ms):1¶Test execution time (ms):2¶Test execution time (ms):0"), Diff(INSERT,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶Test execution time (ms):2¶SocialDistanceMainSetsModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainFetchesViewSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainCallsControllerMethod did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceControllerFetchesModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):2¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceControllerWritesModel did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceViewISAPropertyListener did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶BasicModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InterpolatingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferringModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="510" _type="PauseCommand" date="Thu May 05 00:33:30 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="562671">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4565]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="509" _type="ConsoleOutput" date="Thu May 05 00:33:30 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="562671" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶¶Test execution time (ms):2¶SocialDistanceMainSetsModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainFetchesViewSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceMainCallsControllerMethod did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceControllerFetchesModelSingleton did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):2¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceControllerWritesModel did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶SocialDistanceViewISAPropertyListener did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶BasicModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶DerivingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InterpolatingModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶Did not find file:C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks\unc_checks_524_A2.xml¶Download unc_checks_524_A2.xml and add it to directory C:\Users\User\eclipse-workspace\joshep_A2\.\Logs\LocalChecks¶InferringModelRegistersObserver did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="512" _type="PauseCommand" date="Thu May 05 00:33:35 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="567724">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5053]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="511" _type="ConsoleOutput" date="Thu May 05 00:33:35 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="567724" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@541c91a5 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):3"), Diff(INSERT,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@541c91a5 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="514" _type="PauseCommand" date="Thu May 05 00:34:09 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="601585">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[33861]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="515" _type="EclipseCommand" commandID="" date="Thu May 05 00:34:12 EDT 2022" starttimestamp="1651724647535" timestamp="604486" />
  <Command __id="517" _type="EclipseCommand" commandID="" date="Thu May 05 00:34:12 EDT 2022" starttimestamp="1651724647535" timestamp="604489" />
  <Command __id="519" _type="PauseCommand" date="Thu May 05 00:34:16 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="609152">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4663]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="518" _type="ShellCommand" date="Thu May 05 00:34:16 EDT 2022" starttimestamp="1651724647535" timestamp="609152" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="521" _type="PauseCommand" date="Thu May 05 00:34:18 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="610760">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1608]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="520" _type="ConsoleOutput" date="Thu May 05 00:34:18 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="610760" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@541c91a5 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@541c91a5 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="523" _type="PauseCommand" date="Thu May 05 00:34:21 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="613615">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2854]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="522" _type="ShellCommand" date="Thu May 05 00:34:21 EDT 2022" starttimestamp="1651724647535" timestamp="613614" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="525" _type="PauseCommand" date="Thu May 05 00:34:41 EDT 2022" range="20s-30s" starttimestamp="1651724647535" timestamp="634204">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[20590]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="529" _type="EclipseCommand" commandID="" date="Thu May 05 00:34:50 EDT 2022" starttimestamp="1651724647535" timestamp="643228" />
  <Command __id="531" _type="ShellCommand" date="Thu May 05 00:34:50 EDT 2022" starttimestamp="1651724647535" timestamp="643283" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="532" _type="EclipseCommand" commandID="" date="Thu May 05 00:34:50 EDT 2022" starttimestamp="1651724647535" timestamp="643400" />
  <Command __id="534" _type="PauseCommand" date="Thu May 05 00:34:54 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="647020">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3620]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="533" _type="MoveCaretCommand" caretOffset="9067" date="Thu May 05 00:34:54 EDT 2022" docOffset="9175" starttimestamp="1651724647535" timestamp="647020" />
  <Command __id="535" _type="MoveCaretCommand" caretOffset="9067" date="Thu May 05 00:34:54 EDT 2022" docOffset="9175" starttimestamp="1651724647535" timestamp="647020" />
  <Command __id="537" _type="PauseCommand" date="Thu May 05 00:35:03 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="656203">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9183]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="536" _type="ShellCommand" date="Thu May 05 00:35:03 EDT 2022" starttimestamp="1651724647535" timestamp="656203" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="539" _type="PauseCommand" date="Thu May 05 00:35:07 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="660336">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4133]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="540" _type="EclipseCommand" commandID="" date="Thu May 05 00:35:22 EDT 2022" starttimestamp="1651724647535" timestamp="675407" />
  <Command __id="542" _type="EclipseCommand" commandID="" date="Thu May 05 00:35:23 EDT 2022" starttimestamp="1651724647535" timestamp="675494" />
  <Command __id="544" _type="PauseCommand" date="Thu May 05 00:35:36 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="688809">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[13315]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="543" _type="ShellCommand" date="Thu May 05 00:35:36 EDT 2022" starttimestamp="1651724647535" timestamp="688809" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="546" _type="PauseCommand" date="Thu May 05 00:35:48 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="700466">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11657]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="545" _type="ShellCommand" date="Thu May 05 00:35:48 EDT 2022" starttimestamp="1651724647535" timestamp="700466" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="548" _type="PauseCommand" date="Thu May 05 00:35:52 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="705096">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4630]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="547" _type="ShellCommand" date="Thu May 05 00:35:52 EDT 2022" starttimestamp="1651724647535" timestamp="705096" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="550" _type="PauseCommand" date="Thu May 05 00:35:57 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="709885">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4789]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="549" _type="EclipseCommand" commandID="org.eclipse.ui.ide.showInSystemExplorer" date="Thu May 05 00:35:57 EDT 2022" starttimestamp="1651724647535" timestamp="709885" />
  <Command __id="552" _type="PauseCommand" date="Thu May 05 00:36:31 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="743647">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[33762]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="551" _type="ShellCommand" date="Thu May 05 00:36:31 EDT 2022" starttimestamp="1651724647535" timestamp="743647" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="554" _type="PauseCommand" date="Thu May 05 00:36:39 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="751863">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8216]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="553" _type="ShellCommand" date="Thu May 05 00:36:39 EDT 2022" starttimestamp="1651724647535" timestamp="751863" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="556" _type="PauseCommand" date="Thu May 05 00:36:49 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="762286">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10423]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="555" _type="ShellCommand" date="Thu May 05 00:36:49 EDT 2022" starttimestamp="1651724647535" timestamp="762286" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="558" _type="PauseCommand" date="Thu May 05 00:37:18 EDT 2022" range="20s-30s" starttimestamp="1651724647535" timestamp="790910">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[28624]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="557" _type="MoveCaretCommand" caretOffset="708" date="Thu May 05 00:37:18 EDT 2022" docOffset="816" starttimestamp="1651724647535" timestamp="790910" />
  <Command __id="559" _type="MoveCaretCommand" caretOffset="708" date="Thu May 05 00:37:18 EDT 2022" docOffset="816" starttimestamp="1651724647535" timestamp="790910" />
  <Command __id="561" _type="PauseCommand" date="Thu May 05 00:37:23 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="795852">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4942]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="560" _type="ShellCommand" date="Thu May 05 00:37:23 EDT 2022" starttimestamp="1651724647535" timestamp="795852" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="563" _type="PauseCommand" date="Thu May 05 00:37:28 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="801395">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5543]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="567" _type="EclipseCommand" commandID="" date="Thu May 05 00:37:58 EDT 2022" starttimestamp="1651724647535" timestamp="830820" />
  <Command __id="569" _type="ShellCommand" date="Thu May 05 00:37:58 EDT 2022" starttimestamp="1651724647535" timestamp="830877" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="570" _type="EclipseCommand" commandID="" date="Thu May 05 00:37:58 EDT 2022" starttimestamp="1651724647535" timestamp="831015" />
  <Command __id="572" _type="PauseCommand" date="Thu May 05 00:38:02 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="835220">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4205]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="576" _type="EclipseCommand" commandID="" date="Thu May 05 00:38:35 EDT 2022" starttimestamp="1651724647535" timestamp="868092" />
  <Command __id="578" _type="ShellCommand" date="Thu May 05 00:38:35 EDT 2022" starttimestamp="1651724647535" timestamp="868160" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="579" _type="EclipseCommand" commandID="" date="Thu May 05 00:38:35 EDT 2022" starttimestamp="1651724647535" timestamp="868270" />
  <Command __id="581" _type="PauseCommand" date="Thu May 05 00:38:40 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="872500">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4229]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="580" _type="MoveCaretCommand" caretOffset="409" date="Thu May 05 00:38:40 EDT 2022" docOffset="517" starttimestamp="1651724647535" timestamp="872499" />
  <Command __id="582" _type="MoveCaretCommand" caretOffset="409" date="Thu May 05 00:38:40 EDT 2022" docOffset="517" starttimestamp="1651724647535" timestamp="872500" />
  <Command __id="584" _type="PauseCommand" date="Thu May 05 00:38:45 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="877736">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5236]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="583" _type="MoveCaretCommand" caretOffset="1276" date="Thu May 05 00:38:45 EDT 2022" docOffset="1384" starttimestamp="1651724647535" timestamp="877736" />
  <Command __id="585" _type="MoveCaretCommand" caretOffset="1276" date="Thu May 05 00:38:45 EDT 2022" docOffset="1384" starttimestamp="1651724647535" timestamp="877736" />
  <Command __id="587" _type="PauseCommand" date="Thu May 05 00:38:50 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="883269">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5533]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="588" _type="EclipseCommand" commandID="" date="Thu May 05 00:39:26 EDT 2022" starttimestamp="1651724647535" timestamp="918740" />
  <Command __id="590" _type="ShellCommand" date="Thu May 05 00:39:26 EDT 2022" starttimestamp="1651724647535" timestamp="918801" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="591" _type="EclipseCommand" commandID="" date="Thu May 05 00:39:26 EDT 2022" starttimestamp="1651724647535" timestamp="918921" />
  <Command __id="593" _type="PauseCommand" date="Thu May 05 00:39:32 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="924535">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5613]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="592" _type="ShellCommand" date="Thu May 05 00:39:32 EDT 2022" starttimestamp="1651724647535" timestamp="924534" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="595" _type="PauseCommand" date="Thu May 05 00:39:35 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="927659">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3125]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="599" _type="EclipseCommand" commandID="" date="Thu May 05 00:39:55 EDT 2022" starttimestamp="1651724647535" timestamp="947712" />
  <Command __id="601" _type="EclipseCommand" commandID="" date="Thu May 05 00:39:55 EDT 2022" starttimestamp="1651724647535" timestamp="947714" />
  <Command __id="603" _type="PauseCommand" date="Thu May 05 00:40:00 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="952729">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5015]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="602" _type="ShellCommand" date="Thu May 05 00:40:00 EDT 2022" starttimestamp="1651724647535" timestamp="952729" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="605" _type="PauseCommand" date="Thu May 05 00:40:03 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="955590">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2861]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="604" _type="EclipseCommand" commandID="org.eclipse.ui.ide.showInSystemExplorer" date="Thu May 05 00:40:03 EDT 2022" starttimestamp="1651724647535" timestamp="955590" />
  <Command __id="607" _type="PauseCommand" date="Thu May 05 00:40:13 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="965982">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10392]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="606" _type="EclipseCommand" commandID="org.eclipse.ui.ide.showInSystemExplorer" date="Thu May 05 00:40:13 EDT 2022" starttimestamp="1651724647535" timestamp="965982" />
  <Command __id="609" _type="PauseCommand" date="Thu May 05 00:40:25 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="977985">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[12002]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="608" _type="ConsoleOutput" date="Thu May 05 00:40:25 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="977984" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@541c91a5 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@541c91a5 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="611" _type="PauseCommand" date="Thu May 05 00:40:31 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="984454">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6470]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="610" _type="ConsoleOutput" date="Thu May 05 00:40:31 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="984454" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.style.A2CommonSignaturesAreInherited@66d5cf4a . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment2."), Diff(DELETE,"testcases.F21A2Is"), Diff(INSERT,"style.A2CommonSignaturesAre"), Diff(EQUAL,"In"), Diff(DELETE,"f"), Diff(INSERT,"h"), Diff(EQUAL,"er"), Diff(DELETE,"redSafeTest@541c91a5"), Diff(INSERT,"ited@66d5cf4a"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="612" _type="ConsoleOutput" date="Thu May 05 00:40:32 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="985393" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.style.A2CommonSignaturesAreInherited@66d5cf4a . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment2.style.A2CommonSignaturesAreInherited@66d5cf4a . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="614" _type="PauseCommand" date="Thu May 05 00:40:37 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="990301">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4908]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="613" _type="ConsoleOutput" date="Thu May 05 00:40:37 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="990301" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.InferringMainTest@7db826ce . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f2"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,".assignment"), Diff(DELETE,"2.style.A2CommonSignaturesAreInherited@66d5cf4a"), Diff(INSERT,"1.testcases.socialDistance.mains.InferringMainTest@7db826ce"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="616" _type="PauseCommand" date="Thu May 05 00:40:40 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="992671">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2370]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="615" _type="ShellCommand" date="Thu May 05 00:40:40 EDT 2022" starttimestamp="1651724647535" timestamp="992671" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="618" _type="PauseCommand" date="Thu May 05 00:40:42 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="994581">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1910]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="617" _type="ShellCommand" date="Thu May 05 00:40:42 EDT 2022" starttimestamp="1651724647535" timestamp="994581" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="619" _type="ShellCommand" date="Thu May 05 00:40:42 EDT 2022" starttimestamp="1651724647535" timestamp="994705" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="620" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:40:42 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="995386" type="Run" />
  <Command __id="621" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:40:42 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="995386" type="Run" />
  <Command __id="623" _type="PauseCommand" date="Thu May 05 00:40:46 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="999221">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3835]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="622" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Thu May 05 00:40:46 EDT 2022" starttimestamp="1651724647535" timestamp="999221" />
  <Command __id="624" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:40:47 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="999609" type="Run" />
  <Command __id="625" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:40:47 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="999610" type="Run" />
  <Command __id="627" _type="PauseCommand" date="Thu May 05 00:40:50 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1003400">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3790]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="626" _type="ShellCommand" date="Thu May 05 00:40:50 EDT 2022" starttimestamp="1651724647535" timestamp="1003400" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="629" _type="PauseCommand" date="Thu May 05 00:40:55 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1008438">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5038]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="628" _type="ConsoleOutput" date="Thu May 05 00:40:55 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1008438" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):43
Test execution time (ms):3
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.InferringMainTest@7db826ce . Results may change."), Diff(INSERT,"Test execution time (ms):43¶Test execution time (ms):3¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="631" _type="PauseCommand" date="Thu May 05 00:40:58 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1010801">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2363]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="630" _type="ConsoleOutput" date="Thu May 05 00:40:58 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1010801" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):50
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"43¶Test execution time (ms):3¶Test execution time (ms):1¶Test execution time (ms):1"), Diff(INSERT,"2"), Diff(EQUAL,"¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"50"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="633" _type="PauseCommand" date="Thu May 05 00:41:02 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1014795">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3994]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="632" _type="ConsoleOutput" date="Thu May 05 00:41:02 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1014795" type="ConsoleOutput">
    <outputString><![CDATA[
Testing BasicMainTest with the following inputs:
"10" "10" "10" "13" "30" "30" "6" "30" "10" "27" "30" "50" "6" "15" "10" "6" "16" "10" "5" "14" "9" "27" "120" "50" "-1" 


Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]
8 Not Safe!
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.BasicModel@c818063]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Duration?
21 Exhalation Level?
22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]
23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]
26 Safe.
27 Please enter data regarding your guest interaction.
28 Distance?
29 Duration?
30 Exhalation Level?
31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.BasicModel@c818063]
32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]
33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.BasicModel@c818063]
34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]
35 Safe.
36 Please enter data regarding your guest interaction.
37 Distance?
38 Duration?
39 Exhalation Level?
40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]
41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.BasicModel@c818063]
42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]
43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test"), Diff(DELETE," execution time (ms):2¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):50"), Diff(INSERT,"ing BasicMainTest with the following inputs:¶"10" "10" "10" "13" "30" "30" "6" "30" "10" "27" "30" "50" "6" "15" "10" "6" "16" "10" "5" "14" "9" "27" "120" "50" "-1" ¶¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.BasicModel@c818063]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.BasicModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.BasicModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.BasicModel@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.BasicModel@c818063]¶35 Safe.¶36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.BasicModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.BasicModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.BasicModel@c818063]¶43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.BasicModel@c818063]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="635" _type="PauseCommand" date="Thu May 05 00:41:03 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="1016004">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1209]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="634" _type="ConsoleOutput" date="Thu May 05 00:41:03 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1016004" type="ConsoleOutput">
    <outputString><![CDATA[
Testing InterpolatingMainTests with the following inputs:
"1" "1" "1" "13" "15" "50" "28" "119" "16" "13" "15" "31" "6" "15" "10" "6" "15" "51" "27" "15" "30" "-1" 

Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1; propagationId=null; source=a2.InterpolatedModel@c818063]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]
8 Not Safe!
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=50; propagationId=null; source=a2.InterpolatedModel@c818063]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Duration?
21 Exhalation Level?
22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=28; propagationId=null; source=a2.InterpolatedModel@c818063]
23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=119; propagationId=null; source=a2.InterpolatedModel@c818063]
24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=16; propagationId=null; source=a2.InterpolatedModel@c818063]
25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]
26 Safe.
27 Please enter data regarding your guest interaction.
28 Distance?
29 Duration?
30 Exhalation Level?
31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.InterpolatedModel@c818063]
32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=31; propagationId=null; source=a2.InterpolatedModel@c818063]
34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InterpolatedModel@c818063]
35 Safe.
36 Please enter data regarding your guest interaction.
37 Distance?
38 Duration?
39 Exhalation Level?
40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.InterpolatedModel@c818063]
41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InterpolatedModel@c818063]
42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InterpolatedModel@c818063]
43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.InterpolatedModel@c818063]
44 Not Safe!
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Testing "), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolating"), Diff(EQUAL,"MainTest"), Diff(INSERT,"s"), Diff(EQUAL," with the following inputs:¶"1"), Diff(DELETE,"0"), Diff(EQUAL,"" "1"), Diff(DELETE,"0"), Diff(EQUAL,"" "1"), Diff(DELETE,"0"), Diff(EQUAL,"" "13" ""), Diff(DELETE,"30"), Diff(INSERT,"15"), Diff(EQUAL,"" ""), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,"0" ""), Diff(DELETE,"6" "30"), Diff(INSERT,"28"), Diff(EQUAL,"" "1"), Diff(DELETE,"0"), Diff(INSERT,"19"), Diff(EQUAL,"" ""), Diff(DELETE,"27"), Diff(INSERT,"16"), Diff(EQUAL,"" ""), Diff(INSERT,"1"), Diff(EQUAL,"3"), Diff(DELETE,"0" "50" "6"), Diff(EQUAL,"" "15" ""), Diff(INSERT,"3"), Diff(EQUAL,"1"), Diff(DELETE,"0"), Diff(EQUAL,"" "6" "1"), Diff(DELETE,"6"), Diff(INSERT,"5"), Diff(EQUAL,"" "10" ""), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL,"" "1"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"" ""), Diff(DELETE,"9"), Diff(INSERT,"51"), Diff(EQUAL,"" "27" "1"), Diff(DELETE,"20"), Diff(INSERT,"5"), Diff(EQUAL,"" ""), Diff(DELETE,"5"), Diff(INSERT,"3"), Diff(EQUAL,"0" "-1" ¶¶"), Diff(DELETE,"¶"), Diff(EQUAL,"Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=1"), Diff(DELETE,"0"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1"), Diff(DELETE,"0"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1"), Diff(DELETE,"0"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"30"), Diff(INSERT,"15"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,"0; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"6"), Diff(INSERT,"28"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"30"), Diff(INSERT,"119"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1"), Diff(DELETE,"0"), Diff(INSERT,"6"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"27"), Diff(INSERT,"13"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"30"), Diff(INSERT,"15"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"50"), Diff(INSERT,"31"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶35 Safe.¶36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2."), Diff(DELETE,"Basic"), Diff(INSERT,"Interpolated"), Diff(EQUAL,"Model@c818063]¶"), Diff(INSERT,"44 Not Safe!¶")]]]></diff>
  </Command>
  <Command __id="637" _type="PauseCommand" date="Thu May 05 00:41:04 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="1017324">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1320]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="636" _type="ConsoleOutput" date="Thu May 05 00:41:04 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1017324" type="ConsoleOutput">
    <outputString><![CDATA[
Testing DerivingMainTest with the following inputs:
"404" "404" "404" "13" "30" "30" "6" "15" "10" "13" "29" "29" "27" "120" "10" "6" "121" "10" "5" "15" "10" "27" "120" "50" "-1" 


Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2.DerivedModel@c818063]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2.DerivedModel@c818063]
8 Not Safe!
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Duration?
21 Exhalation Level?
22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.DerivedModel@c818063]
23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.DerivedModel@c818063]
24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]
25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
26 Safe.
27 Please enter data regarding your guest interaction.
28 Distance?
29 Duration?
30 Exhalation Level?
31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]
32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]
33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]
34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
35 Safe.
36 Please enter data regarding your guest interaction.
37 Distance?
38 Duration?
39 Exhalation Level?
40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.DerivedModel@c818063]
41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=120; propagationId=null; source=a2.DerivedModel@c818063]
42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]
43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Testing "), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"ingMainTest"), Diff(DELETE,"s"), Diff(EQUAL," with the following inputs:¶""), Diff(DELETE,"1" "1" "1"), Diff(INSERT,"404" "404" "404"), Diff(EQUAL,"" "13" ""), Diff(DELETE,"15"), Diff(INSERT,"30"), Diff(EQUAL,"" ""), Diff(DELETE,"5"), Diff(INSERT,"3"), Diff(EQUAL,"0" ""), Diff(DELETE,"28"), Diff(INSERT,"6"), Diff(EQUAL,"" "1"), Diff(DELETE,"19"), Diff(INSERT,"5"), Diff(EQUAL,"" "1"), Diff(DELETE,"6"), Diff(INSERT,"0"), Diff(EQUAL,"" "13" ""), Diff(DELETE,"15"), Diff(INSERT,"29" "29" "27" "120"), Diff(EQUAL,"" ""), Diff(DELETE,"3"), Diff(EQUAL,"1"), Diff(INSERT,"0"), Diff(EQUAL,"" "6" "1"), Diff(DELETE,"5"), Diff(INSERT,"21"), Diff(EQUAL,"" "10" ""), Diff(DELETE,"6"), Diff(INSERT,"5"), Diff(EQUAL,"" "15" ""), Diff(DELETE,"5"), Diff(EQUAL,"1"), Diff(INSERT,"0"), Diff(EQUAL,"" "27" "1"), Diff(DELETE,"5"), Diff(INSERT,"20"), Diff(EQUAL,"" ""), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,"0" "-1" ¶¶"), Diff(INSERT,"¶"), Diff(EQUAL,"Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"1"), Diff(INSERT,"404"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"1"), Diff(INSERT,"404"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"1"), Diff(INSERT,"404"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=false; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶8 Not Safe!¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"15"), Diff(INSERT,"30"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"5"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"28"), Diff(INSERT,"6"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1"), Diff(DELETE,"19"), Diff(INSERT,"5"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=1"), Diff(DELETE,"6"), Diff(INSERT,"0"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"15"), Diff(INSERT,"29"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue="), Diff(DELETE,"31"), Diff(INSERT,"29"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶34 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶35 Safe.¶36 Please enter data regarding your guest interaction.¶37 Distance?¶38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"6"), Diff(INSERT,"27"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=1"), Diff(DELETE,"5"), Diff(INSERT,"20"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=a2."), Diff(DELETE,"Interpolat"), Diff(INSERT,"Deriv"), Diff(EQUAL,"edModel@c818063]¶"), Diff(DELETE,"44 Not Safe!¶")]]]></diff>
  </Command>
  <Command __id="638" _type="ConsoleOutput" date="Thu May 05 00:41:05 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1018222" type="ConsoleOutput">
    <outputString><![CDATA[
Testing InferringMainTest with the following inputs:
"404" "404" "404" "27" "15" "10" "-1" 

Collected output:
0 Please enter data regarding your guest interaction.
1 Distance?
2 Duration?
3 Exhalation Level?
4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]
5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]
6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]
7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]
8 Safe.
9 Please enter data regarding your guest interaction.
10 Distance?
11 Duration?
12 Exhalation Level?
13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.InferredModel@4493d195]
14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InferredModel@4493d195]
15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InferredModel@4493d195]
16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]
17 Safe.
18 Please enter data regarding your guest interaction.
19 Distance?
20 Quitting
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Testing "), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"ingMainTest with the following inputs:¶"404" "404" "404" ""), Diff(DELETE,"13" "30" "30" "6" "15" "10" "13" "29" "29" "27" "120" "10" "6" "121" "10" "5" "15" "10" "27" "120" "5"), Diff(INSERT,"27" "15" "1"), Diff(EQUAL,"0" "-1" ¶¶"), Diff(DELETE,"¶"), Diff(EQUAL,"Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶6 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=404; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶7 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue="), Diff(DELETE,"fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶8 "), Diff(DELETE,"Not "), Diff(EQUAL,"Safe"), Diff(DELETE,"!"), Diff(INSERT,"."), Diff(EQUAL,"¶9 Please enter data regarding your guest interaction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue="), Diff(DELETE,"13"), Diff(INSERT,"27"), Diff(EQUAL,"; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue="), Diff(DELETE,"30; propagationId=null; source=a2.DerivedModel@c818063]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=30; propagationId=null; source=a2.DerivedModel@c818063]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Duration?¶21 Exhalation Level?¶22 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=6; propagationId=null; source=a2.DerivedModel@c818063]¶23 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.DerivedModel@c818063]¶24 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]¶25 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]¶26 Safe.¶27 Please enter data regarding your guest interaction.¶28 Distance?¶29 Duration?¶30 Exhalation Level?¶31 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=13; propagationId=null; source=a2.DerivedModel@c818063]¶32 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶33 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=29; propagationId=null; source=a2.DerivedModel@c818063]¶34"), Diff(INSERT,"15; propagationId=null; source=a2.InferredModel@4493d195]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InferredModel@4493d195]¶16"), Diff(EQUAL," java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2."), Diff(DELETE,"Deriv"), Diff(INSERT,"Inferr"), Diff(EQUAL,"edModel@"), Diff(DELETE,"c818063"), Diff(INSERT,"4493d195"), Diff(EQUAL,"]¶"), Diff(DELETE,"35"), Diff(INSERT,"17"), Diff(EQUAL," Safe.¶"), Diff(DELETE,"36"), Diff(INSERT,"18"), Diff(EQUAL," Please enter data regarding your guest interaction.¶"), Diff(DELETE,"37"), Diff(INSERT,"19"), Diff(EQUAL," Distance?¶"), Diff(DELETE,"38 Duration?¶39 Exhalation Level?¶40 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.DerivedModel@c818063]¶41 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=120; propagationId=null; source=a2.DerivedModel@c818063]¶42 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.DerivedModel@c818063]¶43 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.DerivedModel@c818063]"), Diff(INSERT,"20 Quitting"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="639" _type="ConsoleOutput" date="Thu May 05 00:41:05 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1018239" type="ConsoleOutput">
    <outputString><![CDATA[Output line: "0" matches regex: ^[Pp]lease enter.*
Output line: "1" matches regex: ^[Dd]istance.*
Output line: "2" matches regex: ^[Dd]uration.*
Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*
Output line: "4" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*
Output line: "5" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*
Output line: "6" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*
Regex: "^[Nn]ot [Ss]afe.*" not found, all following regexs not checked
Note: All regex's are assumed to be in sequential order
InferringMainTest did not pass completely:View console for more detail%0.0

Test execution time (ms):987
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Testing InferringMainTest with the following inputs:¶"404" "404" "404" "27" "15" "10" "-1" ¶¶Collected output:¶0 Please enter data regarding your guest interaction.¶1 Distance?¶2 Duration?¶3 Exhalation Level?¶4 java.beans.PropertyChangeEvent[propertyName=Distance; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]¶5 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=404; propagationId=null; source=a2.InferredModel@4493d195]¶6 "), Diff(INSERT,"Output line: "0" matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Output line: "2" matches regex: ^[Dd]uration.*¶Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*¶Output line: "4" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Exhalation; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue=404"), Diff(DELETE,"; propagationId=null; source=a2.InferredModel@4493d195]¶7 "), Diff(INSERT,".*¶Output line: "5" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Safe; "), Diff(INSERT,".*"), Diff(EQUAL,"oldValue=null; newValue="), Diff(DELETE,"true; propagationId=null; source=a2.InferredModel@4493d195]¶8 Safe.¶9 Please enter data regarding your gues"), Diff(INSERT,"404.*¶Outpu"), Diff(EQUAL,"t "), Diff(INSERT,"l"), Diff(EQUAL,"in"), Diff(DELETE,"teraction.¶10 Distance?¶11 Duration?¶12 Exhalation Level?¶13 "), Diff(INSERT,"e: "6" matches regex: ^"), Diff(EQUAL,"java.beans.PropertyChangeEvent"), Diff(DELETE,"[propertyName=Distance; oldValue=null; newValue=27; propagationId=null; source=a2.InferredModel@4493d195]¶14 java.beans.PropertyChangeEvent[propertyName=Duration; oldValue=null; newValue=15; propagationId=null; source=a2.InferredModel@4493d195]¶15 java.beans.PropertyChangeEvent[propertyName=Exhalation; oldValue=null; newValue=10; propagationId=null; source=a2.InferredModel@4493d195]¶16 java.beans.PropertyChangeEvent[propertyName=Safe; oldValue=null; newValue=true; propagationId=null; source=a2.InferredModel@4493d195]¶17 Safe.¶18 Please enter data regarding your guest interaction.¶19 Distance?¶20 Quitting"), Diff(INSERT,".*oldValue=null; newValue=404.*¶Regex: "^[Nn]ot [Ss]afe.*" not found, all following regexs not checked¶Note: All regex's are assumed to be in sequential order¶InferringMainTest did not pass completely:View console for more detail%0.0¶¶Test execution time (ms):987"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="641" _type="PauseCommand" date="Thu May 05 00:41:07 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1020391">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2152]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="640" _type="ConsoleOutput" date="Thu May 05 00:41:07 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1020391" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.InferringMainTest@31a22783 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Output line: "0" matches regex: ^[Pp]lease enter.*¶Output line: "1" matches regex: ^[Dd]istance.*¶Output line: "2" matches regex: ^[Dd]uration.*¶Output line: "3" matches regex: ^[Ee]xhalation [Ll]evel.*¶Output line: "4" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*¶Output line: "5" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*¶Output line: "6" matches regex: ^java.beans.PropertyChangeEvent.*oldValue=null; newValue=404.*¶Regex: "^[Nn]ot [Ss]afe.*" not found, all following regexs not checked¶Note: All regex's are assumed to be in sequential order¶InferringMainTest did not pass completely:View console for more detail%0.0¶¶Test execution time (ms):987"), Diff(INSERT,"Re-running test gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.InferringMainTest@31a22783 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="643" _type="PauseCommand" date="Thu May 05 00:41:41 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="1053943">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[33552]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="642" _type="ShellCommand" date="Thu May 05 00:41:41 EDT 2022" starttimestamp="1651724647535" timestamp="1053943" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="466" _type="Insert" date="Thu May 05 00:32:44 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9036" docExpressionCount="800" docLength="11103" length="1" offset="10996" starttimestamp="1651724647535" timestamp="517113">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="644" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:41:41 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1054328">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="646" _type="PauseCommand" date="Thu May 05 00:42:40 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="1112816">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[58488]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="647" _type="MoveCaretCommand" caretOffset="1276" date="Thu May 05 00:42:40 EDT 2022" docOffset="1384" starttimestamp="1651724647535" timestamp="1112974" />
  <Command __id="649" _type="PauseCommand" date="Thu May 05 00:42:44 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1116539">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3565]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="648" _type="ShellCommand" date="Thu May 05 00:42:44 EDT 2022" starttimestamp="1651724647535" timestamp="1116539" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="651" _type="PauseCommand" date="Thu May 05 00:42:49 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1121491">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4952]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="650" _type="ConsoleOutput" date="Thu May 05 00:42:49 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1121491" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13
1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.28125 the minimum required accuracy threshold should be 0.8
0.28125
F21A2IsInferredSafeTest did not pass completely:view console output%0.7699827921395543

Number of traces > 600  turning tracing off
Test execution time (ms):37
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
9,65,18,true
26,22,29,true
1,85,37,true
12,9,50,true
28,5,41,true
7,1,43,true
22,39,19,true
16,91,53,true
8,15,44,true
29,44,2,true
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
25,123,43,true
6,18,6,true
24,116,33,true
10,113,1,true
26,99,52,true
6,78,43,true
22,76,25,true
15,40,11,true
26,18,58,true
2,54,9,true
Test execution time (ms):34
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f20.assignment1.testcases.socialDistance.mains.InferringMainTest@31a22783 . Results may change."), Diff(INSERT,"Test execution time (ms):13¶1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.28125 the minimum required accuracy threshold should be 0.8¶0.28125¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7699827921395543¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):37¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶9,65,18,true¶26,22,29,true¶1,85,37,true¶12,9,50,true¶28,5,41,true¶7,1,43,true¶22,39,19,true¶16,91,53,true¶8,15,44,true¶29,44,2,true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶25,123,43,true¶6,18,6,true¶24,116,33,true¶10,113,1,true¶26,99,52,true¶6,78,43,true¶22,76,25,true¶15,40,11,true¶26,18,58,true¶2,54,9,true¶Test execution time (ms):34"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="652" _type="ConsoleOutput" date="Thu May 05 00:42:49 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1121555" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
2,131,43,false,true
4,101,59,false,true
20,127,51,false,true
7,88,24,false,true
5,131,54,false,true
8,107,29,false,true
10,117,54,false,true
0,116,58,false,true
21,80,36,false,true
2,123,25,false,true
Distance,Duration,Exhalation,Derived,Inferred
22,13,22,true,true
23,114,4,true,true
31,55,51,false,true
6,31,33,false,true
5,22,16,false,true
30,65,49,false,true
27,113,27,true,true
11,81,22,false,true
22,111,1,true,true
18,120,49,false,true
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
6,52,2,false,true
25,101,56,false,true
0,66,23,false,true
26,26,24,true,true
20,93,3,true,true
6,108,14,false,true
28,114,37,false,true
11,117,24,false,true
9,128,27,false,true
5,47,39,false,true
Distance,Duration,Exhalation,Derived,Inferred
11,67,1,false,true
31,61,58,false,true
14,128,49,false,true
18,99,53,false,true
29,113,22,true,true
22,27,15,true,true
16,18,35,false,true
24,132,58,false,true
13,120,0,true,true
9,32,5,false,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13¶1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.28125 the minimum required accuracy threshold should be 0.8¶0.28125¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7699827921395543¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):37"), Diff(INSERT,"Distance,Duration,Exhalation,Derived,Inferred¶2,131,43,false,true¶4,101,59,false,true¶20,127,51,false,true¶7,88,24,false,true¶5,131,54,false,true¶8,107,29,false,true¶10,117,54,false,true¶0,116,58,false,true¶21,80,36,false,true¶2,123,25,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶22,13,22,true,true¶23,114,4,true,true¶31,55,51,false,true¶6,31,33,false,true¶5,22,16,false,true¶30,65,49,false,true¶27,113,27,true,true¶11,81,22,false,true¶22,111,1,true,true¶18,120,49,false,true"), Diff(EQUAL,"¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶9,65,18"), Diff(INSERT,"Derived,Inferred¶6,52,2,false,true¶25,101,56,false,true¶0,66,23,false"), Diff(EQUAL,",true¶26,2"), Diff(DELETE,"2"), Diff(INSERT,"6"), Diff(EQUAL,",2"), Diff(DELETE,"9"), Diff(INSERT,"4"), Diff(EQUAL,",true"), Diff(DELETE,"¶1,85,37"), Diff(EQUAL,",true¶"), Diff(DELETE,"12,9,50,true¶28,5,41"), Diff(INSERT,"20,93,3,true"), Diff(EQUAL,",true¶"), Diff(DELETE,"7"), Diff(INSERT,"6"), Diff(EQUAL,",1"), Diff(DELETE,",43"), Diff(INSERT,"08,14,false"), Diff(EQUAL,",true¶2"), Diff(DELETE,"2,39,19,true¶16,91,53"), Diff(INSERT,"8,114,37,false,true¶11,117,24,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"8"), Diff(INSERT,"9"), Diff(EQUAL,",1"), Diff(DELETE,"5,44,true¶29,44,2"), Diff(INSERT,"28,27,false,true¶5,47,39,false"), Diff(EQUAL,",true¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50"), Diff(INSERT,"Derived,Inferred¶11,67,1,false,true¶31,61,58,false"), Diff(EQUAL,",true¶1"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,",12"), Diff(DELETE,"0,10,true¶27,120,30,true¶6,15,30,true¶----------¶25,123,43,true¶6,18,6,true¶24,116,33"), Diff(INSERT,"8,49,false,true¶18,99,53,false,true¶29,113,22,true"), Diff(EQUAL,",true¶"), Diff(DELETE,"10,113"), Diff(INSERT,"22,27"), Diff(EQUAL,",1"), Diff(INSERT,"5"), Diff(EQUAL,",true"), Diff(DELETE,"¶26,99,52"), Diff(EQUAL,",true¶"), Diff(INSERT,"1"), Diff(EQUAL,"6,"), Diff(DELETE,"7"), Diff(INSERT,"1"), Diff(EQUAL,"8,"), Diff(DELETE,"43,true¶22,76,25,true¶15,40,11,true¶26,18,58"), Diff(INSERT,"35,false,true¶24,132,58,false,true¶13,120,0,true"), Diff(EQUAL,",true¶"), Diff(DELETE,"2,54,9,true¶Test execution time (ms):34"), Diff(INSERT,"9,32,5,false,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="653" _type="ConsoleOutput" date="Thu May 05 00:42:49 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1121648" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
16,130,42,false,true
13,120,28,false,true
14,115,59,false,true
13,86,49,false,true
25,120,50,false,true
24,6,9,true,true
19,39,8,true,true
6,115,43,false,true
25,69,15,false,true
9,100,56,false,true
Distance,Duration,Exhalation,Derived,Inferred
21,9,3,true,true
18,130,52,false,true
26,92,1,true,true
2,33,35,false,true
22,93,53,false,true
1,41,13,false,true
6,128,29,false,true
1,135,24,false,true
24,140,10,false,true
18,60,22,false,true
Distance,Duration,Exhalation,Derived,Inferred
22,59,8,true,true
17,100,22,false,true
28,56,58,false,true
30,118,4,true,true
8,80,51,false,true
27,71,46,false,true
15,16,58,false,true
26,89,57,false,true
6,63,6,false,true
3,74,2,false,true
Distance,Duration,Exhalation,Derived,Inferred
19,137,52,false,true
13,26,33,false,true
9,17,54,false,true
30,76,8,true,true
21,120,15,false,true
30,92,2,true,true
0,25,12,false,true
2,23,41,false,true
30,15,46,true,true
5,85,27,false,true
Distance,Duration,Exhalation,Derived,Inferred
31,129,46,false,true
26,50,51,false,true
7,91,50,false,true
21,55,3,true,true
18,101,23,false,true
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"2"), Diff(INSERT,"16"), Diff(EQUAL,",13"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,",4"), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"4,101,59"), Diff(INSERT,"13,120,28"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"20,127"), Diff(INSERT,"14,115"), Diff(EQUAL,",5"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"7,88,24"), Diff(INSERT,"13,86,49"), Diff(EQUAL,",false,true¶"), Diff(INSERT,"2"), Diff(EQUAL,"5,1"), Diff(DELETE,"31"), Diff(INSERT,"20"), Diff(EQUAL,",5"), Diff(DELETE,"4"), Diff(INSERT,"0"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"8,107,29,false,true¶10,117,54,fals"), Diff(INSERT,"24,6,9,true,true¶19,39,8,tru"), Diff(EQUAL,"e,true¶"), Diff(DELETE,"0"), Diff(INSERT,"6"), Diff(EQUAL,",11"), Diff(DELETE,"6,58"), Diff(INSERT,"5,43"), Diff(EQUAL,",false,true¶2"), Diff(DELETE,"1,80,36"), Diff(INSERT,"5,69,15"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"2"), Diff(INSERT,"9"), Diff(EQUAL,",1"), Diff(DELETE,"23,25"), Diff(INSERT,"00,56"), Diff(EQUAL,",false,true¶Distance,Duration,Exhalation,Derived,Inferred¶2"), Diff(DELETE,"2,13,22"), Diff(INSERT,"1,9,3"), Diff(EQUAL,",true,true¶"), Diff(DELETE,"23,114,4,true,true¶31,55,51,fals"), Diff(INSERT,"18,130,52,false,true¶26,92,1,tru"), Diff(EQUAL,"e,true¶"), Diff(DELETE,"6"), Diff(INSERT,"2"), Diff(EQUAL,",3"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,",3"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"5,"), Diff(EQUAL,"22,"), Diff(DELETE,"16"), Diff(INSERT,"93,53"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"30,65,49"), Diff(INSERT,"1,41,13"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"27,113,27,tru"), Diff(INSERT,"6,128,29,fals"), Diff(EQUAL,"e,true¶1"), Diff(DELETE,"1,81"), Diff(INSERT,",135"), Diff(EQUAL,",2"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,",false,true¶2"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,",1"), Diff(DELETE,"11,1,tru"), Diff(INSERT,"40,10,fals"), Diff(EQUAL,"e,true¶18,"), Diff(DELETE,"120,49"), Diff(INSERT,"60,22"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"Number of traces > 600  turning tracing off¶"), Diff(EQUAL,"Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"6,52,2,fals"), Diff(INSERT,"22,59,8,tru"), Diff(EQUAL,"e,true¶"), Diff(DELETE,"25"), Diff(INSERT,"17"), Diff(EQUAL,",10"), Diff(DELETE,"1,56"), Diff(INSERT,"0,22"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"0,66,23"), Diff(INSERT,"28,56,58"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"26,26,2"), Diff(INSERT,"30,118,"), Diff(EQUAL,"4,true,true¶"), Diff(DELETE,"20,93,3,true,true¶6,108,14"), Diff(INSERT,"8,80,51,false,true¶27,71,46"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"28,114,37"), Diff(INSERT,"15,16,58"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"11,117,24"), Diff(INSERT,"26,89,57"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"9,128,27"), Diff(INSERT,"6,63,6"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"5,47,39"), Diff(INSERT,"3,74,2"), Diff(EQUAL,",false,true¶Distance,Duration,Exhalation,Derived,Inferred¶1"), Diff(DELETE,"1,67,1"), Diff(INSERT,"9,137,52"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"31,61,58"), Diff(INSERT,"13,26,33"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"14,128,49"), Diff(INSERT,"9,17,54"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"18,99,53"), Diff(INSERT,"30,76,8,true,true¶21,120,15"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"29,113,2"), Diff(INSERT,"30,92,"), Diff(EQUAL,"2,true,true¶"), Diff(DELETE,"22,27,15"), Diff(INSERT,"0,25,12,false,true¶2,23,41,false,true¶30,15,46"), Diff(EQUAL,",true,true¶"), Diff(DELETE,"16,18,35"), Diff(INSERT,"5,85,27"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"24,132,58,false,true¶13,120,0"), Diff(INSERT,"Distance,Duration,Exhalation,Derived,Inferred¶31,129,46,false,true¶26,50,51,false,true¶7,91,50,false,true¶21,55,3"), Diff(EQUAL,",true,true¶"), Diff(DELETE,"9,32,5"), Diff(INSERT,"18,101,23"), Diff(EQUAL,",false,true¶")]]]></diff>
  </Command>
  <Command __id="655" _type="PauseCommand" date="Thu May 05 00:42:51 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1124005">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2357]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="654" _type="ConsoleOutput" date="Thu May 05 00:42:51 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1124005" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@4f1d6bbc . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Distance,Duration,Exhalation,Derived,Inferred¶16,130,42,false,true¶13,120,28,false,true¶14,115,59,false,true¶13,86,49,false,true¶25,120,50,false,true¶24,6,9,true,true¶19,39,8,true,true¶6,115,43,false,true¶25,69,15,false,true¶9,100,56,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶21,9,3,true,true¶18,130,52,false,true¶26,92,1,true,true¶2,33,35,false,true¶22,93,53,false,true¶1,41,13,false,true¶6,128,29,false,true¶1,135,24,false,true¶24,140,10,false,true¶18,60,22,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶22,59,8,true,true¶17,100,22,false,true¶28,56,58,false,true¶30,118,4,true,true¶8,80,51,false,true¶27,71,46,false,true¶15,16,58,false,true¶26,89,57,false,true¶6,63,6,false,true¶3,74,2,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶19,137,52,false,true¶13,26,33,false,true¶9,17,54,false,true¶30,76,8,true,true¶21,120,15,false,true¶30,92,2,true,true¶0,25,12,false,true¶2,23,41,false,true¶30,15,46,true,true¶5,85,27,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶31,129,46,false,true¶26,50,51,false,true¶7,91,50,false,true¶21,55,3,true,true¶18,101,23,false,true"), Diff(INSERT,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@4f1d6bbc . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="657" _type="PauseCommand" date="Thu May 05 00:43:42 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="1175215">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[51210]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="656" _type="ShellCommand" date="Thu May 05 00:43:42 EDT 2022" starttimestamp="1651724647535" timestamp="1175215" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="645" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:42:40 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9036" docExpressionCount="800" docLength="11103" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1112816">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶import java.util.ArrayList;¶import java.util.List;¶import a2.ClassifierFactory;¶import gradingTools.comp524f20.assignment1.WekaUtil;¶¶¶¶public class SocialDistancing {¶	/*	public static void main(String[] args) {¶		System.out.println("Yo");¶	}¶	 */	¶	static final int smallDistance = 6;¶	static final int mediumDistance = 13;¶	static final int largeDistance = 27;¶	¶	static final int smallDuration = 15;¶	static final int mediumDuration = 30;¶	static final int largeDuration = 120;¶	¶	static final int smallExhale = 10;¶	static final int mediumExhale = 30;¶	static final int largeExhale = 50;¶	¶	static int tenRepetitions = 10;¶	/**¶	If the combination of the method parameters is safe, based on the given data, the function¶	returns true. Otherwise, it returns false.¶	*/	¶	public static boolean isGivenSafe(int distance, int duration, int exhale) {¶		if(distance == smallDistance) { 					//small distance¶			if(duration == mediumDuration) {							//med duration¶				if(exhale == smallExhale) {					//small exhale¶					return true;¶				}¶			} else if (duration == smallDuration) {					//small duration¶				if(exhale == mediumExhale) {					//med exhale¶					return true;¶				}¶			}	¶		}else if(distance == mediumDistance) {							//med distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			} else if(duration == smallDuration) {						//small duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			}else if(duration == largeDuration) {						//large duration¶				if(exhale == smallExhale) {						//small exhale¶					return true;¶				}¶			}¶		}else if(distance == largeDistance) {							//large distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			} else if (duration == largeDuration) {					//large duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			}¶		}¶		return false;¶	}¶	/* 	higher distance are safe, so interpolate low (can have 0)¶		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE¶	*/¶	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {¶		¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);¶		¶	}¶	public static boolean isInterpolatedSafe(int distance, int duration) {¶		//exhalation level set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);¶	}¶	public static boolean isInterpolatedSafe(int distance) {¶		//duration and exhalation levels set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		return isInterpolatedSafe(interpolatedDistance, mediumDuration);¶	}¶	public static boolean isDerivedSafe (int distance, int duration, int exhale) {¶		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx¶			return true;¶		}¶		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx¶			return true;¶		}¶		return false;¶	}¶	"), Diff(INSERT,"¶	public static void printGivenCombinations() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶	}¶	"), Diff(EQUAL,"public static void printGeneratedCombinationDerivedSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);¶	}¶	public static void printGivenAndGeneratedCombinationsDerivedSafety() {¶		"), Diff(DELETE,"System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------""), Diff(INSERT,"printGivenCombinations("), Diff(EQUAL,");¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationDerivedSafety();¶		}¶	}¶	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		List<Integer[]> list = new ArrayList<Integer[]>();¶		if (interpolatedExhale < 0) {return list;}¶		if (interpolatedExhale == smallExhale) { 								//small exhale¶			 Integer[] a1 = {6,30};¶			 Integer[] a2 = {13,120};¶			list.add(a1);¶			list.add(a2);¶			return list;¶		} else if (interpolatedExhale == mediumExhale) {			//med exhale¶			 Integer[] a1 = {13,30};¶			 Integer[] a2 = {27,120};¶			 Integer[] a3 = {6,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			list.add(2, a3);¶			return list;¶		} else if (interpolatedExhale == largeExhale) {						//large exhale¶			 Integer[] a1 = {27,30};¶			 Integer[] a2 = {13,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			return list;¶		};¶		return list;¶	}¶	public static void printSafeDistancesAndDurations(int exhale) {¶		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);¶		System.out.print(exhale + ",[");¶		for (int i = 0; i < generatedList.size(); i++) {¶			System.out.print("{");¶			for (int jay = 0; jay < generatedList.get(i).length; jay++) {¶				System.out.print(generatedList.get(i)[jay]);¶				if (jay != generatedList.get(i).length - 1) {¶					System.out.print(",");¶				}¶			}¶			System.out.print("}");¶		}¶		System.out.print("]");¶		System.out.print("\n");¶	}¶	/**¶	  low interpolation to a sequence of values is either an element of the sequence or zero.¶	  If higher values of the parameter are safer, then it is interpolated low. ¶	 */¶	public static int distanceLowInterpolation(int distance) {¶		//low interpolation to a sequence of values is either an element of the sequence or zero¶		//If higher values of the parameter are safer, then it is interpolated low¶		int interpolatedDistance;¶		if (distance < smallDistance) {					//distance interpolation¶			interpolatedDistance = 0;¶		} else if(distance < mediumDistance) {¶			interpolatedDistance = smallDistance;¶		} else if(distance < largeDistance) {¶			interpolatedDistance = mediumDistance;¶		} else {¶			interpolatedDistance = largeDistance;¶		}¶		return interpolatedDistance;¶	}¶	/**¶	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	¶	public static int durationHighInterpolation(int duration) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedDuration;¶		if (duration > largeDuration) {					//duration interpolation¶			interpolatedDuration = Integer.MAX_VALUE;¶		} else if(duration > mediumDuration) {¶			interpolatedDuration = largeDuration;¶		} else if(duration > smallDuration) {¶			interpolatedDuration = mediumDuration;¶		} else {¶			interpolatedDuration = smallDuration;¶		}¶		return interpolatedDuration;¶	}	¶	/**¶	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels¶	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	public static int exhaleHighInterpolation(int exhalation) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedExhalation;¶		if (exhalation > largeExhale) {						//exhale interpolation¶			interpolatedExhalation = Integer.MAX_VALUE;¶		} else if(exhalation > mediumExhale) {¶			interpolatedExhalation = largeExhale;¶		} else if(exhalation > smallExhale) {¶			interpolatedExhalation = mediumExhale;¶		} else {¶			interpolatedExhalation = smallExhale;¶		}¶		return interpolatedExhalation;¶	}¶	¶	public static boolean isInferredSafe(int distance, int duration, int exhalation) {¶		 String TRUE = "true";¶		 String FALSE = "false";¶		 String resultAttributeName = "safe";¶		 String[] resultValueNames = {TRUE, FALSE};¶		 String[] featureNames = {"distance", "duration", "exhalation"};¶		¶		double[] anInputFeatureValues = {distance, duration, exhalation};¶		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);¶		return TRUE.equals(aResultString) ?true:false;¶	}¶	¶	public static int compareSafetyComputations() {¶		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");¶		int correctInferrences = 0;¶		for(int i = 0; i < tenRepetitions; i++) {¶			int distance = (int)(Math.random()*32);¶			int duration = (int)(Math.random()*144);¶			int exhale = (int)(Math.random()*60);¶			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);¶			boolean combinationInferred = isInferredSafe(distance, duration, exhale);¶			if(combinationDerived == combinationInferred) {¶				correctInferrences++;¶			}¶			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);¶		}¶		return correctInferrences;¶	}¶	¶	public static void printGeneratedCombinationInferredSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean inferredResult = isInferredSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);¶	}¶	public static void printGivenAndGeneratedCombinationsInferredSafety() {¶		"), Diff(DELETE,"System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------""), Diff(INSERT,"printGivenCombinations("), Diff(EQUAL,");¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationInferredSafety();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package a1;

import java.util.ArrayList;
import java.util.List;
import a2.ClassifierFactory;
import gradingTools.comp524f20.assignment1.WekaUtil;



public class SocialDistancing {
	/*	public static void main(String[] args) {
		System.out.println("Yo");
	}
	 */	
	static final int smallDistance = 6;
	static final int mediumDistance = 13;
	static final int largeDistance = 27;
	
	static final int smallDuration = 15;
	static final int mediumDuration = 30;
	static final int largeDuration = 120;
	
	static final int smallExhale = 10;
	static final int mediumExhale = 30;
	static final int largeExhale = 50;
	
	static int tenRepetitions = 10;
	/**
	If the combination of the method parameters is safe, based on the given data, the function
	returns true. Otherwise, it returns false.
	*/	
	public static boolean isGivenSafe(int distance, int duration, int exhale) {
		if(distance == smallDistance) { 					//small distance
			if(duration == mediumDuration) {							//med duration
				if(exhale == smallExhale) {					//small exhale
					return true;
				}
			} else if (duration == smallDuration) {					//small duration
				if(exhale == mediumExhale) {					//med exhale
					return true;
				}
			}	
		}else if(distance == mediumDistance) {							//med distance
			if(duration == mediumDuration) {								//med duration
				if(exhale == mediumExhale) {						//med exhale
					return true;
				}
			} else if(duration == smallDuration) {						//small duration
				if(exhale == largeExhale) {						//large exhale
					return true;
				}
			}else if(duration == largeDuration) {						//large duration
				if(exhale == smallExhale) {						//small exhale
					return true;
				}
			}
		}else if(distance == largeDistance) {							//large distance
			if(duration == mediumDuration) {								//med duration
				if(exhale == largeExhale) {						//large exhale
					return true;
				}
			} else if (duration == largeDuration) {					//large duration
				if(exhale == mediumExhale) {						//med exhale
					return true;
				}
			}
		}
		return false;
	}
	/* 	higher distance are safe, so interpolate low (can have 0)
		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE
	*/
	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {
		
		int interpolatedDistance = distanceLowInterpolation(distance);
		int interpolatedDuration = durationHighInterpolation(duration);
		int interpolatedExhale = exhaleHighInterpolation(exhale);
		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);
		
	}
	public static boolean isInterpolatedSafe(int distance, int duration) {
		//exhalation level set to medium
		int interpolatedDistance = distanceLowInterpolation(distance);
		int interpolatedDuration = durationHighInterpolation(duration);
		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);
	}
	public static boolean isInterpolatedSafe(int distance) {
		//duration and exhalation levels set to medium
		int interpolatedDistance = distanceLowInterpolation(distance);
		return isInterpolatedSafe(interpolatedDistance, mediumDuration);
	}
	public static boolean isDerivedSafe (int distance, int duration, int exhale) {
		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx
			return true;
		}
		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx
			return true;
		}
		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx
			return true;
		}
		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx
			return true;
		}
		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx
			return true;
		}
		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx
			return true;
		}
		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx
			return true;
		}
		return false;
	}
	
	public static void printGivenCombinations() {
		System.out.println("Distance,Duration,Exhalation,IsSafe");
		System.out.println("13,30,30,true");
		System.out.println("6,30,10,true");
		System.out.println("27,30,50,true");
		System.out.println("13,15,50,true");
		System.out.println("13,120,10,true");
		System.out.println("27,120,30,true");
		System.out.println("6,15,30,true");
		System.out.println("----------");
	}
	public static void printGeneratedCombinationDerivedSafety() {
		 int distance = (int)(Math.random()*32);
		 int duration = (int)(Math.random()*144);
		 int exhale = (int)(Math.random()*60);

		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);
		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);
	}
	public static void printGivenAndGeneratedCombinationsDerivedSafety() {
		printGivenCombinations();
		for(int i = 0; i < tenRepetitions; i++) {
			printGeneratedCombinationDerivedSafety();
		}
	}
	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {
		int interpolatedExhale = exhaleHighInterpolation(exhale);
		List<Integer[]> list = new ArrayList<Integer[]>();
		if (interpolatedExhale < 0) {return list;}
		if (interpolatedExhale == smallExhale) { 								//small exhale
			 Integer[] a1 = {6,30};
			 Integer[] a2 = {13,120};
			list.add(a1);
			list.add(a2);
			return list;
		} else if (interpolatedExhale == mediumExhale) {			//med exhale
			 Integer[] a1 = {13,30};
			 Integer[] a2 = {27,120};
			 Integer[] a3 = {6,15};
			list.add(0, a1);
			list.add(1, a2);
			list.add(2, a3);
			return list;
		} else if (interpolatedExhale == largeExhale) {						//large exhale
			 Integer[] a1 = {27,30};
			 Integer[] a2 = {13,15};
			list.add(0, a1);
			list.add(1, a2);
			return list;
		};
		return list;
	}
	public static void printSafeDistancesAndDurations(int exhale) {
		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);
		System.out.print(exhale + ",[");
		for (int i = 0; i < generatedList.size(); i++) {
			System.out.print("{");
			for (int jay = 0; jay < generatedList.get(i).length; jay++) {
				System.out.print(generatedList.get(i)[jay]);
				if (jay != generatedList.get(i).length - 1) {
					System.out.print(",");
				}
			}
			System.out.print("}");
		}
		System.out.print("]");
		System.out.print("\n");
	}
	/**
	  low interpolation to a sequence of values is either an element of the sequence or zero.
	  If higher values of the parameter are safer, then it is interpolated low. 
	 */
	public static int distanceLowInterpolation(int distance) {
		//low interpolation to a sequence of values is either an element of the sequence or zero
		//If higher values of the parameter are safer, then it is interpolated low
		int interpolatedDistance;
		if (distance < smallDistance) {					//distance interpolation
			interpolatedDistance = 0;
		} else if(distance < mediumDistance) {
			interpolatedDistance = smallDistance;
		} else if(distance < largeDistance) {
			interpolatedDistance = mediumDistance;
		} else {
			interpolatedDistance = largeDistance;
		}
		return interpolatedDistance;
	}
	/**
	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.
	 */
	
	public static int durationHighInterpolation(int duration) {
		//high interpolation to a sequence of values is either an element of the sequence or max integer
		//If lower values of the parameter are safer, then it is interpolated high.
		int interpolatedDuration;
		if (duration > largeDuration) {					//duration interpolation
			interpolatedDuration = Integer.MAX_VALUE;
		} else if(duration > mediumDuration) {
			interpolatedDuration = largeDuration;
		} else if(duration > smallDuration) {
			interpolatedDuration = mediumDuration;
		} else {
			interpolatedDuration = smallDuration;
		}
		return interpolatedDuration;
	}	
	/**
	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels
	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.
	 */
	public static int exhaleHighInterpolation(int exhalation) {
		//high interpolation to a sequence of values is either an element of the sequence or max integer
		//If lower values of the parameter are safer, then it is interpolated high.
		int interpolatedExhalation;
		if (exhalation > largeExhale) {						//exhale interpolation
			interpolatedExhalation = Integer.MAX_VALUE;
		} else if(exhalation > mediumExhale) {
			interpolatedExhalation = largeExhale;
		} else if(exhalation > smallExhale) {
			interpolatedExhalation = mediumExhale;
		} else {
			interpolatedExhalation = smallExhale;
		}
		return interpolatedExhalation;
	}
	
	public static boolean isInferredSafe(int distance, int duration, int exhalation) {
		 String TRUE = "true";
		 String FALSE = "false";
		 String resultAttributeName = "safe";
		 String[] resultValueNames = {TRUE, FALSE};
		 String[] featureNames = {"distance", "duration", "exhalation"};
		
		double[] anInputFeatureValues = {distance, duration, exhalation};
		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);
		return TRUE.equals(aResultString) ?true:false;
	}
	
	public static int compareSafetyComputations() {
		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");
		int correctInferrences = 0;
		for(int i = 0; i < tenRepetitions; i++) {
			int distance = (int)(Math.random()*32);
			int duration = (int)(Math.random()*144);
			int exhale = (int)(Math.random()*60);
			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);
			boolean combinationInferred = isInferredSafe(distance, duration, exhale);
			if(combinationDerived == combinationInferred) {
				correctInferrences++;
			}
			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);
		}
		return correctInferrences;
	}
	
	public static void printGeneratedCombinationInferredSafety() {
		 int distance = (int)(Math.random()*32);
		 int duration = (int)(Math.random()*144);
		 int exhale = (int)(Math.random()*60);

		 boolean inferredResult = isInferredSafe(distance, duration, exhale);
		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);
	}
	public static void printGivenAndGeneratedCombinationsInferredSafety() {
		printGivenCombinations();
		for(int i = 0; i < tenRepetitions; i++) {
			printGeneratedCombinationInferredSafety();
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="659" _type="PauseCommand" date="Thu May 05 00:45:59 EDT 2022" range="2m-5m" starttimestamp="1651724647535" timestamp="1311877">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[136662]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="660" _type="MoveCaretCommand" caretOffset="1276" date="Thu May 05 00:45:59 EDT 2022" docOffset="1384" starttimestamp="1651724647535" timestamp="1312076" />
  <Command __id="658" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:45:59 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9036" docExpressionCount="800" docLength="11103" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1311877">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶import java.util.ArrayList;¶import java.util.List;¶import a2.ClassifierFactory;¶import gradingTools.comp524f20.assignment1.WekaUtil;¶¶¶¶public class SocialDistancing {¶	/*	public static void main(String[] args) {¶		System.out.println("Yo");¶	}¶	 */	¶	static final int smallDistance = 6;¶	static final int mediumDistance = 13;¶	static final int largeDistance = 27;¶	¶	static final int smallDuration = 15;¶	static final int mediumDuration = 30;¶	static final int largeDuration = 120;¶	¶	static final int smallExhale = 10;¶	static final int mediumExhale = 30;¶	static final int largeExhale = 50;¶	¶	static int tenRepetitions = 10;¶	/**¶	If the combination of the method parameters is safe, based on the given data, the function¶	returns true. Otherwise, it returns false.¶	*/	¶	public static boolean isGivenSafe(int distance, int duration, int exhale) {¶		if(distance == smallDistance) { 					//small distance¶			if(duration == mediumDuration) {							//med duration¶				if(exhale == smallExhale) {					//small exhale¶					return true;¶				}¶			} else if (duration == smallDuration) {					//small duration¶				if(exhale == mediumExhale) {					//med exhale¶					return true;¶				}¶			}	¶		}else if(distance == mediumDistance) {							//med distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			} else if(duration == smallDuration) {						//small duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			}else if(duration == largeDuration) {						//large duration¶				if(exhale == smallExhale) {						//small exhale¶					return true;¶				}¶			}¶		}else if(distance == largeDistance) {							//large distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			} else if (duration == largeDuration) {					//large duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			}¶		}¶		return false;¶	}¶	/* 	higher distance are safe, so interpolate low (can have 0)¶		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE¶	*/¶	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {¶		¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);¶		¶	}¶	public static boolean isInterpolatedSafe(int distance, int duration) {¶		//exhalation level set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);¶	}¶	public static boolean isInterpolatedSafe(int distance) {¶		//duration and exhalation levels set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		return isInterpolatedSafe(interpolatedDistance, mediumDuration);¶	}¶	public static boolean isDerivedSafe (int distance, int duration, int exhale) {¶		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx¶			return true;¶		}¶		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx¶			return true;¶		}¶		return false;¶	}¶	¶	public static void printGivenCombinations() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶	}¶	public static void printGeneratedCombinationDerivedSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);¶	}¶	public static void printGivenAndGeneratedCombinationsDerivedSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationDerivedSafety();¶		}¶	}¶	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		List<Integer[]> list = new ArrayList<Integer[]>();¶		if (interpolatedExhale < 0) {return list;}¶		if (interpolatedExhale == smallExhale) { 								//small exhale¶			 Integer[] a1 = {6,30};¶			 Integer[] a2 = {13,120};¶			list.add(a1);¶			list.add(a2);¶			return list;¶		} else if (interpolatedExhale == mediumExhale) {			//med exhale¶			 Integer[] a1 = {13,30};¶			 Integer[] a2 = {27,120};¶			 Integer[] a3 = {6,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			list.add(2, a3);¶			return list;¶		} else if (interpolatedExhale == largeExhale) {						//large exhale¶			 Integer[] a1 = {27,30};¶			 Integer[] a2 = {13,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			return list;¶		};¶		return list;¶	}¶	public static void printSafeDistancesAndDurations(int exhale) {¶		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);¶		System.out.print(exhale + ",[");¶		for (int i = 0; i < generatedList.size(); i++) {¶			System.out.print("{");¶			for (int jay = 0; jay < generatedList.get(i).length; jay++) {¶				System.out.print(generatedList.get(i)[jay]);¶				if (jay != generatedList.get(i).length - 1) {¶					System.out.print(",");¶				}¶			}¶			System.out.print("}");¶		}¶		System.out.print("]");¶		System.out.print("\n");¶	}¶	/**¶	  low interpolation to a sequence of values is either an element of the sequence or zero.¶	  If higher values of the parameter are safer, then it is interpolated low. ¶	 */¶	public static int distanceLowInterpolation(int distance) {¶		//low interpolation to a sequence of values is either an element of the sequence or zero¶		//If higher values of the parameter are safer, then it is interpolated low¶		int interpolatedDistance;¶		if (distance < smallDistance) {					//distance interpolation¶			interpolatedDistance = 0;¶		} else if(distance < mediumDistance) {¶			interpolatedDistance = smallDistance;¶		} else if(distance < largeDistance) {¶			interpolatedDistance = mediumDistance;¶		} else {¶			interpolatedDistance = largeDistance;¶		}¶		return interpolatedDistance;¶	}¶	/**¶	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	¶	public static int durationHighInterpolation(int duration) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedDuration;¶		if (duration > largeDuration) {					//duration interpolation¶			interpolatedDuration = Integer.MAX_VALUE;¶		} else if(duration > mediumDuration) {¶			interpolatedDuration = largeDuration;¶		} else if(duration > smallDuration) {¶			interpolatedDuration = mediumDuration;¶		} else {¶			interpolatedDuration = smallDuration;¶		}¶		return interpolatedDuration;¶	}	¶	/**¶	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels¶	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	public static int exhaleHighInterpolation(int exhalation) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedExhalation;¶		if (exhalation > largeExhale) {						//exhale interpolation¶			interpolatedExhalation = Integer.MAX_VALUE;¶		} else if(exhalation > mediumExhale) {¶			interpolatedExhalation = largeExhale;¶		} else if(exhalation > smallExhale) {¶			interpolatedExhalation = mediumExhale;¶		} else {¶			interpolatedExhalation = smallExhale;¶		}¶		return interpolatedExhalation;¶	}¶	¶	public static boolean isInferredSafe(int distance, int duration, int exhalation) {¶		 String TRUE = "true";¶		 String FALSE = "false";¶		 String resultAttributeName = "safe";¶		 String[] resultValueNames = {TRUE, FALSE};¶		 String[] featureNames = {"distance", "duration", "exhalation"};¶		¶		double[] anInputFeatureValues = {distance, duration, exhalation};¶		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);¶		return TRUE.equals(aResultString) ?true:false;¶	}¶	¶	public static int compareSafetyComputations() {¶		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");¶		int correctInferrences = 0;¶		for(int i = 0; i < tenRepetitions; i++) {¶			int distance = (int)(Math.random()*32);¶			int duration = (int)(Math.random()*144);¶			int exhale = (int)(Math.random()*60);¶			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);¶			boolean combinationInferred = isInferredSafe(distance, duration, exhale);¶			if(combinationDerived == combinationInferred) {¶				correctInferrences++;¶			}¶			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);¶		}¶		return correctInferrences;¶	}¶	¶	public static void printGeneratedCombinationInferredSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean inferredResult = isInferredSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);¶	}¶	public static void printGivenAndGeneratedCombinationsInferredSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationInferredSafety();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="662" _type="PauseCommand" date="Thu May 05 00:46:03 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1315473">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3397]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="664" _type="PauseCommand" date="Thu May 05 00:46:11 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1323530">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[8057]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="663" _type="ShellCommand" date="Thu May 05 00:46:11 EDT 2022" starttimestamp="1651724647535" timestamp="1323530" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="666" _type="PauseCommand" date="Thu May 05 00:46:49 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="1361535">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[38005]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="665" _type="ShellCommand" date="Thu May 05 00:46:49 EDT 2022" starttimestamp="1651724647535" timestamp="1361535" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="661" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:46:03 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1315473">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="669" _type="EclipseCommand" commandID="" date="Thu May 05 00:47:18 EDT 2022" starttimestamp="1651724647535" timestamp="1390602" />
  <Command __id="671" _type="EclipseCommand" commandID="" date="Thu May 05 00:47:18 EDT 2022" starttimestamp="1651724647535" timestamp="1390604" />
  <Command __id="667" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:47:05 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1378376">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="673" _type="PauseCommand" date="Thu May 05 00:47:19 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="1392015">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1411]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="674" _type="MoveCaretCommand" caretOffset="1276" date="Thu May 05 00:47:19 EDT 2022" docOffset="1384" starttimestamp="1651724647535" timestamp="1392139" />
  <Command __id="676" _type="PauseCommand" date="Thu May 05 00:47:22 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1395013">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2874]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="675" _type="ShellCommand" date="Thu May 05 00:47:22 EDT 2022" starttimestamp="1651724647535" timestamp="1395013" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="678" _type="PauseCommand" date="Thu May 05 00:47:37 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="1409966">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14953]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="677" _type="ShellCommand" date="Thu May 05 00:47:37 EDT 2022" starttimestamp="1651724647535" timestamp="1409966" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="679" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:47:37 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1410162" type="Run" />
  <Command __id="680" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:47:37 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1410162" type="Run" />
  <Command __id="682" _type="PauseCommand" date="Thu May 05 00:47:41 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1413841">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3679]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="681" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Thu May 05 00:47:41 EDT 2022" starttimestamp="1651724647535" timestamp="1413841" />
  <Command __id="683" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:47:41 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1414238" type="Run" />
  <Command __id="684" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:47:41 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1414238" type="Run" />
  <Command __id="686" _type="PauseCommand" date="Thu May 05 00:47:45 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1417897">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3659]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="685" _type="ShellCommand" date="Thu May 05 00:47:45 EDT 2022" starttimestamp="1651724647535" timestamp="1417897" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="688" _type="PauseCommand" date="Thu May 05 00:47:47 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1420320">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2423]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="687" _type="ConsoleOutput" date="Thu May 05 00:47:47 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1420320" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13
Test execution time (ms):21
Test execution time (ms):33
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@4f1d6bbc . Results may change."), Diff(INSERT,"Test execution time (ms):13¶Test execution time (ms):21¶Test execution time (ms):33¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="689" _type="ConsoleOutput" date="Thu May 05 00:47:48 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1420489" type="ConsoleOutput">
    <outputString><![CDATA[1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.28125 the minimum required accuracy threshold should be 0.8
0.28125
F21A2IsInferredSafeTest did not pass completely:view console output%0.7699827921395543

Number of traces > 600  turning tracing off
Test execution time (ms):80
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
12,54,43,true
28,33,17,true
14,1,26,true
5,61,56,true
17,91,28,true
3,79,9,true
23,93,57,true
15,103,31,true
10,128,17,true
20,32,39,true
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
0,38,29,true
18,50,11,true
29,13,0,true
12,40,9,true
1,44,36,true
15,72,57,true
6,0,30,true
19,49,24,true
27,18,18,true
31,118,8,true
Test execution time (ms):31
Distance,Duration,Exhalation,Derived,Inferred
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13¶Test execution time (ms):21¶Test execution time (ms):33"), Diff(INSERT,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.28125 the minimum required accuracy threshold should be 0.8¶0.28125¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7699827921395543¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):80¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶12,54,43,true¶28,33,17,true¶14,1,26,true¶5,61,56,true¶17,91,28,true¶3,79,9,true¶23,93,57,true¶15,103,31,true¶10,128,17,true¶20,32,39,true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶0,38,29,true¶18,50,11,true¶29,13,0,true¶12,40,9,true¶1,44,36,true¶15,72,57,true¶6,0,30,true¶19,49,24,true¶27,18,18,true¶31,118,8,true"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(INSERT,"3"), Diff(EQUAL,"1¶"), Diff(INSERT,"Distance,Duration,Exhalation,Derived,Inferred¶")]]]></diff>
  </Command>
  <Command __id="690" _type="ConsoleOutput" date="Thu May 05 00:47:48 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1420620" type="ConsoleOutput">
    <outputString><![CDATA[6,71,7,false,true
22,101,26,false,true
27,69,39,false,true
10,58,41,false,true
9,66,1,false,true
29,108,49,false,true
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
4,35,5,false,true
18,67,58,false,true
1,37,14,false,true
25,113,13,false,true
28,69,30,true,true
25,140,33,false,true
27,6,7,true,true
26,51,26,false,true
25,143,52,false,true
3,95,59,false,true
Distance,Duration,Exhalation,Derived,Inferred
6,45,42,false,true
20,75,39,false,true
31,21,22,true,true
25,84,34,false,true
1,87,57,false,true
30,134,46,false,true
22,1,8,true,true
30,91,40,false,true
28,114,11,true,true
31,40,10,true,true
Distance,Duration,Exhalation,Derived,Inferred
17,55,34,false,true
11,40,2,false,true
14,96,20,false,true
14,13,17,true,true
20,48,27,false,true
22,10,31,true,true
12,126,3,false,true
23,11,15,true,true
20,137,16,false,true
15,13,32,true,true
Distance,Duration,Exhalation,Derived,Inferred
9,6,17,true,true
14,103,47,false,true
28,35,56,false,true
14,16,6,true,true
26,59,0,true,true
8,90,3,false,true
26,90,35,false,true
6,99,32,false,true
25,6,24,true,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.28125 the minimum required accuracy threshold should be 0.8¶0.28125¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7699827921395543¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):80"), Diff(INSERT,"6,71,7,false,true¶22,101,26,false,true¶27,69,39,false,true¶10,58,41,false,true¶9,66,1,false,true¶29,108,49,false,true"), Diff(EQUAL,"¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10"), Diff(INSERT,"Derived,Inferred¶4,35,5,false,true¶18,67,58,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"27,30,50"), Diff(INSERT,"1,37,14,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"13,15,50,true¶13,120"), Diff(INSERT,"25,113,13,false,true¶28,69,30,true,true¶25"), Diff(EQUAL,",1"), Diff(INSERT,"4"), Diff(EQUAL,"0,"), Diff(DELETE,"true¶27,120,30,true¶6,15,30,true¶----------¶12,54,43"), Diff(INSERT,"33,false,true¶27,6,7,true,true¶26,51,26,false,true¶25,143,52,false,true¶3,95,59,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶6,45,42,false"), Diff(EQUAL,",true¶2"), Diff(DELETE,"8,33,17,true¶14,1,26"), Diff(INSERT,"0,75,39,false,true¶31,21,22,true"), Diff(EQUAL,",true¶"), Diff(INSERT,"2"), Diff(EQUAL,"5,"), Diff(DELETE,"61,56,true¶17,91,28,true¶3,79,9,true¶23,93,57,true¶15,103,31,true¶10,128,17,true¶20,32,39"), Diff(INSERT,"84,34,false,true¶1,87,57,false,true¶30,134,46,false,true¶22,1,8,true,true¶30,91,40,false,true¶28,114,11,true,true¶31,40,10,true"), Diff(EQUAL,",true¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50"), Diff(INSERT,"Derived,Inferred¶17,55,34,false,true¶11,40,2,false,true¶14,96,20,false"), Diff(EQUAL,",true¶"), Diff(INSERT,"14,"), Diff(EQUAL,"13,1"), Diff(DELETE,"5,50"), Diff(INSERT,"7,true,true¶20,48,27,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"13"), Diff(INSERT,"22"), Diff(EQUAL,",1"), Diff(DELETE,"2"), Diff(EQUAL,"0,"), Diff(DELETE,"10"), Diff(INSERT,"31,true"), Diff(EQUAL,",true¶"), Diff(INSERT,"1"), Diff(EQUAL,"2"), Diff(DELETE,"7"), Diff(EQUAL,",12"), Diff(DELETE,"0"), Diff(INSERT,"6"), Diff(EQUAL,",3"), Diff(DELETE,"0"), Diff(INSERT,",false"), Diff(EQUAL,",true¶"), Diff(DELETE,"6,15,30,true¶----------¶0,38,29,true¶18,50,11,true¶29,13,0"), Diff(INSERT,"23,11,15,true,true¶20,137,16,false,true¶15,13,32,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶9,6,17,true"), Diff(EQUAL,",true¶1"), Diff(DELETE,"2,40,9,true¶1,44,36,true¶15,72,57"), Diff(INSERT,"4,103,47,false,true¶28,35,56,false,true¶14,16,6,true"), Diff(EQUAL,",true¶"), Diff(INSERT,"2"), Diff(EQUAL,"6,"), Diff(DELETE,"0,3"), Diff(INSERT,"59,"), Diff(EQUAL,"0,true"), Diff(DELETE,"¶19,49,24,true¶27,18,18,true¶31,118,8,true¶Test execution time (ms):31¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(INSERT,",true¶8,90,3,false,true¶26,90,35,false,true¶6,99,32,false,true¶25,6,24,true,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="692" _type="PauseCommand" date="Thu May 05 00:48:00 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="1432575">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11955]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="699" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:48:24 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1456921" type="Run" />
  <Command __id="701" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:48:24 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1456922" type="Run" />
  <Command __id="703" _type="PauseCommand" date="Thu May 05 00:48:28 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1460660">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3738]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="702" _type="ShellCommand" date="Thu May 05 00:48:28 EDT 2022" starttimestamp="1651724647535" timestamp="1460660" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="705" _type="PauseCommand" date="Thu May 05 00:48:30 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1462878">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2218]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="704" _type="ConsoleOutput" date="Thu May 05 00:48:30 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1462878" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14
Test execution time (ms):22
Test execution time (ms):35
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"6,71,7,false,true¶22,101,26,false,true¶27,69,39,false,true¶10,58,41,false,true¶9,66,1,false,true¶29,108,49,false,true¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,Derived,Inferred¶4,35,5,false,true¶18,67,58,false,true¶1,37,14,false,true¶25,113,13,false,true¶28,69,30,true,true¶25,140,33,false,true¶27,6,7,true,true¶26,51,26,false,true¶25,143,52,false,true¶3,95,59,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶6,45,42,false,true¶20,75,39,false,true¶31,21,22,true,true¶25,84,34,false,true¶1,87,57,false,true¶30,134,46,false,true¶22,1,8,true,true¶30,91,40,false,true¶28,114,11,true,true¶31,40,10,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶17,55,34,false,true¶11,40,2,false,true¶14,96,20,false,true¶14,13,17,true,true¶20,48,27,false,true¶22,10,31,true,true¶12,126,3,false,true¶23,11,15,true,true¶20,137,16,false,true¶15,13,32,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶9,6,17,true,true¶14,103,47,false,true¶28,35,56,false,true¶14,16,6,true,true¶26,59,0,true,true¶8,90,3,false,true¶26,90,35,false,true¶6,99,32,false,true¶25,6,24,true,true"), Diff(INSERT,"Test execution time (ms):14¶Test execution time (ms):22¶Test execution time (ms):35¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="706" _type="ConsoleOutput" date="Thu May 05 00:48:30 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1462987" type="ConsoleOutput">
    <outputString><![CDATA[1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.125 the minimum required accuracy threshold should be 0.8
0.125
F21A2IsInferredSafeTest did not pass completely:view console output%0.7048786254728877

Number of traces > 600  turning tracing off
Test execution time (ms):96
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
25,52,39,true
24,89,48,true
7,68,19,true
18,136,8,true
11,139,59,true
7,143,6,true
18,122,22,true
3,49,15,true
3,78,32,true
0,88,38,true
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
15,62,30,true
0,127,17,true
9,107,25,true
31,46,59,true
3,12,18,true
14,91,31,true
20,83,49,true
31,128,44,true
30,121,34,true
21,125,47,true
Test execution time (ms):31
Distance,Duration,Exhalation,Derived,Inferred
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):14¶Test execution time (ms):22¶Test execution time (ms):35"), Diff(INSERT,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.125 the minimum required accuracy threshold should be 0.8¶0.125¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7048786254728877¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):96¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶25,52,39,true¶24,89,48,true¶7,68,19,true¶18,136,8,true¶11,139,59,true¶7,143,6,true¶18,122,22,true¶3,49,15,true¶3,78,32,true¶0,88,38,true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶15,62,30,true¶0,127,17,true¶9,107,25,true¶31,46,59,true¶3,12,18,true¶14,91,31,true¶20,83,49,true¶31,128,44,true¶30,121,34,true¶21,125,47,true"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(INSERT,"3"), Diff(EQUAL,"1¶"), Diff(INSERT,"Distance,Duration,Exhalation,Derived,Inferred¶")]]]></diff>
  </Command>
  <Command __id="707" _type="ConsoleOutput" date="Thu May 05 00:48:30 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1463071" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
17,76,9,true,true
8,37,28,false,true
19,108,20,false,true
23,126,45,false,true
4,82,23,false,true
14,59,4,true,true
14,112,9,true,true
11,18,32,false,true
31,56,44,false,true
2,54,37,false,true
Distance,Duration,Exhalation,Derived,Inferred
5,48,11,false,true
12,65,52,false,true
0,118,0,false,true
23,34,28,false,true
22,75,38,false,true
15,14,54,false,true
27,23,53,false,true
2,135,9,false,true
7,43,10,false,true
15,59,56,false,true
Distance,Duration,Exhalation,Derived,Inferred
19,50,45,false,true
31,89,44,false,true
8,16,19,false,true
1,34,40,false,true
5,114,45,false,true
8,46,41,false,true
17,138,13,false,true
15,131,21,false,true
25,20,15,true,true
10,126,55,false,true
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
0,73,15,false,true
19,119,12,false,true
15,132,38,false,true
18,80,30,false,true
8,5,33,false,true
19,142,23,false,true
4,51,46,false,true
5,99,7,false,true
11,92,46,false,true
11,141,0,false,true
Distance,Duration,Exhalation,Derived,Inferred
23,104,13,false,true
2,135,40,false,true
19,106,33,false,true
31,7,19,true,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.125 the minimum required accuracy threshold should be 0.8¶0.125¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7048786254728877¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):96¶Number of traces > 600  turning tracing off"), Diff(INSERT,"Distance,Duration,Exhalation,Derived,Inferred¶17,76,9,true,true¶8,37,28,false,true¶19,108,20,false,true¶23,126,45,false,true¶4,82,23,false,true¶14,59,4,true,true¶14,112,9,true,true¶11,18,32,false,true¶31,56,44,false,true¶2,54,37,false,true"), Diff(EQUAL,"¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶25,52,39,true¶24,89,48,true¶7,68,19"), Diff(INSERT,"Derived,Inferred¶5,48,11,false,true¶12,65,52,false,true¶0,118,0,false,true¶23,34,28,false,true¶22,75,38,false"), Diff(EQUAL,",true¶1"), Diff(DELETE,"8"), Diff(INSERT,"5"), Diff(EQUAL,",1"), Diff(DELETE,"36,8,true¶11,139,59"), Diff(INSERT,"4,54,false,true¶27,23,53,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,",1"), Diff(DELETE,"43,6,true¶18,122,22"), Diff(INSERT,"35,9,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"3"), Diff(INSERT,"7"), Diff(EQUAL,",4"), Diff(DELETE,"9"), Diff(INSERT,"3"), Diff(EQUAL,",1"), Diff(DELETE,"5,true¶3,78,32,true¶0,88,38"), Diff(INSERT,"0,false,true¶15,59,56,false"), Diff(EQUAL,",true¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10"), Diff(INSERT,"Derived,Inferred¶19,50,45,false,true¶31,89,44,false,true¶8,16,19,false,true¶1,34,40,false,true¶5,114,45,false,true¶8,46,41,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"7,1"), Diff(DELETE,"20,30"), Diff(INSERT,"38,13,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"6,"), Diff(EQUAL,"15,"), Diff(DELETE,"30,true¶----------¶15,62,30"), Diff(INSERT,"131,21,false,true¶25,20,15,true"), Diff(EQUAL,",true¶"), Diff(INSERT,"1"), Diff(EQUAL,"0,12"), Diff(DELETE,"7,17,true¶9,107,25,true¶31,46,59"), Diff(INSERT,"6,55,false,true¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,Derived,Inferred¶0,73,15,false,true¶19,119,12,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"3"), Diff(INSERT,"15"), Diff(EQUAL,",1"), Diff(INSERT,"3"), Diff(EQUAL,"2,"), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"8,"), Diff(INSERT,"false,"), Diff(EQUAL,"true¶1"), Diff(DELETE,"4,91,31,true¶20,83,49"), Diff(INSERT,"8,80,30,false,true¶8,5,33,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"31,128,44,true¶30,121,34,true¶21,125,47,true¶Test execution time (ms):31¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(INSERT,"19,142,23,false,true¶4,51,46,false,true¶5,99,7,false,true¶11,92,46,false,true¶11,141,0,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶23,104,13,false,true¶2,135,40,false,true¶19,106,33,false,true¶31,7,19,true,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="708" _type="ConsoleOutput" date="Thu May 05 00:48:30 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1463128" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
22,119,24,false,true
11,99,11,false,true
3,110,9,false,true
2,95,29,false,true
26,135,7,false,true
5,54,56,false,true
8,57,40,false,true
5,75,59,false,true
22,125,57,false,true
9,48,32,false,true
Distance,Duration,Exhalation,Derived,Inferred
7,134,28,false,true
10,0,19,true,true
8,120,45,false,true
0,100,58,false,true
24,125,49,false,true
22,0,39,true,true
27,122,30,false,true
13,124,16,false,true
31,78,35,false,true
8,113,52,false,true
Test execution time (ms):136
Number of traces > 600  turning tracing off
Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"17,76,9,true,true¶8,37,28"), Diff(INSERT,"22,119,24,false,true¶11,99,11"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"19,108,20"), Diff(INSERT,"3,110,9"), Diff(EQUAL,",false,true¶2"), Diff(DELETE,"3,126,45"), Diff(INSERT,",95,29"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"4,82,23"), Diff(INSERT,"26,135,7"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"14,59,4,true,true¶14,112,9,true,true¶11,18,32"), Diff(INSERT,"5,54,56,false,true¶8,57,40,false,true¶5,75,59"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"31,56,44"), Diff(INSERT,"22,125,57"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"2,54"), Diff(INSERT,"9,48"), Diff(EQUAL,",3"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,",false,true¶Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"5,48,11"), Diff(INSERT,"7,134,28"), Diff(EQUAL,",false,true¶1"), Diff(DELETE,"2,65,52,false,true¶0,118,0,false,true¶23,34,28,false,true¶22,75,38,false,true¶15,14,54"), Diff(INSERT,"0,0,19,true,true¶8,120,45"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"27,23"), Diff(INSERT,"0,100"), Diff(EQUAL,",5"), Diff(DELETE,"3"), Diff(INSERT,"8"), Diff(EQUAL,",false,true¶2"), Diff(INSERT,"4"), Diff(EQUAL,",1"), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,"5,"), Diff(INSERT,"4"), Diff(EQUAL,"9,false,true¶"), Diff(DELETE,"7,43,10,false,true¶15,59,56,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶19,50,45,false,true¶31,89,44,false,true¶8,16,19"), Diff(INSERT,"22,0,39,true,true¶27,122,30,false,true¶13,124,16"), Diff(EQUAL,",false,true¶"), Diff(INSERT,"3"), Diff(EQUAL,"1,"), Diff(DELETE,"34,40"), Diff(INSERT,"78,35"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"5"), Diff(INSERT,"8"), Diff(EQUAL,",11"), Diff(DELETE,"4,45"), Diff(INSERT,"3,52"), Diff(EQUAL,",false,true¶"), Diff(DELETE,"8,46,41,false,true¶17,138,13,false,true¶15,131,21,false,true¶25,20,15,true,true¶10,126,55,false,true¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,Derived,Inferred¶0,73,15,false,true¶19,119,12,false,true¶15,132,38,false,true¶18,80,30,false,true¶8,5,33,false,true¶19,142,23,false,true¶4,51,46,false,true¶5,99,7,false,true¶11,92,46,false,true¶11,141,0,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶23,104,13,false,true¶2,135,40,false,true¶19,106,33,false,true¶31,7,19,true,true"), Diff(INSERT,"Test execution time (ms):136¶Number of traces > 600  turning tracing off¶Test execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="710" _type="PauseCommand" date="Thu May 05 00:48:32 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="1465118">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1990]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="709" _type="ConsoleOutput" date="Thu May 05 00:48:32 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1465118" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@71513cd9 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Distance,Duration,Exhalation,Derived,Inferred¶22,119,24,false,true¶11,99,11,false,true¶3,110,9,false,true¶2,95,29,false,true¶26,135,7,false,true¶5,54,56,false,true¶8,57,40,false,true¶5,75,59,false,true¶22,125,57,false,true¶9,48,32,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶7,134,28,false,true¶10,0,19,true,true¶8,120,45,false,true¶0,100,58,false,true¶24,125,49,false,true¶22,0,39,true,true¶27,122,30,false,true¶13,124,16,false,true¶31,78,35,false,true¶8,113,52,false,true¶Test execution time (ms):136¶Number of traces > 600  turning tracing off¶Test execution time (ms):9"), Diff(INSERT,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@71513cd9 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="712" _type="PauseCommand" date="Thu May 05 00:48:41 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1473878">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8760]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="714" _type="EclipseCommand" commandID="" date="Thu May 05 00:48:44 EDT 2022" starttimestamp="1651724647535" timestamp="1476554" />
  <Command __id="716" _type="EclipseCommand" commandID="" date="Thu May 05 00:48:44 EDT 2022" starttimestamp="1651724647535" timestamp="1476556" />
  <Command __id="717" _type="ShellCommand" date="Thu May 05 00:48:44 EDT 2022" starttimestamp="1651724647535" timestamp="1477315" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="719" _type="PauseCommand" date="Thu May 05 00:48:48 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1481173">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3858]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="722" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:48:52 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1485151" type="Run" />
  <Command __id="724" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:48:52 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1485151" type="Run" />
  <Command __id="726" _type="PauseCommand" date="Thu May 05 00:48:56 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1488799">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3648]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="725" _type="ShellCommand" date="Thu May 05 00:48:56 EDT 2022" starttimestamp="1651724647535" timestamp="1488799" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="728" _type="PauseCommand" date="Thu May 05 00:48:58 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="1490652">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1853]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="727" _type="ConsoleOutput" date="Thu May 05 00:48:58 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1490652" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):12
Test execution time (ms):22
Test execution time (ms):34
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@71513cd9 . Results may change."), Diff(INSERT,"Test execution time (ms):12¶Test execution time (ms):22¶Test execution time (ms):34¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="729" _type="ConsoleOutput" date="Thu May 05 00:48:58 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1490820" type="ConsoleOutput">
    <outputString><![CDATA[1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.0625 the minimum required accuracy threshold should be 0.8
0.0625
F21A2IsInferredSafeTest did not pass completely:view console output%0.678836958806221

Number of traces > 600  turning tracing off
Test execution time (ms):80
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
12,19,41,true
29,87,54,true
22,52,29,true
21,68,36,true
20,128,55,true
0,88,52,true
12,75,55,true
31,74,9,true
13,110,23,true
16,111,19,true
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
21,12,28,true
14,6,9,true
17,24,0,true
21,115,51,true
27,12,59,true
23,43,45,true
12,59,56,true
22,105,23,true
24,110,31,true
6,126,10,true
Test execution time (ms):32
Distance,Duration,Exhalation,Derived,Inferred
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):12¶Test execution time (ms):22¶Test execution time (ms):34¶Test execution time (ms):1"), Diff(INSERT,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.0625 the minimum required accuracy threshold should be 0.8¶0.0625¶F21A2IsInferredSafeTest did not pass completely:view console output%0.678836958806221¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):80¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶12,19,41,true¶29,87,54,true¶22,52,29,true¶21,68,36,true¶20,128,55,true¶0,88,52,true¶12,75,55,true¶31,74,9,true¶13,110,23,true¶16,111,19,true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶21,12,28,true¶14,6,9,true¶17,24,0,true¶21,115,51,true¶27,12,59,true¶23,43,45,true¶12,59,56,true¶22,105,23,true¶24,110,31,true¶6,126,10,true¶Test execution time (ms):32¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="730" _type="ConsoleOutput" date="Thu May 05 00:48:58 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1490939" type="ConsoleOutput">
    <outputString><![CDATA[19,27,21,true,true
31,120,13,true,true
23,10,8,true,true
8,85,29,false,true
5,123,38,false,true
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
14,108,53,false,true
9,35,47,false,true
26,21,39,false,true
26,9,45,true,true
26,71,23,false,true
14,41,25,false,true
13,117,28,false,true
18,49,25,false,true
29,127,37,false,true
7,109,3,false,true
Distance,Duration,Exhalation,Derived,Inferred
6,114,6,false,true
15,40,10,true,true
27,89,19,true,true
8,38,47,false,true
19,42,36,false,true
3,132,3,false,true
9,5,13,true,true
7,140,40,false,true
13,55,26,false,true
20,7,4,true,true
Distance,Duration,Exhalation,Derived,Inferred
24,56,55,false,true
16,23,30,true,true
0,35,24,false,true
13,122,50,false,true
18,128,1,false,true
26,58,23,false,true
12,30,24,false,true
31,54,30,true,true
19,69,54,false,true
21,65,26,false,true
Distance,Duration,Exhalation,Derived,Inferred
23,29,30,true,true
6,81,5,false,true
7,57,9,false,true
14,25,18,true,true
0,96,18,false,true
30,6,5,true,true
16,91,40,false,true
27,19,56,false,true
19,68,1,true,true
17,130,29,false,true
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"1"), Diff(DELETE,".0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.0625 the minimum required accuracy threshold should be 0.8¶0.0625¶F21A2IsInferredSafeTest did not pass completely:view console output%0.678836958806221¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):80"), Diff(INSERT,"9,27,21,true,true¶31,120,13,true,true¶23,10,8,true,true¶8,85,29,false,true¶5,123,38,false,true"), Diff(EQUAL,"¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30"), Diff(INSERT,"Derived,Inferred¶14,108,53,false,true¶9,35,47,false,true¶26,21,39,false"), Diff(EQUAL,",true¶"), Diff(INSERT,"2"), Diff(EQUAL,"6,"), Diff(DELETE,"30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10"), Diff(INSERT,"9,45,true,true¶26,71,23,false,true¶14,41,25,false,true¶13,117,28,false,true¶18,49,25,false"), Diff(EQUAL,",true¶2"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,",12"), Diff(DELETE,"0"), Diff(INSERT,"7"), Diff(EQUAL,",3"), Diff(DELETE,"0"), Diff(INSERT,"7,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,",1"), Diff(DELETE,"5,30,true¶----------¶12,19,41"), Diff(INSERT,"09,3,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶6,114,6,false,true¶15,40,10,true"), Diff(EQUAL,",true¶2"), Diff(DELETE,"9"), Diff(INSERT,"7"), Diff(EQUAL,",8"), Diff(DELETE,"7,54,true¶22,52,29,true¶21,68,36"), Diff(INSERT,"9,19,true,true¶8,38,47,false,true¶19,42,36,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"20,128,55,true¶0,88,52,true¶12,75,55,true¶31,74,9,true¶13,110,23,true¶16,111,19"), Diff(INSERT,"3,132,3,false,true¶9,5,13,true,true¶7,140,40,false,true¶13,55,26,false,true¶20,7,4,true"), Diff(EQUAL,",true¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30"), Diff(INSERT,"Derived,Inferred¶24,56,55,false"), Diff(EQUAL,",true¶"), Diff(INSERT,"1"), Diff(EQUAL,"6,"), Diff(DELETE,"30,10"), Diff(INSERT,"23,30,true"), Diff(EQUAL,",true¶"), Diff(DELETE,"27,30,50"), Diff(INSERT,"0,35,24,false"), Diff(EQUAL,",true¶13,1"), Diff(DELETE,"5"), Diff(INSERT,"22"), Diff(EQUAL,",50,"), Diff(INSERT,"false,"), Diff(EQUAL,"true¶1"), Diff(DELETE,"3"), Diff(INSERT,"8"), Diff(EQUAL,",12"), Diff(DELETE,"0"), Diff(INSERT,"8"), Diff(EQUAL,",1"), Diff(DELETE,"0"), Diff(INSERT,",false"), Diff(EQUAL,",true¶2"), Diff(DELETE,"7,"), Diff(INSERT,"6,58,23,false,true¶"), Diff(EQUAL,"12"), Diff(DELETE,"0"), Diff(EQUAL,",30,"), Diff(INSERT,"24,false,"), Diff(EQUAL,"true¶"), Diff(DELETE,"6,15"), Diff(INSERT,"31,54"), Diff(EQUAL,",30,true"), Diff(DELETE,"¶----------¶21,12,28,true¶14,6,9,true¶17,24,0,true¶21,115,51"), Diff(INSERT,",true¶19,69,54,false,true¶21,65,26,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶23,29,30,true,true¶6,81,5,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"2"), Diff(EQUAL,"7,"), Diff(DELETE,"12,59,true¶23,43,45,true¶12,59,56,true¶22,105,23,true¶24,110,31,true¶6,126,10,true¶Test execution time (ms):32¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(INSERT,"57,9,false,true¶14,25,18,true,true¶0,96,18,false,true¶30,6,5,true,true¶16,91,40,false,true¶27,19,56,false,true¶19,68,1,true,true¶17,130,29,false,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="732" _type="PauseCommand" date="Thu May 05 00:49:02 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1494714">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3775]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="731" _type="ConsoleOutput" date="Thu May 05 00:49:02 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1494714" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@260d072a . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"19,27,21,true,true¶31,120,13,true,true¶23,10,8,true,true¶8,85,29,false,true¶5,123,38,false,true¶Number of traces > 600  tur"), Diff(INSERT,"Re-run"), Diff(EQUAL,"ning t"), Diff(INSERT,"est g"), Diff(EQUAL,"ra"), Diff(DELETE,"c"), Diff(INSERT,"d"), Diff(EQUAL,"ing"), Diff(DELETE," off¶Distance,Duration,Exhalation,Derived,Inferred¶14,108,53,false,true¶9,35,47,false,true¶26,21,39,false,true¶26,9,45,true,true¶26,71,23,false,true¶14,41,25,false,true¶13,117,28,false,true¶18,49,25,false,true¶29,127,37,false,true¶7,109,3,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶6,114,6,false,true¶15,40,10,true,true¶27,89,19,true,true¶8,38,47,false,true¶19,42,36,false,true¶3,132,3,false,true¶9,5,13,true,true¶7,140,40,false,true¶13,55,26,false,true¶20,7,4,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶24,56,55,false,true¶16,23,30,true,true¶0,35,24,false,true¶13,122,50,false,true¶18,128,1,false,true¶26,58,23,false,true¶12,30,24,false,true¶31,54,30,true,true¶19,69,54,false,true¶21,65,26,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶23,29,30,true,true¶6,81,5,false,true¶7,57,9,false,true¶14,25,18,true,true¶0,96,18,false,true¶30,6,5,true,true¶16,91,40,false,true¶27,19,56,false,true¶19,68,1,true,true¶17,130,29,false,true"), Diff(INSERT,"Tools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@260d072a . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="734" _type="PauseCommand" date="Thu May 05 00:49:03 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="1496264">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1549]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="733" _type="ConsoleOutput" date="Thu May 05 00:49:03 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1496263" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@260d072a . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@260d072a . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="736" _type="PauseCommand" date="Thu May 05 00:49:16 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="1508565">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12302]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="735" _type="ConsoleOutput" date="Thu May 05 00:49:16 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1508565" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@260d072a . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@260d072a . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="738" _type="PauseCommand" date="Thu May 05 00:49:31 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="1523540">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14975]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="737" _type="ShellCommand" date="Thu May 05 00:49:31 EDT 2022" starttimestamp="1651724647535" timestamp="1523540" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="740" _type="MoveCaretCommand" caretOffset="1276" date="Thu May 05 00:49:31 EDT 2022" docOffset="1384" starttimestamp="1651724647535" timestamp="1523879" />
  <Command __id="672" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:47:19 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9036" docExpressionCount="800" docLength="11103" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1392015">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶import java.util.ArrayList;¶import java.util.List;¶import a2.ClassifierFactory;¶import gradingTools.comp524f20.assignment1.WekaUtil;¶¶¶¶public class SocialDistancing {¶	/*	public static void main(String[] args) {¶		System.out.println("Yo");¶	}¶	 */	¶	static final int smallDistance = 6;¶	static final int mediumDistance = 13;¶	static final int largeDistance = 27;¶	¶	static final int smallDuration = 15;¶	static final int mediumDuration = 30;¶	static final int largeDuration = 120;¶	¶	static final int smallExhale = 10;¶	static final int mediumExhale = 30;¶	static final int largeExhale = 50;¶	¶	static int tenRepetitions = 10;¶	/**¶	If the combination of the method parameters is safe, based on the given data, the function¶	returns true. Otherwise, it returns false.¶	*/	¶	public static boolean isGivenSafe(int distance, int duration, int exhale) {¶		if(distance == smallDistance) { 					//small distance¶			if(duration == mediumDuration) {							//med duration¶				if(exhale == smallExhale) {					//small exhale¶					return true;¶				}¶			} else if (duration == smallDuration) {					//small duration¶				if(exhale == mediumExhale) {					//med exhale¶					return true;¶				}¶			}	¶		}else if(distance == mediumDistance) {							//med distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			} else if(duration == smallDuration) {						//small duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			}else if(duration == largeDuration) {						//large duration¶				if(exhale == smallExhale) {						//small exhale¶					return true;¶				}¶			}¶		}else if(distance == largeDistance) {							//large distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			} else if (duration == largeDuration) {					//large duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			}¶		}¶		return false;¶	}¶	/* 	higher distance are safe, so interpolate low (can have 0)¶		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE¶	*/¶	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {¶		¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);¶		¶	}¶	public static boolean isInterpolatedSafe(int distance, int duration) {¶		//exhalation level set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);¶	}¶	public static boolean isInterpolatedSafe(int distance) {¶		//duration and exhalation levels set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		return isInterpolatedSafe(interpolatedDistance, mediumDuration);¶	}¶	public static boolean isDerivedSafe (int distance, int duration, int exhale) {¶		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx¶			return true;¶		}¶		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx¶			return true;¶		}¶		return false;¶	}¶	¶	public static void printGivenCombinations() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶	}¶	public static void printGeneratedCombinationDerivedSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);¶	}¶	public static void printGivenAndGeneratedCombinationsDerivedSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationDerivedSafety();¶		}¶	}¶	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		List<Integer[]> list = new ArrayList<Integer[]>();¶		if (interpolatedExhale < 0) {return list;}¶		if (interpolatedExhale == smallExhale) { 								//small exhale¶			 Integer[] a1 = {6,30};¶			 Integer[] a2 = {13,120};¶			list.add(a1);¶			list.add(a2);¶			return list;¶		} else if (interpolatedExhale == mediumExhale) {			//med exhale¶			 Integer[] a1 = {13,30};¶			 Integer[] a2 = {27,120};¶			 Integer[] a3 = {6,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			list.add(2, a3);¶			return list;¶		} else if (interpolatedExhale == largeExhale) {						//large exhale¶			 Integer[] a1 = {27,30};¶			 Integer[] a2 = {13,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			return list;¶		};¶		return list;¶	}¶	public static void printSafeDistancesAndDurations(int exhale) {¶		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);¶		System.out.print(exhale + ",[");¶		for (int i = 0; i < generatedList.size(); i++) {¶			System.out.print("{");¶			for (int jay = 0; jay < generatedList.get(i).length; jay++) {¶				System.out.print(generatedList.get(i)[jay]);¶				if (jay != generatedList.get(i).length - 1) {¶					System.out.print(",");¶				}¶			}¶			System.out.print("}");¶		}¶		System.out.print("]");¶		System.out.print("\n");¶	}¶	/**¶	  low interpolation to a sequence of values is either an element of the sequence or zero.¶	  If higher values of the parameter are safer, then it is interpolated low. ¶	 */¶	public static int distanceLowInterpolation(int distance) {¶		//low interpolation to a sequence of values is either an element of the sequence or zero¶		//If higher values of the parameter are safer, then it is interpolated low¶		int interpolatedDistance;¶		if (distance < smallDistance) {					//distance interpolation¶			interpolatedDistance = 0;¶		} else if(distance < mediumDistance) {¶			interpolatedDistance = smallDistance;¶		} else if(distance < largeDistance) {¶			interpolatedDistance = mediumDistance;¶		} else {¶			interpolatedDistance = largeDistance;¶		}¶		return interpolatedDistance;¶	}¶	/**¶	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	¶	public static int durationHighInterpolation(int duration) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedDuration;¶		if (duration > largeDuration) {					//duration interpolation¶			interpolatedDuration = Integer.MAX_VALUE;¶		} else if(duration > mediumDuration) {¶			interpolatedDuration = largeDuration;¶		} else if(duration > smallDuration) {¶			interpolatedDuration = mediumDuration;¶		} else {¶			interpolatedDuration = smallDuration;¶		}¶		return interpolatedDuration;¶	}	¶	/**¶	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels¶	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	public static int exhaleHighInterpolation(int exhalation) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedExhalation;¶		if (exhalation > largeExhale) {						//exhale interpolation¶			interpolatedExhalation = Integer.MAX_VALUE;¶		} else if(exhalation > mediumExhale) {¶			interpolatedExhalation = largeExhale;¶		} else if(exhalation > smallExhale) {¶			interpolatedExhalation = mediumExhale;¶		} else {¶			interpolatedExhalation = smallExhale;¶		}¶		return interpolatedExhalation;¶	}¶	¶	public static boolean isInferredSafe(int distance, int duration, int exhalation) {¶		 String TRUE = "true";¶		 String FALSE = "false";¶		 String resultAttributeName = "safe";¶		 String[] resultValueNames = {TRUE, FALSE};¶		 String[] featureNames = {"distance", "duration", "exhalation"};¶		¶		double[] anInputFeatureValues = {distance, duration, exhalation};¶		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);¶		return TRUE.equals(aResultString) ?true:false;¶	}¶	¶	public static int compareSafetyComputations() {¶		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");¶		int correctInferrences = 0;¶		for(int i = 0; i < tenRepetitions; i++) {¶			int distance = (int)(Math.random()*32);¶			int duration = (int)(Math.random()*144);¶			int exhale = (int)(Math.random()*60);¶			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);¶			boolean combinationInferred = isInferredSafe(distance, duration, exhale);¶			if(combinationDerived == combinationInferred) {¶				correctInferrences++;¶			}¶			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);¶		}¶		return correctInferrences;¶	}¶	¶	public static void printGeneratedCombinationInferredSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean inferredResult = isInferredSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);¶	}¶	public static void printGivenAndGeneratedCombinationsInferredSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationInferredSafety();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="695" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:48:00 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1433211">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="713" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:48:41 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1473953">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="739" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:49:31 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9036" docExpressionCount="800" docLength="11103" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1523748">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶import java.util.ArrayList;¶import java.util.List;¶import a2.ClassifierFactory;¶import gradingTools.comp524f20.assignment1.WekaUtil;¶¶¶¶public class SocialDistancing {¶	/*	public static void main(String[] args) {¶		System.out.println("Yo");¶	}¶	 */	¶	static final int smallDistance = 6;¶	static final int mediumDistance = 13;¶	static final int largeDistance = 27;¶	¶	static final int smallDuration = 15;¶	static final int mediumDuration = 30;¶	static final int largeDuration = 120;¶	¶	static final int smallExhale = 10;¶	static final int mediumExhale = 30;¶	static final int largeExhale = 50;¶	¶	static int tenRepetitions = 10;¶	/**¶	If the combination of the method parameters is safe, based on the given data, the function¶	returns true. Otherwise, it returns false.¶	*/	¶	public static boolean isGivenSafe(int distance, int duration, int exhale) {¶		if(distance == smallDistance) { 					//small distance¶			if(duration == mediumDuration) {							//med duration¶				if(exhale == smallExhale) {					//small exhale¶					return true;¶				}¶			} else if (duration == smallDuration) {					//small duration¶				if(exhale == mediumExhale) {					//med exhale¶					return true;¶				}¶			}	¶		}else if(distance == mediumDistance) {							//med distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			} else if(duration == smallDuration) {						//small duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			}else if(duration == largeDuration) {						//large duration¶				if(exhale == smallExhale) {						//small exhale¶					return true;¶				}¶			}¶		}else if(distance == largeDistance) {							//large distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			} else if (duration == largeDuration) {					//large duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			}¶		}¶		return false;¶	}¶	/* 	higher distance are safe, so interpolate low (can have 0)¶		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE¶	*/¶	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {¶		¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);¶		¶	}¶	public static boolean isInterpolatedSafe(int distance, int duration) {¶		//exhalation level set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);¶	}¶	public static boolean isInterpolatedSafe(int distance) {¶		//duration and exhalation levels set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		return isInterpolatedSafe(interpolatedDistance, mediumDuration);¶	}¶	public static boolean isDerivedSafe (int distance, int duration, int exhale) {¶		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx¶			return true;¶		}¶		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx¶			return true;¶		}¶		return false;¶	}¶	¶	public static void printGivenCombinations() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶	}¶	public static void printGeneratedCombinationDerivedSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);¶	}¶	public static void printGivenAndGeneratedCombinationsDerivedSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationDerivedSafety();¶		}¶	}¶	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		List<Integer[]> list = new ArrayList<Integer[]>();¶		if (interpolatedExhale < 0) {return list;}¶		if (interpolatedExhale == smallExhale) { 								//small exhale¶			 Integer[] a1 = {6,30};¶			 Integer[] a2 = {13,120};¶			list.add(a1);¶			list.add(a2);¶			return list;¶		} else if (interpolatedExhale == mediumExhale) {			//med exhale¶			 Integer[] a1 = {13,30};¶			 Integer[] a2 = {27,120};¶			 Integer[] a3 = {6,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			list.add(2, a3);¶			return list;¶		} else if (interpolatedExhale == largeExhale) {						//large exhale¶			 Integer[] a1 = {27,30};¶			 Integer[] a2 = {13,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			return list;¶		};¶		return list;¶	}¶	public static void printSafeDistancesAndDurations(int exhale) {¶		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);¶		System.out.print(exhale + ",[");¶		for (int i = 0; i < generatedList.size(); i++) {¶			System.out.print("{");¶			for (int jay = 0; jay < generatedList.get(i).length; jay++) {¶				System.out.print(generatedList.get(i)[jay]);¶				if (jay != generatedList.get(i).length - 1) {¶					System.out.print(",");¶				}¶			}¶			System.out.print("}");¶		}¶		System.out.print("]");¶		System.out.print("\n");¶	}¶	/**¶	  low interpolation to a sequence of values is either an element of the sequence or zero.¶	  If higher values of the parameter are safer, then it is interpolated low. ¶	 */¶	public static int distanceLowInterpolation(int distance) {¶		//low interpolation to a sequence of values is either an element of the sequence or zero¶		//If higher values of the parameter are safer, then it is interpolated low¶		int interpolatedDistance;¶		if (distance < smallDistance) {					//distance interpolation¶			interpolatedDistance = 0;¶		} else if(distance < mediumDistance) {¶			interpolatedDistance = smallDistance;¶		} else if(distance < largeDistance) {¶			interpolatedDistance = mediumDistance;¶		} else {¶			interpolatedDistance = largeDistance;¶		}¶		return interpolatedDistance;¶	}¶	/**¶	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	¶	public static int durationHighInterpolation(int duration) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedDuration;¶		if (duration > largeDuration) {					//duration interpolation¶			interpolatedDuration = Integer.MAX_VALUE;¶		} else if(duration > mediumDuration) {¶			interpolatedDuration = largeDuration;¶		} else if(duration > smallDuration) {¶			interpolatedDuration = mediumDuration;¶		} else {¶			interpolatedDuration = smallDuration;¶		}¶		return interpolatedDuration;¶	}	¶	/**¶	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels¶	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	public static int exhaleHighInterpolation(int exhalation) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedExhalation;¶		if (exhalation > largeExhale) {						//exhale interpolation¶			interpolatedExhalation = Integer.MAX_VALUE;¶		} else if(exhalation > mediumExhale) {¶			interpolatedExhalation = largeExhale;¶		} else if(exhalation > smallExhale) {¶			interpolatedExhalation = mediumExhale;¶		} else {¶			interpolatedExhalation = smallExhale;¶		}¶		return interpolatedExhalation;¶	}¶	¶	public static boolean isInferredSafe(int distance, int duration, int exhalation) {¶		 String TRUE = "true";¶		 String FALSE = "false";¶		 String resultAttributeName = "safe";¶		 String[] resultValueNames = {TRUE, FALSE};¶		 String[] featureNames = {"distance", "duration", "exhalation"};¶		¶		double[] anInputFeatureValues = {distance, duration, exhalation};¶		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);¶		return TRUE.equals(aResultString) ?true:false;¶	}¶	¶	public static int compareSafetyComputations() {¶		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");¶		int correctInferrences = 0;¶		for(int i = 0; i < tenRepetitions; i++) {¶			int distance = (int)(Math.random()*32);¶			int duration = (int)(Math.random()*144);¶			int exhale = (int)(Math.random()*60);¶			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);¶			boolean combinationInferred = isInferredSafe(distance, duration, exhale);¶			if(combinationDerived == combinationInferred) {¶				correctInferrences++;¶			}¶			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);¶		}¶		return correctInferrences;¶	}¶	¶	public static void printGeneratedCombinationInferredSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean inferredResult = isInferredSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);¶	}¶	public static void printGivenAndGeneratedCombinationsInferredSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationInferredSafety();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="742" _type="PauseCommand" date="Thu May 05 00:49:54 EDT 2022" range="20s-30s" starttimestamp="1651724647535" timestamp="1547174">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[23295]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="743" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:49:54 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="1547289" />
  <Command __id="741" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:49:54 EDT 2022" docASTNodeCount="74" docActiveCodeLength="504" docExpressionCount="44" docLength="504" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1547174">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\ClassifierFactory.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a2;
import gradingTools.comp524f20.assignment1.WekaUtil;
import weka.classifiers.Classifier;
import weka.classifiers.trees.J48;

public class ClassifierFactory {
	static Classifier Singleton;
	
	public static Classifier getSingleton() {
		if (Singleton == null) {
			Singleton = new J48();
			WekaUtil.buildTreeModel(Singleton, "SafeSocialization.txt");
		}
		return Singleton;
	}
	public static void setClassifier(Classifier newClassifier) {
		Singleton = newClassifier;
	}
}
]]></snapshot>
  </Command>
  <Command __id="745" _type="PauseCommand" date="Thu May 05 00:50:02 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1554780">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7491]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="746" _type="MoveCaretCommand" caretOffset="1276" date="Thu May 05 00:50:02 EDT 2022" docOffset="1384" starttimestamp="1651724647535" timestamp="1554941" />
  <Command __id="744" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:50:02 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9036" docExpressionCount="800" docLength="11103" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1554780">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶import java.util.ArrayList;¶import java.util.List;¶import a2.ClassifierFactory;¶import gradingTools.comp524f20.assignment1.WekaUtil;¶¶¶¶public class SocialDistancing {¶	/*	public static void main(String[] args) {¶		System.out.println("Yo");¶	}¶	 */	¶	static final int smallDistance = 6;¶	static final int mediumDistance = 13;¶	static final int largeDistance = 27;¶	¶	static final int smallDuration = 15;¶	static final int mediumDuration = 30;¶	static final int largeDuration = 120;¶	¶	static final int smallExhale = 10;¶	static final int mediumExhale = 30;¶	static final int largeExhale = 50;¶	¶	static int tenRepetitions = 10;¶	/**¶	If the combination of the method parameters is safe, based on the given data, the function¶	returns true. Otherwise, it returns false.¶	*/	¶	public static boolean isGivenSafe(int distance, int duration, int exhale) {¶		if(distance == smallDistance) { 					//small distance¶			if(duration == mediumDuration) {							//med duration¶				if(exhale == smallExhale) {					//small exhale¶					return true;¶				}¶			} else if (duration == smallDuration) {					//small duration¶				if(exhale == mediumExhale) {					//med exhale¶					return true;¶				}¶			}	¶		}else if(distance == mediumDistance) {							//med distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			} else if(duration == smallDuration) {						//small duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			}else if(duration == largeDuration) {						//large duration¶				if(exhale == smallExhale) {						//small exhale¶					return true;¶				}¶			}¶		}else if(distance == largeDistance) {							//large distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			} else if (duration == largeDuration) {					//large duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			}¶		}¶		return false;¶	}¶	/* 	higher distance are safe, so interpolate low (can have 0)¶		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE¶	*/¶	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {¶		¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);¶		¶	}¶	public static boolean isInterpolatedSafe(int distance, int duration) {¶		//exhalation level set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);¶	}¶	public static boolean isInterpolatedSafe(int distance) {¶		//duration and exhalation levels set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		return isInterpolatedSafe(interpolatedDistance, mediumDuration);¶	}¶	public static boolean isDerivedSafe (int distance, int duration, int exhale) {¶		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx¶			return true;¶		}¶		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx¶			return true;¶		}¶		return false;¶	}¶	¶	public static void printGivenCombinations() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶	}¶	public static void printGeneratedCombinationDerivedSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);¶	}¶	public static void printGivenAndGeneratedCombinationsDerivedSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationDerivedSafety();¶		}¶	}¶	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		List<Integer[]> list = new ArrayList<Integer[]>();¶		if (interpolatedExhale < 0) {return list;}¶		if (interpolatedExhale == smallExhale) { 								//small exhale¶			 Integer[] a1 = {6,30};¶			 Integer[] a2 = {13,120};¶			list.add(a1);¶			list.add(a2);¶			return list;¶		} else if (interpolatedExhale == mediumExhale) {			//med exhale¶			 Integer[] a1 = {13,30};¶			 Integer[] a2 = {27,120};¶			 Integer[] a3 = {6,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			list.add(2, a3);¶			return list;¶		} else if (interpolatedExhale == largeExhale) {						//large exhale¶			 Integer[] a1 = {27,30};¶			 Integer[] a2 = {13,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			return list;¶		};¶		return list;¶	}¶	public static void printSafeDistancesAndDurations(int exhale) {¶		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);¶		System.out.print(exhale + ",[");¶		for (int i = 0; i < generatedList.size(); i++) {¶			System.out.print("{");¶			for (int jay = 0; jay < generatedList.get(i).length; jay++) {¶				System.out.print(generatedList.get(i)[jay]);¶				if (jay != generatedList.get(i).length - 1) {¶					System.out.print(",");¶				}¶			}¶			System.out.print("}");¶		}¶		System.out.print("]");¶		System.out.print("\n");¶	}¶	/**¶	  low interpolation to a sequence of values is either an element of the sequence or zero.¶	  If higher values of the parameter are safer, then it is interpolated low. ¶	 */¶	public static int distanceLowInterpolation(int distance) {¶		//low interpolation to a sequence of values is either an element of the sequence or zero¶		//If higher values of the parameter are safer, then it is interpolated low¶		int interpolatedDistance;¶		if (distance < smallDistance) {					//distance interpolation¶			interpolatedDistance = 0;¶		} else if(distance < mediumDistance) {¶			interpolatedDistance = smallDistance;¶		} else if(distance < largeDistance) {¶			interpolatedDistance = mediumDistance;¶		} else {¶			interpolatedDistance = largeDistance;¶		}¶		return interpolatedDistance;¶	}¶	/**¶	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	¶	public static int durationHighInterpolation(int duration) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedDuration;¶		if (duration > largeDuration) {					//duration interpolation¶			interpolatedDuration = Integer.MAX_VALUE;¶		} else if(duration > mediumDuration) {¶			interpolatedDuration = largeDuration;¶		} else if(duration > smallDuration) {¶			interpolatedDuration = mediumDuration;¶		} else {¶			interpolatedDuration = smallDuration;¶		}¶		return interpolatedDuration;¶	}	¶	/**¶	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels¶	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	public static int exhaleHighInterpolation(int exhalation) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedExhalation;¶		if (exhalation > largeExhale) {						//exhale interpolation¶			interpolatedExhalation = Integer.MAX_VALUE;¶		} else if(exhalation > mediumExhale) {¶			interpolatedExhalation = largeExhale;¶		} else if(exhalation > smallExhale) {¶			interpolatedExhalation = mediumExhale;¶		} else {¶			interpolatedExhalation = smallExhale;¶		}¶		return interpolatedExhalation;¶	}¶	¶	public static boolean isInferredSafe(int distance, int duration, int exhalation) {¶		 String TRUE = "true";¶		 String FALSE = "false";¶		 String resultAttributeName = "safe";¶		 String[] resultValueNames = {TRUE, FALSE};¶		 String[] featureNames = {"distance", "duration", "exhalation"};¶		¶		double[] anInputFeatureValues = {distance, duration, exhalation};¶		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);¶		return TRUE.equals(aResultString) ?true:false;¶	}¶	¶	public static int compareSafetyComputations() {¶		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");¶		int correctInferrences = 0;¶		for(int i = 0; i < tenRepetitions; i++) {¶			int distance = (int)(Math.random()*32);¶			int duration = (int)(Math.random()*144);¶			int exhale = (int)(Math.random()*60);¶			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);¶			boolean combinationInferred = isInferredSafe(distance, duration, exhale);¶			if(combinationDerived == combinationInferred) {¶				correctInferrences++;¶			}¶			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);¶		}¶		return correctInferrences;¶	}¶	¶	public static void printGeneratedCombinationInferredSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean inferredResult = isInferredSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);¶	}¶	public static void printGivenAndGeneratedCombinationsInferredSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationInferredSafety();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="752" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:50:19 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1572154" type="Run" />
  <Command __id="755" _type="PauseCommand" date="Thu May 05 00:50:23 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1575951">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3797]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="754" _type="ShellCommand" date="Thu May 05 00:50:23 EDT 2022" starttimestamp="1651724647535" timestamp="1575951" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="757" _type="PauseCommand" date="Thu May 05 00:50:26 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1578480">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2529]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="756" _type="ConsoleOutput" date="Thu May 05 00:50:26 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1578480" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14
Test execution time (ms):24
Test execution time (ms):36
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@260d072a . Results may change."), Diff(INSERT,"Test execution time (ms):14¶Test execution time (ms):24¶Test execution time (ms):36¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="758" _type="ConsoleOutput" date="Thu May 05 00:50:26 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1578589" type="ConsoleOutput">
    <outputString><![CDATA[1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.25 the minimum required accuracy threshold should be 0.8
0.25
F21A2IsInferredSafeTest did not pass completely:view console output%0.756961958806221

Number of traces > 600  turning tracing off
Test execution time (ms):93
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
20,8,36,true
25,72,24,true
22,129,34,true
10,38,44,true
31,24,37,true
2,101,57,true
12,57,45,true
16,56,35,true
9,99,18,true
26,139,15,true
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
10,133,33,true
0,84,47,true
14,141,33,true
26,86,46,true
15,84,42,true
3,72,19,true
8,49,45,true
12,20,35,true
23,127,56,true
22,105,51,true
Test execution time (ms):33
Distance,Duration,Exhalation,Derived,Inferred
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):14¶Test execution time (ms):24¶Test execution time (ms):36¶Test execution time (ms):1"), Diff(INSERT,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.25 the minimum required accuracy threshold should be 0.8¶0.25¶F21A2IsInferredSafeTest did not pass completely:view console output%0.756961958806221¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):93¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶20,8,36,true¶25,72,24,true¶22,129,34,true¶10,38,44,true¶31,24,37,true¶2,101,57,true¶12,57,45,true¶16,56,35,true¶9,99,18,true¶26,139,15,true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶10,133,33,true¶0,84,47,true¶14,141,33,true¶26,86,46,true¶15,84,42,true¶3,72,19,true¶8,49,45,true¶12,20,35,true¶23,127,56,true¶22,105,51,true¶Test execution time (ms):33¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="759" _type="ConsoleOutput" date="Thu May 05 00:50:26 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1578720" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
15,123,7,false,true
12,94,4,false,true
18,106,54,false,true
25,112,7,true,true
24,61,30,false,true
9,106,52,false,true
9,33,19,false,true
21,114,37,false,true
14,6,21,true,true
11,64,24,false,true
Distance,Duration,Exhalation,Derived,Inferred
24,80,3,true,true
12,128,51,false,true
0,113,15,false,true
3,74,41,false,true
8,21,20,false,true
9,44,43,false,true
9,117,18,false,true
8,28,22,false,true
13,64,56,false,true
18,59,40,false,true
Distance,Duration,Exhalation,Derived,Inferred
29,1,52,false,true
7,62,42,false,true
6,99,2,false,true
21,1,42,true,true
3,125,46,false,true
25,50,10,true,true
31,9,2,true,true
29,71,43,false,true
25,3,51,false,true
29,55,56,false,true
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
24,62,20,false,true
24,123,20,false,true
29,60,23,true,true
0,62,12,false,true
31,42,56,false,true
1,20,6,false,true
13,54,45,false,true
9,21,44,false,true
3,107,33,false,true
28,41,0,true,true
Distance,Duration,Exhalation,Derived,Inferred
6,133,30,false,true
8,24,50,false,true
7,6,5,true,true
3,61,58,false,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.25 the minimum required accuracy threshold should be 0.8¶0.25¶F21A2IsInferredSafeTest did not pass completely:view console output%0.756961958806221¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):93¶Number of traces > 600  turning tracing off"), Diff(INSERT,"Distance,Duration,Exhalation,Derived,Inferred¶15,123,7,false,true¶12,94,4,false,true¶18,106,54,false,true¶25,112,7,true,true¶24,61,30,false,true¶9,106,52,false,true¶9,33,19,false,true¶21,114,37,false,true¶14,6,21,true,true¶11,64,24,false,true"), Diff(EQUAL,"¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50"), Diff(INSERT,"Derived,Inferred¶24,80,3,true,true¶12,128,51,false,true¶0,113,15,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"1"), Diff(EQUAL,"3,"), Diff(DELETE,"15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶20,8,36"), Diff(INSERT,"74,41,false,true¶8,21,20,false,true¶9,44,43,false,true¶9,117,18,false,true¶8,28,22,false,true¶13,64,56,false,true¶18,59,40,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶29,1,52,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"25,72,24,true¶22,129,34,true¶10,38,44,true¶31,24,37"), Diff(INSERT,"7,62,42,false,true¶6,99,2,false,true¶21,1,42,true,true¶3,125,46,false"), Diff(EQUAL,",true¶2"), Diff(DELETE,",101,57,true¶12,57,45,true¶16,56,35,true¶9,99,18"), Diff(INSERT,"5,50,10,true,true¶31,9,2,true,true¶29,71,43,false,true¶25,3,51,false"), Diff(EQUAL,",true¶2"), Diff(DELETE,"6,13"), Diff(EQUAL,"9,"), Diff(DELETE,"1"), Diff(INSERT,"5"), Diff(EQUAL,"5,"), Diff(DELETE,"true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50"), Diff(INSERT,"56,false,true¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,Derived,Inferred¶24,62,20,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"1"), Diff(INSERT,"24,12"), Diff(EQUAL,"3,"), Diff(DELETE,"1"), Diff(EQUAL,"20,"), Diff(DELETE,"10"), Diff(INSERT,"false"), Diff(EQUAL,",true¶2"), Diff(DELETE,"7,120,30,true¶6,15,30,true¶----------¶10,133,33,true¶0,84,47,true¶14,141,33,true¶26,86,46,true¶15,84,42,true¶3,72,19,true¶8,49,45,true¶12,20,35"), Diff(INSERT,"9,60,23,true,true¶0,62,12,false,true¶31,42,56,false,true¶1,20,6,false,true¶13,54,45,false,true¶9,21,44,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"2"), Diff(EQUAL,"3,1"), Diff(DELETE,"2"), Diff(INSERT,"0"), Diff(EQUAL,"7,"), Diff(DELETE,"56,true¶22,105,51,true¶Test execution time (ms):33¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(INSERT,"33,false,true¶28,41,0,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶6,133,30,false,true¶8,24,50,false,true¶7,6,5,true,true¶3,61,58,false,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="760" _type="ConsoleOutput" date="Thu May 05 00:50:26 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1578835" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):10
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Distance,Duration,Exhalation,Derived,Inferred¶15,123,7,false,true¶12,94,4,false,true¶18,106,54,false,true¶25,112,7,true,true¶24,61,30,false,true¶9,106,52,false,true¶9,33,19,false,true¶21,114,37,false,true¶14,6,21,true,true¶11,64,24,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶24,80,3,true,true¶12,128,51,false,true¶0,113,15,false,true¶3,74,41,false,true¶8,21,20,false,true¶9,44,43,false,true¶9,117,18,false,true¶8,28,22,false,true¶13,64,56,false,true¶18,59,40,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶29,1,52,false,true¶7,62,42,false,true¶6,99,2,false,true¶21,1,42,true,true¶3,125,46,false,true¶25,50,10,true,true¶31,9,2,true,true¶29,71,43,false,true¶25,3,51,false,true¶29,55,56,false,true¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,Derived,Inferred¶24,62,20,false,true¶24,123,20,false,true¶29,60,23,true,true¶0,62,12,false,true¶31,42,56,false,true¶1,20,6,false,true¶13,54,45,false,true¶9,21,44,false,true¶3,107,33,false,true¶28,41,0,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶6,133,30,false,true¶8,24,50,false,true¶7,6,5,true,true¶3,61,58,false,true"), Diff(INSERT,"Test execution time (ms):10"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="762" _type="PauseCommand" date="Thu May 05 00:50:27 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="1580084">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1249]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="761" _type="ConsoleOutput" date="Thu May 05 00:50:27 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1580084" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@4ecf151c . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):10"), Diff(INSERT,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@4ecf151c . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="764" _type="PauseCommand" date="Thu May 05 00:50:37 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="1590289">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10205]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="763" _type="ShellCommand" date="Thu May 05 00:50:37 EDT 2022" starttimestamp="1651724647535" timestamp="1590289" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="766" _type="PauseCommand" date="Thu May 05 00:50:49 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="1601998">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11709]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="765" _type="ShellCommand" date="Thu May 05 00:50:49 EDT 2022" starttimestamp="1651724647535" timestamp="1601998" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="768" _type="PauseCommand" date="Thu May 05 00:50:56 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1608935">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6937]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="769" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:50:58 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1610838" type="Run" />
  <Command __id="772" _type="PauseCommand" date="Thu May 05 00:51:01 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1614366">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3528]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="771" _type="ShellCommand" date="Thu May 05 00:51:01 EDT 2022" starttimestamp="1651724647535" timestamp="1614366" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="774" _type="PauseCommand" date="Thu May 05 00:51:04 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1616511">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2145]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="773" _type="ConsoleOutput" date="Thu May 05 00:51:04 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1616511" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):12
Test execution time (ms):21
Test execution time (ms):34
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@4ecf151c . Results may change."), Diff(INSERT,"Test execution time (ms):12¶Test execution time (ms):21¶Test execution time (ms):34¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="775" _type="ConsoleOutput" date="Thu May 05 00:51:04 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1616621" type="ConsoleOutput">
    <outputString><![CDATA[1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.21875 the minimum required accuracy threshold should be 0.8
0.21875
F21A2IsInferredSafeTest did not pass completely:view console output%0.7439411254728877

Number of traces > 600  turning tracing off
Test execution time (ms):77
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
10,70,43,true
30,75,44,true
19,89,56,true
25,61,5,true
28,61,36,true
23,17,40,true
26,120,30,true
6,41,52,true
28,83,20,true
4,41,38,true
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
18,81,13,true
23,125,5,true
23,22,56,true
22,60,40,true
9,124,22,true
22,32,13,true
20,37,3,true
19,16,43,true
29,142,33,true
18,41,48,true
Test execution time (ms):34
Distance,Duration,Exhalation,Derived,Inferred
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):12¶Test execution time (ms):21¶Test execution time (ms):34¶Test execution time (ms):0"), Diff(INSERT,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.21875 the minimum required accuracy threshold should be 0.8¶0.21875¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7439411254728877¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):77¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶10,70,43,true¶30,75,44,true¶19,89,56,true¶25,61,5,true¶28,61,36,true¶23,17,40,true¶26,120,30,true¶6,41,52,true¶28,83,20,true¶4,41,38,true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶18,81,13,true¶23,125,5,true¶23,22,56,true¶22,60,40,true¶9,124,22,true¶22,32,13,true¶20,37,3,true¶19,16,43,true¶29,142,33,true¶18,41,48,true¶Test execution time (ms):34¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="776" _type="ConsoleOutput" date="Thu May 05 00:51:04 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1616750" type="ConsoleOutput">
    <outputString><![CDATA[22,116,40,false,true
Distance,Duration,Exhalation,Derived,Inferred
8,138,49,false,true
20,13,55,false,true
20,70,57,false,true
4,57,12,false,true
4,90,39,false,true
22,116,46,false,true
27,53,17,true,true
25,49,40,false,true
29,76,9,true,true
11,27,29,false,true
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
8,95,31,false,true
24,88,26,false,true
21,86,13,false,true
25,70,59,false,true
13,76,46,false,true
16,103,39,false,true
17,82,20,false,true
21,135,14,false,true
16,34,14,false,true
19,33,7,true,true
Distance,Duration,Exhalation,Derived,Inferred
16,88,45,false,true
10,122,44,false,true
1,135,1,false,true
0,112,12,false,true
30,19,42,true,true
12,116,32,false,true
22,25,9,true,true
1,122,44,false,true
3,53,27,false,true
15,54,45,false,true
Distance,Duration,Exhalation,Derived,Inferred
15,19,22,true,true
6,118,38,false,true
19,105,58,false,true
14,111,41,false,true
13,139,56,false,true
5,87,37,false,true
30,50,8,true,true
7,86,30,false,true
9,109,23,false,true
6,0,25,true,true
Distance,Duration,Exhalation,Derived,Inferred
28,73,40,false,true
26,70,27,false,true
24,26,32,false,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.21875 the minimum required accuracy threshold should be 0.8¶0.21875¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7439411254728877¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):77"), Diff(INSERT,"22,116,40,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶8,138,49,false,true¶20,13,55,false,true¶20,70,57,false,true¶4,57,12,false,true¶4,90,39,false,true¶22,116,46,false,true¶27,53,17,true,true¶25,49,40,false,true¶29,76,9,true,true¶11,27,29,false,true"), Diff(EQUAL,"¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30"), Diff(INSERT,"Derived,Inferred¶8,95,31,false,true¶24,88,26,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"6,30,10,true¶27,30,50,true¶13,15,50"), Diff(INSERT,"21,86,13,false,true¶25,70,59,false,true¶13,76,46,false"), Diff(EQUAL,",true¶1"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,",1"), Diff(DELETE,"20,10"), Diff(INSERT,"03,39,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"7,"), Diff(DELETE,"120,30"), Diff(INSERT,"82,20,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"6"), Diff(INSERT,"21"), Diff(EQUAL,",1"), Diff(INSERT,"3"), Diff(EQUAL,"5,"), Diff(DELETE,"30,true¶----------¶10,70,43"), Diff(INSERT,"14,false,true¶16,34,14,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"30,75,44,true¶19,89,56,true¶25,61,5,true¶28,61,36"), Diff(INSERT,"19,33,7,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶16,88,45,false,true¶10,122,44,false,true¶1,135,1,false,true¶0,112,12,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"2"), Diff(EQUAL,"3"), Diff(INSERT,"0"), Diff(EQUAL,",1"), Diff(DELETE,"7"), Diff(INSERT,"9"), Diff(EQUAL,",4"), Diff(DELETE,"0"), Diff(INSERT,"2,true"), Diff(EQUAL,",true¶"), Diff(DELETE,"26,120,30,true¶6,41,52,true¶28,83,20"), Diff(INSERT,"12,116,32,false,true¶22,25,9,true,true¶1,122,44,false,true¶3,53,27,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"4,41,38"), Diff(INSERT,"15,54,45,false"), Diff(EQUAL,",true¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10"), Diff(INSERT,"Derived,Inferred¶15,19,22,true"), Diff(EQUAL,",true¶"), Diff(DELETE,"27,30,50"), Diff(INSERT,"6,118,38,false"), Diff(EQUAL,",true¶1"), Diff(DELETE,"3"), Diff(INSERT,"9"), Diff(EQUAL,",1"), Diff(INSERT,"0"), Diff(EQUAL,"5,5"), Diff(DELETE,"0"), Diff(INSERT,"8,false"), Diff(EQUAL,",true¶1"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,",1"), Diff(DELETE,"20,10,true¶27,120,30,true¶6,15,30,true¶----------¶18,81,13,true¶23,125,5,true¶23,22,56,true¶22,60,40,true¶9,124,22,true¶22,32,13,true¶20,37,3,true¶19,16,43,true¶29,142,33,true¶18,41,48,true¶Test execution time (ms):34¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(INSERT,"11,41,false,true¶13,139,56,false,true¶5,87,37,false,true¶30,50,8,true,true¶7,86,30,false,true¶9,109,23,false,true¶6,0,25,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶28,73,40,false,true¶26,70,27,false,true¶24,26,32,false,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="778" _type="PauseCommand" date="Thu May 05 00:51:05 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="1618435">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1685]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="777" _type="ConsoleOutput" date="Thu May 05 00:51:05 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1618435" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@2292b545 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"22,116,40,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶8,138,49,false,true¶20,13,55,false,true¶20,70,57,false,true¶4,57,12,false,true¶4,90,39,false,true¶22,116,46,false,true¶27,53,17,true,true¶25,49,40,false,true¶29,76,9,true,true¶11,27,29,false,true¶Number of traces > 600  turning t"), Diff(INSERT,"Re-running test g"), Diff(EQUAL,"ra"), Diff(DELETE,"c"), Diff(INSERT,"d"), Diff(EQUAL,"ing"), Diff(DELETE," off¶Distance,Duration,Exhalation,Derived,Inferred¶8,95,31,false,true¶24,88,26,false,true¶21,86,13,false,true¶25,70,59,false,true¶13,76,46,false,true¶16,103,39,false,true¶17,82,20,false,true¶21,135,14,false,true¶16,34,14,false,true¶19,33,7,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶16,88,45,false,true¶10,122,44,false,true¶1,135,1,false,true¶0,112,12,false,true¶30,19,42,true,true¶12,116,32,false,true¶22,25,9,true,true¶1,122,44,false,true¶3,53,27,false,true¶15,54,45,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶15,19,22,true,true¶6,118,38,false,true¶19,105,58,false,true¶14,111,41,false,true¶13,139,56,false,true¶5,87,37,false,true¶30,50,8,true,true¶7,86,30,false,true¶9,109,23,false,true¶6,0,25,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶28,73,40,false,true¶26,70,27,false,true¶24,26,32,false,true"), Diff(INSERT,"Tools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@2292b545 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="780" _type="PauseCommand" date="Thu May 05 00:51:12 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1625029">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6594]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="779" _type="ShellCommand" date="Thu May 05 00:51:12 EDT 2022" starttimestamp="1651724647535" timestamp="1625029" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="781" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:51:13 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1625686" type="Run" />
  <Command __id="782" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:51:13 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1625686" type="Run" />
  <Command __id="783" _type="ShellCommand" date="Thu May 05 00:51:13 EDT 2022" starttimestamp="1651724647535" timestamp="1626413" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="784" _type="ShellCommand" date="Thu May 05 00:51:14 EDT 2022" starttimestamp="1651724647535" timestamp="1626529" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="785" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:51:14 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1626691" type="Run" />
  <Command __id="786" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:51:14 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1626692" type="Run" />
  <Command __id="787" _type="ShellCommand" date="Thu May 05 00:51:14 EDT 2022" starttimestamp="1651724647535" timestamp="1627327" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="788" _type="ShellCommand" date="Thu May 05 00:51:15 EDT 2022" starttimestamp="1651724647535" timestamp="1627528" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="789" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:51:15 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1627713" type="Run" />
  <Command __id="790" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:51:15 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1627713" type="Run" />
  <Command __id="747" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:50:04 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1556870">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="792" _type="PauseCommand" date="Thu May 05 00:52:00 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="1672707">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[44994]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="791" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:00 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1672707">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="794" _type="PauseCommand" date="Thu May 05 00:52:07 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1680214">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[7507]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="793" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:07 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1680214">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="796" _type="PauseCommand" date="Thu May 05 00:52:13 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1685515">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[5301]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="795" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:13 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1685515">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="798" _type="PauseCommand" date="Thu May 05 00:52:17 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1690212">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[4697]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="797" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:17 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1690212">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="800" _type="PauseCommand" date="Thu May 05 00:52:24 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1696840">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[6628]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="799" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:24 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1696840">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="802" _type="PauseCommand" date="Thu May 05 00:52:29 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1701853">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[5013]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="801" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:29 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1701853">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="804" _type="PauseCommand" date="Thu May 05 00:52:38 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1711302">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[9448]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="803" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:38 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1711301">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="806" _type="PauseCommand" date="Thu May 05 00:52:45 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1717981">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[6680]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="805" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:45 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1717981">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="808" _type="PauseCommand" date="Thu May 05 00:52:51 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1723919">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[5938]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="807" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:51 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1723919">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="810" _type="PauseCommand" date="Thu May 05 00:52:56 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1728693">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[4774]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="809" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:52:56 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1728693">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="812" _type="PauseCommand" date="Thu May 05 00:53:01 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1733668">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[4975]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="811" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:53:01 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1733668">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="814" _type="PauseCommand" date="Thu May 05 00:53:07 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1740303">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[6635]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="813" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:53:07 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1740303">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="816" _type="PauseCommand" date="Thu May 05 00:53:13 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1745791">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[5488]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="815" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:53:13 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1745791">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="818" _type="PauseCommand" date="Thu May 05 00:53:17 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1750327">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[4536]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="817" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:53:17 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1750327">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="824" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:53:30 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1763017" type="Run" />
  <Command __id="826" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:53:30 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1763017" type="Run" />
  <Command __id="828" _type="PauseCommand" date="Thu May 05 00:53:34 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1766749">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3732]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="827" _type="ShellCommand" date="Thu May 05 00:53:34 EDT 2022" starttimestamp="1651724647535" timestamp="1766749" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="830" _type="PauseCommand" date="Thu May 05 00:53:38 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1771249">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4500]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="829" _type="ConsoleOutput" date="Thu May 05 00:53:38 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1771249" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):13
Test execution time (ms):19
Test execution time (ms):30
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@2292b545 . Results may change."), Diff(INSERT,"Test execution time (ms):13¶Test execution time (ms):19¶Test execution time (ms):30¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="831" _type="ConsoleOutput" date="Thu May 05 00:53:38 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1771359" type="ConsoleOutput">
    <outputString><![CDATA[1.0
When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65
0.6229508196721312
When testing random value the accuracy was found to be 0.1875 the minimum required accuracy threshold should be 0.8
0.1875
F21A2IsInferredSafeTest did not pass completely:view console output%0.7309202921395543

Number of traces > 600  turning tracing off
Test execution time (ms):83
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
16,87,14,true
25,7,39,true
28,19,33,true
3,53,22,true
25,142,0,true
23,72,15,true
19,26,39,true
30,140,1,true
26,103,19,true
7,84,46,true
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
27,26,32,true
23,57,41,true
1,108,59,true
22,57,5,true
12,18,47,true
23,128,44,true
9,128,24,true
31,54,34,true
9,3,55,true
22,62,0,true
Test execution time (ms):30
Distance,Duration,Exhalation,Derived,Inferred
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):13¶Test execution time (ms):19¶Test execution time (ms):30¶Test execution time (ms):1"), Diff(INSERT,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.1875 the minimum required accuracy threshold should be 0.8¶0.1875¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7309202921395543¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):83¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶16,87,14,true¶25,7,39,true¶28,19,33,true¶3,53,22,true¶25,142,0,true¶23,72,15,true¶19,26,39,true¶30,140,1,true¶26,103,19,true¶7,84,46,true¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶27,26,32,true¶23,57,41,true¶1,108,59,true¶22,57,5,true¶12,18,47,true¶23,128,44,true¶9,128,24,true¶31,54,34,true¶9,3,55,true¶22,62,0,true¶Test execution time (ms):30¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="832" _type="ConsoleOutput" date="Thu May 05 00:53:39 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1771474" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
30,24,29,true,true
13,131,43,false,true
21,1,58,false,true
28,84,24,true,true
9,105,27,false,true
11,93,23,false,true
4,79,58,false,true
13,133,40,false,true
7,70,36,false,true
1,69,38,false,true
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
17,139,45,false,true
16,54,8,true,true
18,13,3,true,true
8,96,34,false,true
30,15,54,false,true
6,133,41,false,true
5,142,10,false,true
12,57,30,false,true
3,32,41,false,true
17,28,16,true,true
Distance,Duration,Exhalation,Derived,Inferred
10,120,41,false,true
28,70,38,false,true
8,118,48,false,true
29,69,45,false,true
7,86,2,false,true
14,41,32,false,true
27,2,11,true,true
15,71,41,false,true
0,108,31,false,true
29,74,25,true,true
Distance,Duration,Exhalation,Derived,Inferred
13,19,43,false,true
14,70,39,false,true
12,29,56,false,true
11,14,59,false,true
5,142,14,false,true
19,125,17,false,true
17,64,50,false,true
15,34,47,false,true
16,98,30,false,true
4,1,49,false,true
Distance,Duration,Exhalation,Derived,Inferred
31,90,29,true,true
6,23,14,false,true
17,18,45,false,true
30,66,36,false,true
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1.0¶When testing near table value the accuracy was found to be 0.6229508196721312 the minimum required accuracy threshold should be 0.65¶0.6229508196721312¶When testing random value the accuracy was found to be 0.1875 the minimum required accuracy threshold should be 0.8¶0.1875¶F21A2IsInferredSafeTest did not pass completely:view console output%0.7309202921395543¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):83"), Diff(INSERT,"Distance,Duration,Exhalation,Derived,Inferred¶30,24,29,true,true¶13,131,43,false,true¶21,1,58,false,true¶28,84,24,true,true¶9,105,27,false,true¶11,93,23,false,true¶4,79,58,false,true¶13,133,40,false,true¶7,70,36,false,true¶1,69,38,false,true"), Diff(EQUAL,"¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30"), Diff(INSERT,"Derived,Inferred¶17,139,45,false"), Diff(EQUAL,",true¶"), Diff(INSERT,"1"), Diff(EQUAL,"6,"), Diff(DELETE,"30,10,true¶27,30,50"), Diff(INSERT,"54,8,true"), Diff(EQUAL,",true¶1"), Diff(DELETE,"3"), Diff(INSERT,"8"), Diff(EQUAL,",1"), Diff(DELETE,"5,50"), Diff(INSERT,"3,3"), Diff(EQUAL,",true"), Diff(DELETE,"¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶16,87,14,true¶25,7,39,true¶28,19,33,true¶3,53,22"), Diff(INSERT,",true¶8,96,34,false,true¶30,15,54,false,true¶6,133,41,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"2"), Diff(EQUAL,"5,142,"), Diff(INSERT,"1"), Diff(EQUAL,"0,"), Diff(DELETE,"true¶23,72,15,true¶19,26,39,true¶30,140,1,true¶26,103,19,true¶7,84,46"), Diff(INSERT,"false,true¶12,57,30,false,true¶3,32,41,false,true¶17,28,16,true"), Diff(EQUAL,",true¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10"), Diff(INSERT,"Derived,Inferred¶10,120,41,false,true¶28,70,38,false,true¶8,118,48,false,true¶29,69,45,false,true¶7,86,2,false,true¶14,41,32,false"), Diff(EQUAL,",true¶27,"), Diff(DELETE,"120,30,true¶6,15,30,true¶----------¶27,26,32,true¶23,57,41,true¶1,108,59"), Diff(INSERT,"2,11,true,true¶15,71,41,false,true¶0,108,31,false,true¶29,74,25,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶13,19,43,false,true¶14,70,39,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"22,57,5"), Diff(INSERT,"12,29,56,false"), Diff(EQUAL,",true¶1"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,",1"), Diff(DELETE,"8,47"), Diff(INSERT,"4,59,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"23,128,44"), Diff(INSERT,"5,142,14,false"), Diff(EQUAL,",true¶"), Diff(INSERT,"1"), Diff(EQUAL,"9,12"), Diff(DELETE,"8,24,true¶31,54,34"), Diff(INSERT,"5,17,false,true¶17,64,50,false"), Diff(EQUAL,",true¶"), Diff(DELETE,"9,3,55,true¶22,62,0,true¶Test execution time (ms):30¶Distance,Duration,Exhalation,Derived,Inferred"), Diff(INSERT,"15,34,47,false,true¶16,98,30,false,true¶4,1,49,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶31,90,29,true,true¶6,23,14,false,true¶17,18,45,false,true¶30,66,36,false,true"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="834" _type="PauseCommand" date="Thu May 05 00:53:42 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1775066">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3592]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="833" _type="ConsoleOutput" date="Thu May 05 00:53:42 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1775066" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@1b93b4b2 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Distance,Duration,Exhalation,Derived,Inferred¶30,24,29,true,true¶13,131,43,false,true¶21,1,58,false,true¶28,84,24,true,true¶9,105,27,false,true¶11,93,23,false,true¶4,79,58,false,true¶13,133,40,false,true¶7,70,36,false,true¶1,69,38,false,true¶Number of traces > 600  turning t"), Diff(INSERT,"Re-running test g"), Diff(EQUAL,"ra"), Diff(DELETE,"c"), Diff(INSERT,"d"), Diff(EQUAL,"ing"), Diff(DELETE," off¶Distance,Duration,Exhalation,Derived,Inferred¶17,139,45,false,true¶16,54,8,true,true¶18,13,3,true,true¶8,96,34,false,true¶30,15,54,false,true¶6,133,41,false,true¶5,142,10,false,true¶12,57,30,false,true¶3,32,41,false,true¶17,28,16,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶10,120,41,false,true¶28,70,38,false,true¶8,118,48,false,true¶29,69,45,false,true¶7,86,2,false,true¶14,41,32,false,true¶27,2,11,true,true¶15,71,41,false,true¶0,108,31,false,true¶29,74,25,true,true¶Distance,Duration,Exhalation,Derived,Inferred¶13,19,43,false,true¶14,70,39,false,true¶12,29,56,false,true¶11,14,59,false,true¶5,142,14,false,true¶19,125,17,false,true¶17,64,50,false,true¶15,34,47,false,true¶16,98,30,false,true¶4,1,49,false,true¶Distance,Duration,Exhalation,Derived,Inferred¶31,90,29,true,true¶6,23,14,false,true¶17,18,45,false,true¶30,66,36,false,true"), Diff(INSERT,"Tools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@1b93b4b2 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="836" _type="PauseCommand" date="Thu May 05 00:54:03 EDT 2022" range="20s-30s" starttimestamp="1651724647535" timestamp="1796175">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[21109]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="841" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:54:29 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1821987" type="Run" />
  <Command __id="844" _type="PauseCommand" date="Thu May 05 00:54:33 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1825636">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3649]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="843" _type="ShellCommand" date="Thu May 05 00:54:33 EDT 2022" starttimestamp="1651724647535" timestamp="1825636" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="846" _type="PauseCommand" date="Thu May 05 00:54:35 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1827802">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2166]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="845" _type="ConsoleOutput" date="Thu May 05 00:54:35 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1827802" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14
Test execution time (ms):21
Test execution time (ms):32
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment2.testcases.F21A2IsInferredSafeTest@1b93b4b2 . Results may change."), Diff(INSERT,"Test execution time (ms):14¶Test execution time (ms):21¶Test execution time (ms):32¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="847" _type="ConsoleOutput" date="Thu May 05 00:54:35 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1827914" type="ConsoleOutput">
    <outputString><![CDATA[When testing table value the accuracy was found to be 0.0 the minimum required accuracy threshold should be 0.95
0.0
When testing near table value the accuracy was found to be 0.3770491803278688 the minimum required accuracy threshold should be 0.65
0.3770491803278688
When testing random value the accuracy was found to be 0.75 the minimum required accuracy threshold should be 0.8
0.75
F21A2IsInferredSafeTest did not pass completely:view console output%0.5058585540142917

Number of traces > 600  turning tracing off
Test execution time (ms):95
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
30,105,49,false
6,61,15,false
17,127,54,false
14,106,41,false
4,92,7,false
16,7,11,false
18,71,44,false
15,0,27,false
18,41,28,false
20,15,32,false
Distance,Duration,Exhalation,IsSafe
13,30,30,true
6,30,10,true
27,30,50,true
13,15,50,true
13,120,10,true
27,120,30,true
6,15,30,true
----------
29,121,7,false
12,22,7,false
10,73,49,false
4,85,37,false
22,37,12,false
0,129,41,false
11,0,12,false
3,121,48,false
22,135,28,false
11,64,29,false
Test execution time (ms):35
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):14¶Test execution time (ms):21¶Test execution time (ms):32"), Diff(INSERT,"When testing table value the accuracy was found to be 0.0 the minimum required accuracy threshold should be 0.95¶0.0¶When testing near table value the accuracy was found to be 0.3770491803278688 the minimum required accuracy threshold should be 0.65¶0.3770491803278688¶When testing random value the accuracy was found to be 0.75 the minimum required accuracy threshold should be 0.8¶0.75¶F21A2IsInferredSafeTest did not pass completely:view console output%0.5058585540142917¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):95¶Number of traces > 600  turning tracing off¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶30,105,49,false¶6,61,15,false¶17,127,54,false¶14,106,41,false¶4,92,7,false¶16,7,11,false¶18,71,44,false¶15,0,27,false¶18,41,28,false¶20,15,32,false¶Distance,Duration,Exhalation,IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶29,121,7,false¶12,22,7,false¶10,73,49,false¶4,85,37,false¶22,37,12,false¶0,129,41,false¶11,0,12,false¶3,121,48,false¶22,135,28,false¶11,64,29,false"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"35"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="848" _type="ConsoleOutput" date="Thu May 05 00:54:35 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1827992" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
28,91,7,true,false
9,28,6,true,false
28,63,26,true,false
13,112,37,false,false
9,10,33,false,false
14,71,35,false,false
30,23,53,false,false
20,74,29,false,false
17,105,51,false,false
8,2,46,false,false
Distance,Duration,Exhalation,Derived,Inferred
9,28,32,false,false
7,27,39,false,false
23,141,10,false,false
29,135,55,false,false
3,42,8,false,false
31,140,53,false,false
4,42,6,false,false
15,59,49,false,false
4,49,9,false,false
31,22,22,true,false
Distance,Duration,Exhalation,Derived,Inferred
11,26,56,false,false
9,68,3,false,false
16,20,58,false,false
27,30,57,false,false
19,136,21,false,false
2,33,9,false,false
31,121,30,false,false
16,126,45,false,false
25,107,44,false,false
28,16,21,true,false
Number of traces > 600  turning tracing off
Distance,Duration,Exhalation,Derived,Inferred
27,132,35,false,false
16,49,21,false,false
15,42,38,false,false
16,51,6,true,false
22,40,18,false,false
27,104,15,true,false
21,55,44,false,false
19,20,57,false,false
1,124,59,false,false
1,88,26,false,false
Distance,Duration,Exhalation,Derived,Inferred
0,53,10,false,false
5,101,52,false,false
18,10,43,true,false
10,22,26,false,false
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"When testing table value the accuracy was found to be 0.0 the minimum required accuracy threshold should be 0.95¶0.0¶When testing near table value the accuracy was found to be 0.3770491803278688 the minimum required accuracy threshold should be 0.65¶0.3770491803278688¶When testing random value the accuracy was found to be 0.75 the minimum required accuracy threshold should be 0.8¶0.75¶F21A2IsInferredSafeTest did not pass completely:view console output%0.5058585540142917¶¶Number of traces > 600  turning tracing off¶Test execution time (ms):95¶Number of traces > 600  turning tracing off"), Diff(INSERT,"Distance,Duration,Exhalation,Derived,Inferred¶28,91,7,true,false¶9,28,6,true,false¶28,63,26,true,false¶13,112,37,false,false¶9,10,33,false,false¶14,71,35,false,false¶30,23,53,false,false¶20,74,29,false,false¶17,105,51,false,false¶8,2,46,false,false"), Diff(EQUAL,"¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶13,30,30,true¶6,30,10,true¶27,30,50,tru"), Diff(INSERT,"Derived,Inferred¶9,28,32,false,false¶7,27,39,false,false¶23,141,10,false,fals"), Diff(EQUAL,"e¶"), Diff(DELETE,"13"), Diff(INSERT,"29"), Diff(EQUAL,",1"), Diff(INSERT,"3"), Diff(EQUAL,"5,5"), Diff(DELETE,"0,tru"), Diff(INSERT,"5,false,fals"), Diff(EQUAL,"e¶"), Diff(DELETE,"1"), Diff(EQUAL,"3,"), Diff(DELETE,"120,10,tru"), Diff(INSERT,"42,8,false,fals"), Diff(EQUAL,"e¶"), Diff(DELETE,"27"), Diff(INSERT,"31"), Diff(EQUAL,",1"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"0,"), Diff(DELETE,"30,true¶6,15,30,true¶----------¶30,105,49"), Diff(INSERT,"53,false,false¶4,42,6,false,false¶15,59,49,false,false¶4,49,9,false,false¶31,22,22,true,false¶Distance,Duration,Exhalation,Derived,Inferred¶11,26,56,false,false¶9,68,3,false"), Diff(EQUAL,",false¶"), Diff(INSERT,"1"), Diff(EQUAL,"6,"), Diff(DELETE,"61,15"), Diff(INSERT,"20,58,false"), Diff(EQUAL,",false¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"7,"), Diff(DELETE,"127,54"), Diff(INSERT,"30,57,false"), Diff(EQUAL,",false¶1"), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,",1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"6,"), Diff(DELETE,"4"), Diff(INSERT,"2"), Diff(EQUAL,"1,false"), Diff(DELETE,"¶4,92,7"), Diff(INSERT,",false¶2,33,9,false"), Diff(EQUAL,",false¶"), Diff(INSERT,"3"), Diff(EQUAL,"1"), Diff(DELETE,"6,7"), Diff(EQUAL,",1"), Diff(INSERT,"2"), Diff(EQUAL,"1,"), Diff(DELETE,"false¶18,71,44"), Diff(INSERT,"30,false,false¶16,126,45,false"), Diff(EQUAL,",false¶"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"5,"), Diff(DELETE,"0,27,false¶18,41,28"), Diff(INSERT,"107,44,false"), Diff(EQUAL,",false¶2"), Diff(DELETE,"0"), Diff(INSERT,"8"), Diff(EQUAL,",1"), Diff(DELETE,"5,32,false"), Diff(INSERT,"6,21,true,false¶Number of traces > 600  turning tracing off"), Diff(EQUAL,"¶Distance,Duration,Exhalation,"), Diff(DELETE,"IsSafe¶"), Diff(INSERT,"Derived,Inferred¶27,"), Diff(EQUAL,"13"), Diff(INSERT,"2"), Diff(EQUAL,",3"), Diff(DELETE,"0,30,tru"), Diff(INSERT,"5,false,fals"), Diff(EQUAL,"e¶"), Diff(INSERT,"1"), Diff(EQUAL,"6,"), Diff(DELETE,"30,10,true¶27,30,50,true¶13,15,50,true¶13,120,10,true¶27,120,30,true¶6,15,30,true¶----------¶29,121,"), Diff(INSERT,"49,21,false,false¶15,42,38,false,false¶16,51,6,true,false¶22,40,18,false,false¶27,104,15,true,false¶21,55,44,false,false¶19,20,5"), Diff(EQUAL,"7,false"), Diff(DELETE,"¶12,22,7,false¶10,73,49,false¶4,85,37,false¶22,37"), Diff(INSERT,",false¶1,124,59,false,false¶1,88,26,false,false¶Distance,Duration,Exhalation,Derived,Inferred¶0,53"), Diff(EQUAL,",1"), Diff(DELETE,"2"), Diff(INSERT,"0"), Diff(EQUAL,",false"), Diff(DELETE,"¶0,129,41,false¶11,0,12,false¶3,121,48,false¶22,135,28"), Diff(INSERT,",false¶5,101,52,false,false¶18,10,43,true"), Diff(EQUAL,",false¶1"), Diff(DELETE,"1,64"), Diff(INSERT,"0,22"), Diff(EQUAL,",2"), Diff(DELETE,"9"), Diff(INSERT,"6"), Diff(EQUAL,",false"), Diff(DELETE,"¶Test execution time (ms):35"), Diff(INSERT,",false"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="849" _type="ConsoleOutput" date="Thu May 05 00:54:35 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1828050" type="ConsoleOutput">
    <outputString><![CDATA[Distance,Duration,Exhalation,Derived,Inferred
15,63,58,false,false
5,129,22,false,false
12,91,26,false,false
14,37,38,false,false
12,40,21,false,false
4,6,15,false,false
25,83,2,true,false
20,114,32,false,false
18,13,34,true,false
18,96,5,true,false
Distance,Duration,Exhalation,Derived,Inferred
20,29,17,true,false
22,28,20,true,false
11,5,20,true,false
27,37,37,false,false
23,13,16,true,false
2,18,9,false,false
24,46,30,false,false
30,10,6,true,false
27,76,36,false,false
26,91,5,true,false
Distance,Duration,Exhalation,Derived,Inferred
7,119,37,false,false
10,18,43,false,false
30,88,18,true,false
24,73,1,true,false
31,115,20,true,false
12,52,47,false,false
3,49,36,false,false
11,132,6,false,false
15,136,56,false,false
6,59,19,false,false
Test execution time (ms):131
Number of traces > 600  turning tracing off
Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"28,91,7,true,false¶9,28,6,true,false¶28,63,26,tru"), Diff(INSERT,"15,63,58,fals"), Diff(EQUAL,"e,false¶"), Diff(DELETE,"13,112,37"), Diff(INSERT,"5,129,22"), Diff(EQUAL,",false,false¶"), Diff(DELETE,"9,10,33"), Diff(INSERT,"12,91,26"), Diff(EQUAL,",false,false¶14,"), Diff(INSERT,"3"), Diff(EQUAL,"7"), Diff(DELETE,"1"), Diff(EQUAL,",3"), Diff(DELETE,"5"), Diff(INSERT,"8"), Diff(EQUAL,",false,false¶"), Diff(DELETE,"30,23,53"), Diff(INSERT,"12,40,21"), Diff(EQUAL,",false,false¶"), Diff(DELETE,"20,74,29,false,false¶17,105,51,false,false¶8,2,46,false,false¶Distance,Duration,Exhalation,Derived,Inferred¶9,28,32,false,false¶7,27,39,fals"), Diff(INSERT,"4,6,15,false,false¶25,83,2,tru"), Diff(EQUAL,"e,false¶2"), Diff(DELETE,"3"), Diff(INSERT,"0"), Diff(EQUAL,",1"), Diff(DELETE,"41,10,false,false¶29,135,55,false,false¶3,42,8,false,false¶31,140,53,false,false¶4,42,6,false,false¶15,59,49,false,false¶4,49,9,false,false¶31,22,22"), Diff(INSERT,"14,32,false,false¶18,13,34,true,false¶18,96,5"), Diff(EQUAL,",true,false¶Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"11,26,56,false,false¶9,68,3,fals"), Diff(INSERT,"20,29,17,true,false¶22,28,20,tru"), Diff(EQUAL,"e,false¶1"), Diff(DELETE,"6"), Diff(INSERT,"1,5"), Diff(EQUAL,",20,"), Diff(DELETE,"58,fals"), Diff(INSERT,"tru"), Diff(EQUAL,"e,false¶27,3"), Diff(DELETE,"0,5"), Diff(INSERT,"7,3"), Diff(EQUAL,"7,false,false¶"), Diff(DELETE,"19"), Diff(INSERT,"23"), Diff(EQUAL,",13"), Diff(DELETE,"6,21,fals"), Diff(INSERT,",16,tru"), Diff(EQUAL,"e,false¶2,"), Diff(DELETE,"33"), Diff(INSERT,"18"), Diff(EQUAL,",9,false,false¶"), Diff(DELETE,"31,121"), Diff(INSERT,"24,46"), Diff(EQUAL,",30,false,false¶"), Diff(DELETE,"16,126,45,fals"), Diff(INSERT,"30,10,6,tru"), Diff(EQUAL,"e,false¶2"), Diff(DELETE,"5,107,44"), Diff(INSERT,"7,76,36"), Diff(EQUAL,",false,false¶2"), Diff(DELETE,"8,16,21"), Diff(INSERT,"6,91,5"), Diff(EQUAL,",true,false¶"), Diff(DELETE,"Number of traces > 600  turning tracing off¶"), Diff(EQUAL,"Distance,Duration,Exhalation,Derived,Inferred¶"), Diff(DELETE,"2"), Diff(EQUAL,"7,1"), Diff(DELETE,"32"), Diff(INSERT,"19"), Diff(EQUAL,",3"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL,",false,false¶1"), Diff(DELETE,"6,49,21,false,false¶15,42,38"), Diff(INSERT,"0,18,43"), Diff(EQUAL,",false,false¶"), Diff(DELETE,"16,51,6"), Diff(INSERT,"30,88,18"), Diff(EQUAL,",true,false¶2"), Diff(DELETE,"2,40,18,false,false¶27,104,15"), Diff(INSERT,"4,73,1,true,false¶31,115,20"), Diff(EQUAL,",true,false¶"), Diff(DELETE,"2"), Diff(EQUAL,"1"), Diff(INSERT,"2"), Diff(EQUAL,",5"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,",4"), Diff(DELETE,"4"), Diff(INSERT,"7"), Diff(EQUAL,",false,false¶"), Diff(DELETE,"19,20,57"), Diff(INSERT,"3,49,36"), Diff(EQUAL,",false,false¶"), Diff(INSERT,"1"), Diff(EQUAL,"1,1"), Diff(DELETE,"24,59"), Diff(INSERT,"32,6"), Diff(EQUAL,",false,false¶1"), Diff(DELETE,",88,2"), Diff(INSERT,"5,136,5"), Diff(EQUAL,"6,false,false¶"), Diff(DELETE,"Distance,Duration,Exhalation,Derived,Inferred¶0"), Diff(INSERT,"6"), Diff(EQUAL,",5"), Diff(DELETE,"3"), Diff(INSERT,"9"), Diff(EQUAL,",1"), Diff(DELETE,"0"), Diff(INSERT,"9"), Diff(EQUAL,",false,false¶"), Diff(DELETE,"5,101,52,false,false¶18,10,43,true,false¶10,22,26,false,false"), Diff(INSERT,"Test execution time (ms):131¶Number of traces > 600  turning tracing off¶Test execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="851" _type="PauseCommand" date="Thu May 05 00:54:51 EDT 2022" range="10s-20s" starttimestamp="1651724647535" timestamp="1843911">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15861]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="850" _type="ShellCommand" date="Thu May 05 00:54:51 EDT 2022" starttimestamp="1651724647535" timestamp="1843911" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="853" _type="PauseCommand" date="Thu May 05 00:55:25 EDT 2022" range="30s-1m" starttimestamp="1651724647535" timestamp="1877906">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[33995]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="852" _type="ShellCommand" date="Thu May 05 00:55:25 EDT 2022" starttimestamp="1651724647535" timestamp="1877906" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="855" _type="PauseCommand" date="Thu May 05 00:55:27 EDT 2022" range="1s-2s" starttimestamp="1651724647535" timestamp="1879590">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1684]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="854" _type="ConsoleOutput" date="Thu May 05 00:55:27 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1879590" type="ConsoleOutput">
    <outputString><![CDATA[SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0

Test execution time (ms):1
Cannot run test, no basic main class:
BasicMainTest did not pass completely:Could not create project. See console messages.%0.0

Test execution time (ms):9
SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null in class registry%0.0

Test execution time (ms):1
Cannot run test, no basic main class:
InterpolatingMainTest did not pass completely:Could not create project. See console messages.%0.0

Test execution time (ms):4
SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0

Test execution time (ms):1
Cannot run test, no basic main class:
DerivingMainTest did not pass completely:Could not create project. See console messages.%0.0

Test execution time (ms):2
SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0

Test execution time (ms):1
Cannot run test, no inferring main class:
InferringMainTest did not pass completely:Could not create project. See console messages.%0.0

Test execution time (ms):2
Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 
A2CommonPropertiesInherited did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):3
A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A2InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):1
A2NoHiddenFields did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A2NonPublicAccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0

Test execution time (ms):0
A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Social"), Diff(EQUAL,"Distance"), Diff(DELETE,",Duration,Exhalation,Derived,Inferred¶15,63,58,false,false¶5,129,22,false,false¶12,91,26,false,false¶14,37,38,false,false¶12,40,21,false,false¶4,6,15,false,false¶25,83,2,true,false¶20,114,32,false,false¶18,13,34,true,false¶18,96,5,true,false¶Distance,Duration,Exhalation,Derived,Inferred¶20,29,17,true,false¶22,28,20,true,false¶11,5,20,true,false¶27,37,37,false,false¶23,13,16,true,false¶2,18,9,false,false¶24,46,30,false,false¶30,10,6,true,false¶27,76,36,false,false¶26,91,5,true,false¶Distance,Duration,Exhalation,Derived,"), Diff(INSERT,"BasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0¶¶Test execution time (ms):1¶Cannot run test, no basic main class:¶BasicMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):9¶SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null in class registry%0.0¶¶Test execution time (ms):1¶Cannot run test, no basic main class:¶InterpolatingMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):4¶SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0¶¶Test execution time (ms):1¶Cannot run test, no basic main class:¶DerivingMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):2¶SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0¶¶Test execution time (ms):1¶Cannot run test, no inferring main class:¶InferringMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):2¶Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶A2CommonProperties"), Diff(EQUAL,"In"), Diff(DELETE,"f"), Diff(INSERT,"h"), Diff(EQUAL,"er"), Diff(DELETE,"red¶7,119,37,false,false¶10,18,43,false,false¶30,88,18,true,false¶24,73,1,true,false¶31,115,20,true,false¶12,52,47,false,false¶3,49,36,false,false¶11,132,6,false,false¶15,136,56,false,false¶6,59,19,false,false¶Test execution time (ms):131¶Number of traces > 600  turning tracing off¶Test execution time (ms):9"), Diff(INSERT,"ited did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):3¶A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A2InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶A2NoHiddenFields did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A2NonPublicAccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="857" _type="PauseCommand" date="Thu May 05 00:55:31 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1884013">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4423]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="868" _type="ProgramExecutionEvent" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:55:47 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1900055" type="Run" />
  <Command __id="870" _type="RunCommand" className="/joshep_A2/src/a2/A2Tests.java" date="Thu May 05 00:55:47 EDT 2022" kind="HitBreakPoint" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1900056" type="Run" />
  <Command __id="872" _type="PauseCommand" date="Thu May 05 00:55:51 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1903722">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[3666]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="871" _type="ShellCommand" date="Thu May 05 00:55:51 EDT 2022" starttimestamp="1651724647535" timestamp="1903722" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="874" _type="PauseCommand" date="Thu May 05 00:55:53 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1906185">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2463]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="873" _type="ConsoleOutput" date="Thu May 05 00:55:53 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1906185" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):35
Test execution time (ms):4
SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0

Test execution time (ms):2
SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null in class registry%0.0

Test execution time (ms):1
SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0

Test execution time (ms):1
SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0

Test execution time (ms):1
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):35¶Test execution time (ms):4¶"), Diff(EQUAL,"SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0¶¶Test execution time (ms):"), Diff(DELETE,"1¶Cannot run test, no basic main class:¶BasicMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):9"), Diff(INSERT,"2"), Diff(EQUAL,"¶SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null in class registry%0.0¶¶Test execution time (ms):1¶"), Diff(DELETE,"Cannot run test, no basic main class:¶InterpolatingMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):4¶SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0¶¶Test execution time (ms):1¶Cannot run test, no basic main class:¶DerivingMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):2¶SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0¶¶Test execution time (ms):1¶Cannot run test, no inferring main class:¶InferringMainTest did not pass completely:Could not create project. See console messages.%0.0¶¶Test execution time (ms):2¶Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶A2CommonPropertiesInherited did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):3¶A2CommonSignaturesAreInherited did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶A2Encapsulation did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A2InterfaceAsType did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):1¶A2NoHiddenFields did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A2NonPublicAccessModifiersMatched did not pass completely:No checkstyle output, check console error messages%0.0¶¶Test execution time (ms):0¶A2PublicMethodsOverride did not pass completely:No checkstyle output, check console error messages%0.0¶"), Diff(INSERT,"SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0¶¶Test execution time (ms):1¶SocialDistanceInferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0¶¶Test execution time (ms):1¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="876" _type="PauseCommand" date="Thu May 05 00:56:00 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1913303">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7118]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="875" _type="ShellCommand" date="Thu May 05 00:56:00 EDT 2022" starttimestamp="1651724647535" timestamp="1913303" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="878" _type="MoveCaretCommand" caretOffset="1276" date="Thu May 05 00:56:01 EDT 2022" docOffset="1384" starttimestamp="1651724647535" timestamp="1913627" />
  <Command __id="819" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:53:21 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1754375">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="837" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:54:03 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1796247">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="864" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:55:33 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1886026">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="877" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:56:01 EDT 2022" docASTNodeCount="1309" docActiveCodeLength="9036" docExpressionCount="800" docLength="11103" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1913507">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a1\SocialDistancing.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a1;¶¶import java.util.ArrayList;¶import java.util.List;¶import a2.ClassifierFactory;¶import gradingTools.comp524f20.assignment1.WekaUtil;¶¶¶¶public class SocialDistancing {¶	/*	public static void main(String[] args) {¶		System.out.println("Yo");¶	}¶	 */	¶	static final int smallDistance = 6;¶	static final int mediumDistance = 13;¶	static final int largeDistance = 27;¶	¶	static final int smallDuration = 15;¶	static final int mediumDuration = 30;¶	static final int largeDuration = 120;¶	¶	static final int smallExhale = 10;¶	static final int mediumExhale = 30;¶	static final int largeExhale = 50;¶	¶	static int tenRepetitions = 10;¶	/**¶	If the combination of the method parameters is safe, based on the given data, the function¶	returns true. Otherwise, it returns false.¶	*/	¶	public static boolean isGivenSafe(int distance, int duration, int exhale) {¶		if(distance == smallDistance) { 					//small distance¶			if(duration == mediumDuration) {							//med duration¶				if(exhale == smallExhale) {					//small exhale¶					return true;¶				}¶			} else if (duration == smallDuration) {					//small duration¶				if(exhale == mediumExhale) {					//med exhale¶					return true;¶				}¶			}	¶		}else if(distance == mediumDistance) {							//med distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			} else if(duration == smallDuration) {						//small duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			}else if(duration == largeDuration) {						//large duration¶				if(exhale == smallExhale) {						//small exhale¶					return true;¶				}¶			}¶		}else if(distance == largeDistance) {							//large distance¶			if(duration == mediumDuration) {								//med duration¶				if(exhale == largeExhale) {						//large exhale¶					return true;¶				}¶			} else if (duration == largeDuration) {					//large duration¶				if(exhale == mediumExhale) {						//med exhale¶					return true;¶				}¶			}¶		}¶		return false;¶	}¶	/* 	higher distance are safe, so interpolate low (can have 0)¶		lower duration and exhale are safe, so interpolate high (can have max integer) Integer.MAX_VALUE¶	*/¶	public static boolean isInterpolatedSafe(int distance, int duration, int exhale) {¶		¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		return isGivenSafe(interpolatedDistance, interpolatedDuration, interpolatedExhale);¶		¶	}¶	public static boolean isInterpolatedSafe(int distance, int duration) {¶		//exhalation level set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		int interpolatedDuration = durationHighInterpolation(duration);¶		return isInterpolatedSafe(interpolatedDistance, interpolatedDuration, mediumExhale);¶	}¶	public static boolean isInterpolatedSafe(int distance) {¶		//duration and exhalation levels set to medium¶		int interpolatedDistance = distanceLowInterpolation(distance);¶		return isInterpolatedSafe(interpolatedDistance, mediumDuration);¶	}¶	public static boolean isDerivedSafe (int distance, int duration, int exhale) {¶		if(distance >= smallDistance && duration <= mediumDuration && exhale <= smallExhale) { 	//sDist,mDur,sEx¶			return true;¶		}¶		if(distance >= smallDistance && duration <= smallDuration && exhale <= mediumExhale) { 	//sDist,sDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= mediumDuration && exhale <= mediumExhale) { 	//mDist,mDur,mEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= smallDuration && exhale <= largeExhale) { 	//mDist,sDur,lEx¶			return true;¶		}¶		if(distance >= mediumDistance && duration <= largeDuration && exhale <= smallExhale) { 	//mDist,lDur,sEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= mediumDuration && exhale <= largeExhale) { 	//lDist,mDur,lEx¶			return true;¶		}¶		if(distance >= largeDistance && duration <= largeDuration && exhale <= mediumExhale) { 	//lDist,lDur,mEx¶			return true;¶		}¶		return false;¶	}¶	¶	public static void printGivenCombinations() {¶		System.out.println("Distance,Duration,Exhalation,IsSafe");¶		System.out.println("13,30,30,true");¶		System.out.println("6,30,10,true");¶		System.out.println("27,30,50,true");¶		System.out.println("13,15,50,true");¶		System.out.println("13,120,10,true");¶		System.out.println("27,120,30,true");¶		System.out.println("6,15,30,true");¶		System.out.println("----------");¶	}¶	public static void printGeneratedCombinationDerivedSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean derivedResult = isDerivedSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + derivedResult);¶	}¶	public static void printGivenAndGeneratedCombinationsDerivedSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationDerivedSafety();¶		}¶	}¶	public static List<Integer[]> generateSafeDistancesAndDurations(int exhale) {¶		int interpolatedExhale = exhaleHighInterpolation(exhale);¶		List<Integer[]> list = new ArrayList<Integer[]>();¶		if (interpolatedExhale < 0) {return list;}¶		if (interpolatedExhale == smallExhale) { 								//small exhale¶			 Integer[] a1 = {6,30};¶			 Integer[] a2 = {13,120};¶			list.add(a1);¶			list.add(a2);¶			return list;¶		} else if (interpolatedExhale == mediumExhale) {			//med exhale¶			 Integer[] a1 = {13,30};¶			 Integer[] a2 = {27,120};¶			 Integer[] a3 = {6,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			list.add(2, a3);¶			return list;¶		} else if (interpolatedExhale == largeExhale) {						//large exhale¶			 Integer[] a1 = {27,30};¶			 Integer[] a2 = {13,15};¶			list.add(0, a1);¶			list.add(1, a2);¶			return list;¶		};¶		return list;¶	}¶	public static void printSafeDistancesAndDurations(int exhale) {¶		List<Integer[]> generatedList = generateSafeDistancesAndDurations(exhale);¶		System.out.print(exhale + ",[");¶		for (int i = 0; i < generatedList.size(); i++) {¶			System.out.print("{");¶			for (int jay = 0; jay < generatedList.get(i).length; jay++) {¶				System.out.print(generatedList.get(i)[jay]);¶				if (jay != generatedList.get(i).length - 1) {¶					System.out.print(",");¶				}¶			}¶			System.out.print("}");¶		}¶		System.out.print("]");¶		System.out.print("\n");¶	}¶	/**¶	  low interpolation to a sequence of values is either an element of the sequence or zero.¶	  If higher values of the parameter are safer, then it is interpolated low. ¶	 */¶	public static int distanceLowInterpolation(int distance) {¶		//low interpolation to a sequence of values is either an element of the sequence or zero¶		//If higher values of the parameter are safer, then it is interpolated low¶		int interpolatedDistance;¶		if (distance < smallDistance) {					//distance interpolation¶			interpolatedDistance = 0;¶		} else if(distance < mediumDistance) {¶			interpolatedDistance = smallDistance;¶		} else if(distance < largeDistance) {¶			interpolatedDistance = mediumDistance;¶		} else {¶			interpolatedDistance = largeDistance;¶		}¶		return interpolatedDistance;¶	}¶	/**¶	  high interpolation to a sequence of values is either an element of the sequence or max integer.If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	¶	public static int durationHighInterpolation(int duration) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedDuration;¶		if (duration > largeDuration) {					//duration interpolation¶			interpolatedDuration = Integer.MAX_VALUE;¶		} else if(duration > mediumDuration) {¶			interpolatedDuration = largeDuration;¶		} else if(duration > smallDuration) {¶			interpolatedDuration = mediumDuration;¶		} else {¶			interpolatedDuration = smallDuration;¶		}¶		return interpolatedDuration;¶	}	¶	/**¶	 Similarly, the exhalation level parameter is interpolated to small, medium large exhalation levels¶	 or the maximum integer. In Java, the maximum integer is Integer.MAX_VALUE. If lower values of the parameter are safer, then it is interpolated high.¶	 */¶	public static int exhaleHighInterpolation(int exhalation) {¶		//high interpolation to a sequence of values is either an element of the sequence or max integer¶		//If lower values of the parameter are safer, then it is interpolated high.¶		int interpolatedExhalation;¶		if (exhalation > largeExhale) {						//exhale interpolation¶			interpolatedExhalation = Integer.MAX_VALUE;¶		} else if(exhalation > mediumExhale) {¶			interpolatedExhalation = largeExhale;¶		} else if(exhalation > smallExhale) {¶			interpolatedExhalation = mediumExhale;¶		} else {¶			interpolatedExhalation = smallExhale;¶		}¶		return interpolatedExhalation;¶	}¶	¶	public static boolean isInferredSafe(int distance, int duration, int exhalation) {¶		 String TRUE = "true";¶		 String FALSE = "false";¶		 String resultAttributeName = "safe";¶		 String[] resultValueNames = {TRUE, FALSE};¶		 String[] featureNames = {"distance", "duration", "exhalation"};¶		¶		double[] anInputFeatureValues = {distance, duration, exhalation};¶		String aResultString = WekaUtil.predictString(ClassifierFactory.getSingleton(), featureNames, anInputFeatureValues, resultAttributeName, resultValueNames);¶		return TRUE.equals(aResultString) ?true:false;¶	}¶	¶	public static int compareSafetyComputations() {¶		System.out.println("Distance,Duration,Exhalation,Derived,Inferred");¶		int correctInferrences = 0;¶		for(int i = 0; i < tenRepetitions; i++) {¶			int distance = (int)(Math.random()*32);¶			int duration = (int)(Math.random()*144);¶			int exhale = (int)(Math.random()*60);¶			boolean combinationDerived = isDerivedSafe(distance, duration, exhale);¶			boolean combinationInferred = isInferredSafe(distance, duration, exhale);¶			if(combinationDerived == combinationInferred) {¶				correctInferrences++;¶			}¶			System.out.println(distance + "," + duration + "," + exhale + "," + combinationDerived + "," + combinationInferred);¶		}¶		return correctInferrences;¶	}¶	¶	public static void printGeneratedCombinationInferredSafety() {¶		 int distance = (int)(Math.random()*32);¶		 int duration = (int)(Math.random()*144);¶		 int exhale = (int)(Math.random()*60);¶¶		 boolean inferredResult = isInferredSafe(distance, duration, exhale);¶		System.out.println(distance + "," + duration + "," + exhale + "," + inferredResult);¶	}¶	public static void printGivenAndGeneratedCombinationsInferredSafety() {¶		printGivenCombinations();¶		for(int i = 0; i < tenRepetitions; i++) {¶			printGeneratedCombinationInferredSafety();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="880" _type="PauseCommand" date="Thu May 05 00:56:08 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1920865">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7238]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="881" _type="MoveCaretCommand" caretOffset="0" date="Thu May 05 00:56:08 EDT 2022" docOffset="0" starttimestamp="1651724647535" timestamp="1920997" />
  <Command __id="879" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:56:08 EDT 2022" docASTNodeCount="248" docActiveCodeLength="1934" docExpressionCount="112" docLength="2478" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1920865">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\src\a2\ClassRegistry.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a2;¶"), Diff(INSERT,"import a1.SocialDistancing;¶import a1.UtilityTesterMain;¶"), Diff(EQUAL,"import gradingTools.comp524f21. assignment2.F21A2SocialDistanceClassRegistry;¶¶public class ClassRegistry implements F21A2SocialDistanceClassRegistry{¶¶	@Override¶	public Class<?> getBasicSocialDistanceUtility() {¶		// TODO Auto-generated method stub¶		return "), Diff(DELETE,"a1."), Diff(EQUAL,"SocialDistancing.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistancDerivingModel() {¶		// TODO Auto-generated method stub¶		return DerivedModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistancInferringModel() {¶		// TODO Auto-generated method stub¶		return InferredModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceBasicModel() {¶		// TODO Auto-generated method stub¶		return BasicModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceClassifierFactory() {¶		// TODO Auto-generated method stub¶		return ClassifierFactory.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceController() {¶		// TODO Auto-generated method stub¶		return Controller.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceControllerFactory() {¶		// TODO Auto-generated method stub¶		return ControllerFactory.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceInterpolatingModel() {¶		// TODO Auto-generated method stub¶		return InterpolatedModel.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCBasicMain() {¶		// TODO Auto-generated method stub¶		return BasicMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCDerivingMain() {¶		// TODO Auto-generated method stub¶		return DerivedMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCInferringMain() {¶		// TODO Auto-generated method stub¶		return InferringMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceMVCInterpolatingMain() {¶		// TODO Auto-generated method stub¶		return InterpolatedMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceModelFactory() {¶		// TODO Auto-generated method stub¶		return ModelFactory.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceUilityTesterMain() {¶		// TODO Auto-generated method stub¶		return "), Diff(DELETE,"a1."), Diff(EQUAL,"UtilityTesterMain.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceView() {¶		// TODO Auto-generated method stub¶		return LogView.class;¶	}¶¶	@Override¶	public Class<?> getSocialDistanceViewFactory() {¶		// TODO Auto-generated method stub¶		return ViewFactory.class;¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package a2;
import a1.SocialDistancing;
import a1.UtilityTesterMain;
import gradingTools.comp524f21. assignment2.F21A2SocialDistanceClassRegistry;

public class ClassRegistry implements F21A2SocialDistanceClassRegistry{

	@Override
	public Class<?> getBasicSocialDistanceUtility() {
		// TODO Auto-generated method stub
		return SocialDistancing.class;
	}

	@Override
	public Class<?> getSocialDistancDerivingModel() {
		// TODO Auto-generated method stub
		return DerivedModel.class;
	}

	@Override
	public Class<?> getSocialDistancInferringModel() {
		// TODO Auto-generated method stub
		return InferredModel.class;
	}

	@Override
	public Class<?> getSocialDistanceBasicModel() {
		// TODO Auto-generated method stub
		return BasicModel.class;
	}

	@Override
	public Class<?> getSocialDistanceClassifierFactory() {
		// TODO Auto-generated method stub
		return ClassifierFactory.class;
	}

	@Override
	public Class<?> getSocialDistanceController() {
		// TODO Auto-generated method stub
		return Controller.class;
	}

	@Override
	public Class<?> getSocialDistanceControllerFactory() {
		// TODO Auto-generated method stub
		return ControllerFactory.class;
	}

	@Override
	public Class<?> getSocialDistanceInterpolatingModel() {
		// TODO Auto-generated method stub
		return InterpolatedModel.class;
	}

	@Override
	public Class<?> getSocialDistanceMVCBasicMain() {
		// TODO Auto-generated method stub
		return BasicMain.class;
	}

	@Override
	public Class<?> getSocialDistanceMVCDerivingMain() {
		// TODO Auto-generated method stub
		return DerivedMain.class;
	}

	@Override
	public Class<?> getSocialDistanceMVCInferringMain() {
		// TODO Auto-generated method stub
		return InferringMain.class;
	}

	@Override
	public Class<?> getSocialDistanceMVCInterpolatingMain() {
		// TODO Auto-generated method stub
		return InterpolatedMain.class;
	}

	@Override
	public Class<?> getSocialDistanceModelFactory() {
		// TODO Auto-generated method stub
		return ModelFactory.class;
	}

	@Override
	public Class<?> getSocialDistanceUilityTesterMain() {
		// TODO Auto-generated method stub
		return UtilityTesterMain.class;
	}

	@Override
	public Class<?> getSocialDistanceView() {
		// TODO Auto-generated method stub
		return LogView.class;
	}

	@Override
	public Class<?> getSocialDistanceViewFactory() {
		// TODO Auto-generated method stub
		return ViewFactory.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="883" _type="PauseCommand" date="Thu May 05 00:56:15 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1927932">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6934]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="882" _type="DiffBasedFileOpenCommand" date="Thu May 05 00:56:15 EDT 2022" projectName="joshep_A2" starttimestamp="1651724647535" timestamp="1927931">
    <filePath><![CDATA[C:\Users\User\eclipse-workspace\joshep_A2\SafeSocialization.txt]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="885" _type="PauseCommand" date="Thu May 05 00:56:18 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1931180">
    <prevType><![CDATA[Open File]]></prevType>
    <prev><![CDATA[DiffBasedFileOpenCommand]]></prev>
    <pause><![CDATA[3248]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="886" _type="MoveCaretCommand" caretOffset="1276" date="Thu May 05 00:56:18 EDT 2022" docOffset="1384" starttimestamp="1651724647535" timestamp="1931317" />
  <Command __id="888" _type="PauseCommand" date="Thu May 05 00:56:26 EDT 2022" range="5s-10s" starttimestamp="1651724647535" timestamp="1938956">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7639]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="887" _type="ShellCommand" date="Thu May 05 00:56:26 EDT 2022" starttimestamp="1651724647535" timestamp="1938956" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="890" _type="PauseCommand" date="Thu May 05 00:56:28 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1940960">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2004]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="889" _type="ConsoleOutput" date="Thu May 05 00:56:28 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1940960" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment1.testcases.socialDistance.requiredClasses.SocialDistanceUtilityProvided@26d41981 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):35¶Test execution time (ms):4¶SocialDistanceBasicMainProvided did not pass completely:getSocialDistanceMVCBasicMain returns null in class registry%0.0¶¶Test execution time (ms):2¶SocialDistanceInterpolatingMainProvided did not pass completely:getSocialDistanceMVCInterpolatingMain returns null in class registry%0.0¶¶Test execution time (ms):1¶SocialDistanceDerivingMainProvided did not pass completely:getSocialDistanceMVCDerivingMain returns null in class registry%0.0¶¶Test execution time (ms):1¶"), Diff(INSERT,"Re-running test gradingTools.comp524f20.assignment1.testcases.socialDistance.requiredClasses."), Diff(EQUAL,"SocialDistance"), Diff(DELETE,"InferringMainProvided did not pass completely:getSocialDistanceMVCInferringMain returns null in class registry%0.0¶¶Test execution time (ms):1¶Test execution time (ms):1"), Diff(INSERT,"UtilityProvided@26d41981 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="892" _type="PauseCommand" date="Thu May 05 00:56:30 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1942962">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2002]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="891" _type="ConsoleOutput" date="Thu May 05 00:56:30 EDT 2022" overflow="false" starttimestamp="1651724647535" timestamp="1942962" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f20.assignment1.testcases.socialDistance.requiredClasses.SocialDistanceBasicMainProvided@749435b8 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f20.assignment1.testcases.socialDistance.requiredClasses.SocialDistance"), Diff(DELETE,"Utility"), Diff(INSERT,"BasicMain"), Diff(EQUAL,"Provided@"), Diff(DELETE,"26d41981"), Diff(INSERT,"749435b8"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="894" _type="PauseCommand" date="Thu May 05 00:56:33 EDT 2022" range="2s-5s" starttimestamp="1651724647535" timestamp="1946230">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3268]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
</Events>
